<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Release Notes</title>
        <link>https://akngs.github.io/feed-bundler/gh-release-notes</link>
        <description>GitHub Release Notes</description>
        <lastBuildDate>Tue, 26 Oct 2021 12:33:20 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <copyright>N/A</copyright>
        <item>
            <title><![CDATA[Release notes from Ghost: 4.20.4]]></title>
            <link>https://github.com/TryGhost/Ghost/releases/tag/v4.20.4</link>
            <guid>https://github.com/TryGhost/Ghost/releases/tag/v4.20.4</guid>
            <pubDate>Tue, 26 Oct 2021 12:26:08 GMT</pubDate>
            <content:encoded><![CDATA[<ul>
<li><g-emoji class="g-emoji" alias="bug" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f41b.png">üêõ</g-emoji> Fixed 500 error when visiting an email-only post link - Naz</li>
<li><g-emoji class="g-emoji" alias="bug" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f41b.png">üêõ</g-emoji> Fixed GScan crash on files starting with package.json - Thibaut Patel</li>
<li><g-emoji class="g-emoji" alias="bug" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f41b.png">üêõ</g-emoji> Fixed GScan falsely triggering the "unused theme setting" error - Thibaut Patel</li>
<li><g-emoji class="g-emoji" alias="bug" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f41b.png">üêõ</g-emoji> Fixed error from custom settings sync when theme name contains <code>.</code> chars - Kevin Ansfield</li>
</ul>
<hr>
<p>View the changelogs for full details:</p>
<ul>
<li>Ghost - <a class="commit-link" href="https://github.com/TryGhost/Ghost/compare/v4.20.3...v4.20.4"><tt>v4.20.3...v4.20.4</tt></a></li>
<li>Admin - <a class="commit-link" href="https://github.com/TryGhost/Admin/compare/v4.20.3...v4.20.4">TryGhost/Admin@<tt>v4.20.3...v4.20.4</tt></a></li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from axios: v0.24.0]]></title>
            <link>https://github.com/axios/axios/releases/tag/v0.24.0</link>
            <guid>https://github.com/axios/axios/releases/tag/v0.24.0</guid>
            <pubDate>Tue, 26 Oct 2021 07:00:31 GMT</pubDate>
            <content:encoded><![CDATA[<h3>0.24.0 (October 25, 2021)</h3>
<p>Breaking changes:</p>
<ul>
<li>Revert: change type of AxiosResponse to any, please read lengthy discussion here: (<a href="https://github.com/axios/axios/issues/4141" data-hovercard-type="issue" data-hovercard-url="/axios/axios/issues/4141/hovercard">#4141</a>) pull request: (<a href="https://github.com/axios/axios/pull/4186" data-hovercard-type="pull_request" data-hovercard-url="/axios/axios/pull/4186/hovercard">#4186</a>)</li>
</ul>
<p>Huge thanks to everyone who contributed to this release via code (authors listed below) or via reviews and triaging on GitHub:</p>
<ul>
<li><a href="mailto:jasonsaayman@gmail.com">Jay</a></li>
<li><a href="https://github.com/ImRodry">Rodry</a></li>
<li><a href="https://github.com/remcohaszing">Remco Haszing</a></li>
<li><a href="https://github.com/ITenthusiasm">Isaiah Thomason</a></li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from filament: v1.12.10]]></title>
            <link>https://github.com/google/filament/releases/tag/v1.12.10</link>
            <guid>https://github.com/google/filament/releases/tag/v1.12.10</guid>
            <pubDate>Mon, 25 Oct 2021 21:33:27 GMT</pubDate>
            <content:encoded><![CDATA[<ul>
<li>engine: rewrite dynamic resolution scaling controller for better accuracy and less jittering.</li>
<li>Java: fix missing ASTC texture enum.</li>
<li>tools: Fix normal map issues in mipgen.</li>
<li>WebGL: expose some <code>SurfaceOrientation</code> functions.</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from kitty: Nightly builds]]></title>
            <link>https://github.com/kovidgoyal/kitty/releases/tag/nightly</link>
            <guid>https://github.com/kovidgoyal/kitty/releases/tag/nightly</guid>
            <pubDate>Mon, 25 Oct 2021 20:08:11 GMT</pubDate>
            <content:encoded><![CDATA[<p>Nightly release, generated on: 2021-10-25 20:07:20 UTC from commit: <a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/kovidgoyal/kitty/commit/9b7342b23185e754239ca3f8b0d290b337d8dd2a/hovercard" href="https://github.com/kovidgoyal/kitty/commit/9b7342b23185e754239ca3f8b0d290b337d8dd2a"><tt>9b7342b</tt></a>. For how to install nightly builds, see: <a href="https://sw.kovidgoyal.net/kitty/binary/#customizing-the-installation" rel="nofollow">https://sw.kovidgoyal.net/kitty/binary/#customizing-the-installation</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from storybook: v6.4.0-beta.20]]></title>
            <link>https://github.com/storybookjs/storybook/releases/tag/v6.4.0-beta.20</link>
            <guid>https://github.com/storybookjs/storybook/releases/tag/v6.4.0-beta.20</guid>
            <pubDate>Mon, 25 Oct 2021 19:24:13 GMT</pubDate>
            <content:encoded><![CDATA[<h3>Bug Fixes</h3>
<ul>
<li>Interactions: Do not cleanup state when loading initial story (<a href="https://github.com/storybookjs/storybook/pull/16462" data-hovercard-type="pull_request" data-hovercard-url="/storybookjs/storybook/pull/16462/hovercard">#16462</a>)</li>
<li>Addon-interactions: Add safety check on fileName parameter (<a href="https://github.com/storybookjs/storybook/pull/16454" data-hovercard-type="pull_request" data-hovercard-url="/storybookjs/storybook/pull/16454/hovercard">#16454</a>)</li>
<li>Core: Fix optional global features in PreviewWeb (<a href="https://github.com/storybookjs/storybook/pull/16448" data-hovercard-type="pull_request" data-hovercard-url="/storybookjs/storybook/pull/16448/hovercard">#16448</a>)</li>
</ul>
<h3>Maintenance</h3>
<ul>
<li>UI: Migrate router to react-router (<a href="https://github.com/storybookjs/storybook/pull/16440" data-hovercard-type="pull_request" data-hovercard-url="/storybookjs/storybook/pull/16440/hovercard">#16440</a>)</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from conductor: v3.3.2]]></title>
            <link>https://github.com/Netflix/conductor/releases/tag/v3.3.2</link>
            <guid>https://github.com/Netflix/conductor/releases/tag/v3.3.2</guid>
            <pubDate>Mon, 25 Oct 2021 16:55:55 GMT</pubDate>
            <content:encoded><![CDATA[<h2>What‚Äôs Changed</h2>
<ul>
<li>ErrorResponse sent from the server is copied to ConductorClientException (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1033925236" data-permission-text="Title is private" data-url="https://github.com/Netflix/conductor/issues/2529" data-hovercard-type="pull_request" data-hovercard-url="/Netflix/conductor/pull/2529/hovercard" href="https://github.com/Netflix/conductor/pull/2529">#2529</a>) <a class="user-mention" data-hovercard-type="user" data-hovercard-url="/users/aravindanr/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/aravindanr">@aravindanr</a></li>
</ul>
<h2>New</h2>
<ul>
<li>Terminate when no dynamic tasks are returned (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="987007780" data-permission-text="Title is private" data-url="https://github.com/Netflix/conductor/issues/2443" data-hovercard-type="pull_request" data-hovercard-url="/Netflix/conductor/pull/2443/hovercard" href="https://github.com/Netflix/conductor/pull/2443">#2443</a>) <a class="user-mention" data-hovercard-type="user" data-hovercard-url="/users/james-deee/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/james-deee">@james-deee</a></li>
</ul>
<h2>Refactor</h2>
<ul>
<li>Remove dependency on Netflix Servo (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1019966247" data-permission-text="Title is private" data-url="https://github.com/Netflix/conductor/issues/2503" data-hovercard-type="pull_request" data-hovercard-url="/Netflix/conductor/pull/2503/hovercard" href="https://github.com/Netflix/conductor/pull/2503">#2503</a>) <a class="user-mention" data-hovercard-type="user" data-hovercard-url="/users/taojwmware/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/taojwmware">@taojwmware</a></li>
</ul>
<h2>Documentation</h2>
<ul>
<li>Enable indexing for local config (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1027745889" data-permission-text="Title is private" data-url="https://github.com/Netflix/conductor/issues/2519" data-hovercard-type="pull_request" data-hovercard-url="/Netflix/conductor/pull/2519/hovercard" href="https://github.com/Netflix/conductor/pull/2519">#2519</a>) <a class="user-mention" data-hovercard-type="user" data-hovercard-url="/users/jxu-nflx/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/jxu-nflx">@jxu-nflx</a></li>
</ul>
<h2>Dependency Updates</h2>
<ul>
<li>Fix Security Vulnerability on xstream component (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1026963856" data-permission-text="Title is private" data-url="https://github.com/Netflix/conductor/issues/2517" data-hovercard-type="pull_request" data-hovercard-url="/Netflix/conductor/pull/2517/hovercard" href="https://github.com/Netflix/conductor/pull/2517">#2517</a>) <a class="user-mention" data-hovercard-type="user" data-hovercard-url="/users/taojwmware/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/taojwmware">@taojwmware</a></li>
<li>Remove dependency on Netflix Servo (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1019966247" data-permission-text="Title is private" data-url="https://github.com/Netflix/conductor/issues/2503" data-hovercard-type="pull_request" data-hovercard-url="/Netflix/conductor/pull/2503/hovercard" href="https://github.com/Netflix/conductor/pull/2503">#2503</a>) <a class="user-mention" data-hovercard-type="user" data-hovercard-url="/users/taojwmware/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/taojwmware">@taojwmware</a></li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from moby: v20.10.10]]></title>
            <link>https://github.com/moby/moby/releases/tag/v20.10.10</link>
            <guid>https://github.com/moby/moby/releases/tag/v20.10.10</guid>
            <pubDate>Mon, 25 Oct 2021 16:15:34 GMT</pubDate>
            <content:encoded><![CDATA[<h2>20.10.10</h2>
<blockquote>
<p><strong>IMPORTANT</strong></p>
<p>Due to <a href="https://github.com/golang/go/issues/40909" data-hovercard-type="issue" data-hovercard-url="/golang/go/issues/40909/hovercard">net/http changes</a> in <a href="https://golang.org/doc/go1.16#net/http" rel="nofollow">Go 1.16</a>,<br>
HTTP proxies configured through the <code>$HTTP_PROXY</code> environment variable are no<br>
longer used for TLS (<code>https://</code>) connections. Make sure you also set an <code>$HTTPS_PROXY</code><br>
environment variable for handling requests to <code>https://</code> URLs.</p>
<p>Refer to the <a href="/moby/moby/config/daemon/systemd.md#httphttps-proxy">HTTP/HTTPS proxy section</a><br>
to learn how to configure the Docker Daemon to use a proxy server.</p>
</blockquote>
<h3>Builder</h3>
<ul>
<li>Fix platform-matching logic to fix <code>docker build</code> using not finding images in<br>
the local image cache on Arm machines when using BuildKit <a href="https://github.com/moby/moby/pull/42954" data-hovercard-type="pull_request" data-hovercard-url="/moby/moby/pull/42954/hovercard">moby/moby#42954</a></li>
</ul>
<h2>Runtime</h2>
<ul>
<li>Add support for <code>clone3</code> syscall in the default seccomp policy to support running<br>
containers based on recent versions of Fedora and Ubuntu. <a href="https://github.com/moby/moby/pull/42836" data-hovercard-type="pull_request" data-hovercard-url="/moby/moby/pull/42836/hovercard">moby/moby/#42836</a>.</li>
<li>Windows: update hcsshim library to fix a bug in sparse file handling in container<br>
layers, which was exposed by recent changes in Windows <a href="https://github.com/moby/moby/pull/42944" data-hovercard-type="pull_request" data-hovercard-url="/moby/moby/pull/42944/hovercard">moby/moby#42944</a>.</li>
<li>Fix some situations where <code>docker stop</code> could hang forever <a href="https://github.com/moby/moby/pull/42956" data-hovercard-type="pull_request" data-hovercard-url="/moby/moby/pull/42956/hovercard">moby/moby#42956</a>.</li>
</ul>
<h3>Swarm</h3>
<ul>
<li>Fix an issue where updating a service did not roll back on failure <a href="https://github.com/moby/moby/pull/42875" data-hovercard-type="pull_request" data-hovercard-url="/moby/moby/pull/42875/hovercard">moby/moby#42875</a>.</li>
</ul>
<h2>Packaging</h2>
<ul>
<li>Add packages for Ubuntu 21.10 "Impish Indri" and Fedora 35.</li>
<li>Update <code>docker scan</code> to v0.9.0</li>
<li>Update Golang runtime to Go 1.16.9.</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from electron: electron v16.0.0-beta.3]]></title>
            <link>https://github.com/electron/electron/releases/tag/v16.0.0-beta.3</link>
            <guid>https://github.com/electron/electron/releases/tag/v16.0.0-beta.3</guid>
            <pubDate>Mon, 25 Oct 2021 15:25:18 GMT</pubDate>
            <content:encoded><![CDATA[<p>Note: This is a beta release.  Please file new issues for any bugs you find in it.</p>
<p>This release is published to npm under the beta tag and can be installed via <code>npm install electron@beta</code>, or <code>npm install electron@16.0.0-beta.3</code>.</p>
<h1>Release Notes for v16.0.0-beta.3</h1>
<h2>Fixes</h2>
<ul>
<li>Fixed an issue where <code>MediaMetadata</code> did not work properly. <a href="https://github.com/electron/electron/pull/31535" data-hovercard-type="pull_request" data-hovercard-url="/electron/electron/pull/31535/hovercard">#31535</a> <span>(Also in <a href="https://github.com/electron/electron/pull/31532" data-hovercard-type="pull_request" data-hovercard-url="/electron/electron/pull/31532/hovercard">13</a>, <a href="https://github.com/electron/electron/pull/31533" data-hovercard-type="pull_request" data-hovercard-url="/electron/electron/pull/31533/hovercard">14</a>)</span></li>
<li>Fixed an issue where windows with vibrancy types set on them would incorrectly have a white instead of transparent background. <a href="https://github.com/electron/electron/pull/31537" data-hovercard-type="pull_request" data-hovercard-url="/electron/electron/pull/31537/hovercard">#31537</a></li>
<li>Fixed event with invalid timestamp in trace log. <a href="https://github.com/electron/electron/pull/31423" data-hovercard-type="pull_request" data-hovercard-url="/electron/electron/pull/31423/hovercard">#31423</a> <span>(Also in <a href="https://github.com/electron/electron/pull/31421" data-hovercard-type="pull_request" data-hovercard-url="/electron/electron/pull/31421/hovercard">14</a>, <a href="https://github.com/electron/electron/pull/31422" data-hovercard-type="pull_request" data-hovercard-url="/electron/electron/pull/31422/hovercard">15</a>)</span></li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from prometheus: 2.31.0-rc.1 / 2021-10-25]]></title>
            <link>https://github.com/prometheus/prometheus/releases/tag/v2.31.0-rc.1</link>
            <guid>https://github.com/prometheus/prometheus/releases/tag/v2.31.0-rc.1</guid>
            <pubDate>Mon, 25 Oct 2021 15:22:54 GMT</pubDate>
            <content:encoded><![CDATA[<ul>
<li>[BUGFIX] UI: Fix assets loading when a prefix is used in <code>--web.route-prefix</code> or <code>--web.external-url</code>. <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1034945589" data-permission-text="Title is private" data-url="https://github.com/prometheus/prometheus/issues/9586" data-hovercard-type="pull_request" data-hovercard-url="/prometheus/prometheus/pull/9586/hovercard" href="https://github.com/prometheus/prometheus/pull/9586">#9586</a></li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from pytorch: PyTorch 1.10 Release, including CUDA Graphs APIs, Frontend and compiler improvements]]></title>
            <link>https://github.com/pytorch/pytorch/releases/tag/v1.10.0</link>
            <guid>https://github.com/pytorch/pytorch/releases/tag/v1.10.0</guid>
            <pubDate>Mon, 25 Oct 2021 15:21:55 GMT</pubDate>
            <content:encoded><![CDATA[<h1>1.10.0 Release Notes</h1>
<ul>
<li>Highlights</li>
<li>Backwards Incompatible Change</li>
<li>New Features</li>
<li>Improvements</li>
<li>Performance</li>
<li>Documentation</li>
</ul>
<h1>Highlights</h1>
<p>We are excited to announce the release of PyTorch 1.10. This release is composed of over 3,400 commits since 1.9, made by 426 contributors. We want to sincerely thank our community for continuously improving PyTorch.</p>
<p>PyTorch 1.10 updates are focused on improving training and performance of PyTorch, and developer usability. Highlights include:</p>
<ul>
<li>CUDA Graphs APIs are integrated to reduce CPU overheads for CUDA workloads.</li>
<li>Several frontend APIs such as FX, <code>torch.special</code>, and <code>nn.Module</code> Parametrization, have moved from beta to stable.</li>
<li>Support for automatic fusion in JIT Compiler expands to CPUs in addition to GPUs.</li>
<li>Android NNAPI support is now available in beta.</li>
</ul>
<p>You can check the blogpost that shows the new features <a href="https://pytorch.org/blog/pytorch-1.10-released/" rel="nofollow">here</a>.</p>
<h1>Backwards Incompatible changes</h1>
<h2>Python API</h2>
<h3><code>torch.any</code>/<code>torch.all</code> behavior changed slightly to be more consistent for zero-dimension, <code>uint8</code> tensors. (<a href="https://github.com/pytorch/pytorch/pull/64642" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64642/hovercard">#64642</a>)</h3>
<p>These two functions match the behavior of NumPy, returning an output dtype of bool for all support dtypes, except for <code>uint8</code> (in which case they return a 1 or a 0, but with <code>uint8</code> dtype). In some cases with 0-dim tensor inputs, the returned <code>uint8</code> value could mistakenly take on a value &gt; 1. This has now been fixed.</p>
<p align="center">
  </p><table align="center">
    <tbody><tr><th>1.9.1</th><th>1.10.0</th></tr>
    <tr valign="top">
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="&gt;&gt;&gt; torch.all(torch.tensor(42, dtype=torch.uint8))
tensor(1, dtype=torch.uint8)
&gt;&gt;&gt; torch.all(torch.tensor(42, dtype=torch.uint8), dim=0)
tensor(42, dtype=torch.uint8) # wrong, old behavior
      "><pre><span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">torch</span>.<span class="pl-en">all</span>(<span class="pl-s1">torch</span>.<span class="pl-en">tensor</span>(<span class="pl-c1">42</span>, <span class="pl-s1">dtype</span><span class="pl-c1">=</span><span class="pl-s1">torch</span>.<span class="pl-s1">uint8</span>))
<span class="pl-en">tensor</span>(<span class="pl-c1">1</span>, <span class="pl-s1">dtype</span><span class="pl-c1">=</span><span class="pl-s1">torch</span>.<span class="pl-s1">uint8</span>)
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">torch</span>.<span class="pl-en">all</span>(<span class="pl-s1">torch</span>.<span class="pl-en">tensor</span>(<span class="pl-c1">42</span>, <span class="pl-s1">dtype</span><span class="pl-c1">=</span><span class="pl-s1">torch</span>.<span class="pl-s1">uint8</span>), <span class="pl-s1">dim</span><span class="pl-c1">=</span><span class="pl-c1">0</span>)
<span class="pl-en">tensor</span>(<span class="pl-c1">42</span>, <span class="pl-s1">dtype</span><span class="pl-c1">=</span><span class="pl-s1">torch</span>.<span class="pl-s1">uint8</span>) <span class="pl-c"># wrong, old behavior</span>
      </pre></div></sub></td>
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="&gt;&gt;&gt; torch.all(torch.tensor(42, dtype=torch.uint8))
tensor(1, dtype=torch.uint8)
&gt;&gt;&gt; torch.all(torch.tensor(42, dtype=torch.uint8), dim=0)
tensor(1, dtype=torch.uint8) # new, corrected and consistent behavior
      "><pre><span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">torch</span>.<span class="pl-en">all</span>(<span class="pl-s1">torch</span>.<span class="pl-en">tensor</span>(<span class="pl-c1">42</span>, <span class="pl-s1">dtype</span><span class="pl-c1">=</span><span class="pl-s1">torch</span>.<span class="pl-s1">uint8</span>))
<span class="pl-en">tensor</span>(<span class="pl-c1">1</span>, <span class="pl-s1">dtype</span><span class="pl-c1">=</span><span class="pl-s1">torch</span>.<span class="pl-s1">uint8</span>)
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">torch</span>.<span class="pl-en">all</span>(<span class="pl-s1">torch</span>.<span class="pl-en">tensor</span>(<span class="pl-c1">42</span>, <span class="pl-s1">dtype</span><span class="pl-c1">=</span><span class="pl-s1">torch</span>.<span class="pl-s1">uint8</span>), <span class="pl-s1">dim</span><span class="pl-c1">=</span><span class="pl-c1">0</span>)
<span class="pl-en">tensor</span>(<span class="pl-c1">1</span>, <span class="pl-s1">dtype</span><span class="pl-c1">=</span><span class="pl-s1">torch</span>.<span class="pl-s1">uint8</span>) <span class="pl-c"># new, corrected and consistent behavior</span>
      </pre></div></sub></td>
    </tr>
  </tbody></table>
<p></p>
<h3>Remove deprecated <code>torch.{is,set}_deterministic</code> (<a href="https://github.com/pytorch/pytorch/pull/62158" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62158/hovercard">#62158</a>)</h3>
<p>This is the end of the deprecation cycle for both of these functions. You should be using <code>torch.use_deterministic_algorithms</code> and<code>torch.are_deterministic_algorithms_enabled</code> instead.</p>
<h2>Complex Numbers</h2>
<h3><strong>Conjugate View: <a href="https://pytorch.org/docs/1.10./generated/torch.conj.html" rel="nofollow"><code>tensor.conj()</code></a> now returns a view tensor that aliases the same memory and has conjugate bit set (<a href="https://github.com/pytorch/pytorch/pull/54987" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/54987/hovercard">#54987</a>, <a href="https://github.com/pytorch/pytorch/pull/60522" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60522/hovercard">#60522</a>, <a href="https://github.com/pytorch/pytorch/pull/66082" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/66082/hovercard">#66082</a>, <a href="https://github.com/pytorch/pytorch/pull/63602" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63602/hovercard">#63602</a>).</strong></h3>
<p>This means that <code>.conj()</code> is now an O(1) operation and returns a tensor that views the same memory as <code>tensor</code> and has conjugate bit set. This notion of conjugate bit enables fusion of operations with conjugation which gives a lot of performance benefit for operations like matrix multiplication. All out-of-place operations will have the same behavior as before, but an in-place operation on a conjugated tensor will additionally modify the input tensor.</p>
<p align="center">
  </p><table align="center">
    <tbody><tr><th>1.9.1</th><th>1.10.0</th></tr>
    <tr valign="top">
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="&gt;&gt;&gt; import torch
&gt;&gt;&gt; x = torch.tensor([1+2j])
&gt;&gt;&gt; y = x.conj()
&gt;&gt;&gt; y.add_(2)
&gt;&gt;&gt; print(x)
tensor([1.+2.j])
      "><pre><span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-k">import</span> <span class="pl-s1">torch</span>
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">x</span> <span class="pl-c1">=</span> <span class="pl-s1">torch</span>.<span class="pl-en">tensor</span>([<span class="pl-c1">1</span><span class="pl-c1">+</span><span class="pl-c1">2j</span>])
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">y</span> <span class="pl-c1">=</span> <span class="pl-s1">x</span>.<span class="pl-en">conj</span>()
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">y</span>.<span class="pl-en">add_</span>(<span class="pl-c1">2</span>)
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-en">print</span>(<span class="pl-s1">x</span>)
<span class="pl-en">tensor</span>([<span class="pl-c1">1.</span><span class="pl-c1">+</span><span class="pl-c1">2.j</span>])
      </pre></div></sub></td>
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="&gt;&gt;&gt; import torch
&gt;&gt;&gt; x = torch.tensor([1+2j])
&gt;&gt;&gt; y = x.conj()
&gt;&gt;&gt; y.add_(2)
&gt;&gt;&gt; print(x)
tensor([3.+2.j])
      "><pre><span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-k">import</span> <span class="pl-s1">torch</span>
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">x</span> <span class="pl-c1">=</span> <span class="pl-s1">torch</span>.<span class="pl-en">tensor</span>([<span class="pl-c1">1</span><span class="pl-c1">+</span><span class="pl-c1">2j</span>])
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">y</span> <span class="pl-c1">=</span> <span class="pl-s1">x</span>.<span class="pl-en">conj</span>()
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">y</span>.<span class="pl-en">add_</span>(<span class="pl-c1">2</span>)
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-en">print</span>(<span class="pl-s1">x</span>)
<span class="pl-en">tensor</span>([<span class="pl-c1">3.</span><span class="pl-c1">+</span><span class="pl-c1">2.j</span>])
      </pre></div></sub></td>
    </tr>
  </tbody></table>
<p></p>
<p>Note: You can verify if the conj bit is set by calling <code>tensor.is_conj()</code>. The conjugation can be resolved, i.e., you can obtain a new tensor that doesn‚Äôt share storage with the input tensor at any time by calling <code>conjugated_tensor.clone()</code> or <code>conjugated_tensor.resolve_conj()</code> .</p>
<p>Note that these conjugated tensors behave differently from the corresponding numpy arrays obtained from <code>np.conj()</code> when an in-place operation is performed on them (similar to the example shown above).</p>
<h3><strong>Negative View: <code>tensor.conj().neg()</code> returns a view tensor that aliases the same memory as both tensor and <code>tensor.conj()</code> and has a negative bit set (<a href="https://github.com/pytorch/pytorch/pull/56058" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/56058/hovercard">#56058</a>).</strong></h3>
<p><code>conjugated_tensor.neg()</code> continues to be an O(1) operation, but the returned tensor shares memory with both <code>tensor</code> and <code>conjugated_tensor</code>.</p>
<p align="center">
  </p><table align="center">
    <tbody><tr><th>1.9.1</th><th>1.10.0</th></tr>
    <tr valign="top">
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="&gt;&gt;&gt; x = torch.tensor([1+2j])
&gt;&gt;&gt; y = x.conj()
&gt;&gt;&gt; z = y.imag
&gt;&gt;&gt; z.add_(2)
&gt;&gt;&gt; print(x)
tensor([1.+2.j])
      "><pre><span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">x</span> <span class="pl-c1">=</span> <span class="pl-s1">torch</span>.<span class="pl-en">tensor</span>([<span class="pl-c1">1</span><span class="pl-c1">+</span><span class="pl-c1">2j</span>])
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">y</span> <span class="pl-c1">=</span> <span class="pl-s1">x</span>.<span class="pl-en">conj</span>()
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">z</span> <span class="pl-c1">=</span> <span class="pl-s1">y</span>.<span class="pl-s1">imag</span>
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">z</span>.<span class="pl-en">add_</span>(<span class="pl-c1">2</span>)
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-en">print</span>(<span class="pl-s1">x</span>)
<span class="pl-en">tensor</span>([<span class="pl-c1">1.</span><span class="pl-c1">+</span><span class="pl-c1">2.j</span>])
      </pre></div></sub></td>
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="&gt;&gt;&gt; x = torch.tensor([1+2j])
&gt;&gt;&gt; y = x.conj()
&gt;&gt;&gt; z = y.imag
&gt;&gt;&gt; print(z.is_neg())
True
&gt;&gt;&gt; z.add_(2)
&gt;&gt;&gt; print(x)
tensor([1.-0.j])
      "><pre><span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">x</span> <span class="pl-c1">=</span> <span class="pl-s1">torch</span>.<span class="pl-en">tensor</span>([<span class="pl-c1">1</span><span class="pl-c1">+</span><span class="pl-c1">2j</span>])
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">y</span> <span class="pl-c1">=</span> <span class="pl-s1">x</span>.<span class="pl-en">conj</span>()
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">z</span> <span class="pl-c1">=</span> <span class="pl-s1">y</span>.<span class="pl-s1">imag</span>
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-en">print</span>(<span class="pl-s1">z</span>.<span class="pl-en">is_neg</span>())
<span class="pl-c1">True</span>
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">z</span>.<span class="pl-en">add_</span>(<span class="pl-c1">2</span>)
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-en">print</span>(<span class="pl-s1">x</span>)
<span class="pl-en">tensor</span>([<span class="pl-c1">1.</span><span class="pl-c1">-</span><span class="pl-c1">0.j</span>])
      </pre></div></sub></td>
    </tr>
  </tbody></table>
<p></p>
<h3><code>tensor.numpy()</code> now throws <code>RuntimeError</code> when called on a tensor with conjugate or negative bit set (<a href="https://github.com/pytorch/pytorch/pull/61925" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61925/hovercard">#61925</a>).</h3>
<p>Because the notion of conjugate bit and negative bit doesn‚Äôt exist outside of PyTorch, calling operations that return a Python object viewing the same memory as input like <code>.numpy()</code> would no longer work for tensors with conjugate or negative bit set.</p>
<p align="center">
  </p><table align="center">
    <tbody><tr><th>1.9.1</th><th>1.10.0</th></tr>
    <tr valign="top">
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="&gt;&gt;&gt; x = torch.tensor([1+2j])
&gt;&gt;&gt; y = x.conj().imag
&gt;&gt;&gt; print(y.numpy())
[2.]
      "><pre><span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">x</span> <span class="pl-c1">=</span> <span class="pl-s1">torch</span>.<span class="pl-en">tensor</span>([<span class="pl-c1">1</span><span class="pl-c1">+</span><span class="pl-c1">2j</span>])
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">y</span> <span class="pl-c1">=</span> <span class="pl-s1">x</span>.<span class="pl-en">conj</span>().<span class="pl-s1">imag</span>
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-en">print</span>(<span class="pl-s1">y</span>.<span class="pl-en">numpy</span>())
[<span class="pl-c1">2.</span>]
      </pre></div></sub></td>
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="&gt;&gt;&gt; x = torch.tensor([1+2j])
&gt;&gt;&gt; y = x.conj().imag
&gt;&gt;&gt; print(y.numpy())
RuntimeError: Can't call numpy() on Tensor that has negative
bit set. Use tensor.resolve_neg().numpy() instead.
      "><pre><span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">x</span> <span class="pl-c1">=</span> <span class="pl-s1">torch</span>.<span class="pl-en">tensor</span>([<span class="pl-c1">1</span><span class="pl-c1">+</span><span class="pl-c1">2j</span>])
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-s1">y</span> <span class="pl-c1">=</span> <span class="pl-s1">x</span>.<span class="pl-en">conj</span>().<span class="pl-s1">imag</span>
<span class="pl-c1">&gt;&gt;</span><span class="pl-c1">&gt;</span> <span class="pl-en">print</span>(<span class="pl-s1">y</span>.<span class="pl-en">numpy</span>())
<span class="pl-v">RuntimeError</span>: <span class="pl-v">Can</span>'<span class="pl-s1">t</span> <span class="pl-s1">call</span> <span class="pl-en">numpy</span>() <span class="pl-s1">on</span> <span class="pl-v">Tensor</span> <span class="pl-s1">that</span> <span class="pl-s1">has</span> <span class="pl-s1">negative</span>
<span class="pl-s1">bit</span> <span class="pl-s1">set</span>. <span class="pl-v">Use</span> <span class="pl-s1">tensor</span>.<span class="pl-en">resolve_neg</span>().<span class="pl-en">numpy</span>() <span class="pl-s1">instead</span>.
      </pre></div></sub></td>
    </tr>
  </tbody></table>
<p></p>
<h2>Autograd</h2>
<h3>Raise <code>TypeError</code> instead of <code>RuntimeError</code> when assigning to a Tensor‚Äôs grad field with wrong type (<a href="https://github.com/pytorch/pytorch/pull/64876" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64876/hovercard">#64876</a>)</h3>
<p>Setting the <code>.grad</code> field with a non-None and non-Tensor object used to return a <code>RuntimeError</code> but it now properly returns a <code>TypeError</code>. If your code was catching this error, you should simply update it to catch a <code>TypeError</code> instead of a <code>RuntimeError</code>.</p>
<p align="center">
  </p><table align="center">
    <tbody><tr><th>1.9.1</th><th>1.10.0</th></tr>
    <tr valign="top">
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="try:
    # Assigning an int to a Tensor's grad field
    a.grad = 0
except RuntimeError as e:
    pass
      "><pre><span class="pl-k">try</span>:
    <span class="pl-c"># Assigning an int to a Tensor's grad field</span>
    <span class="pl-s1">a</span>.<span class="pl-s1">grad</span> <span class="pl-c1">=</span> <span class="pl-c1">0</span>
<span class="pl-k">except</span> <span class="pl-v">RuntimeError</span> <span class="pl-k">as</span> <span class="pl-s1">e</span>:
    <span class="pl-k">pass</span>
      </pre></div></sub></td>
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="try:
   a.grad = 0
except TypeError as e:
    pass
      "><pre><span class="pl-k">try</span>:
   <span class="pl-s1">a</span>.<span class="pl-s1">grad</span> <span class="pl-c1">=</span> <span class="pl-c1">0</span>
<span class="pl-k">except</span> <span class="pl-v">TypeError</span> <span class="pl-k">as</span> <span class="pl-s1">e</span>:
    <span class="pl-k">pass</span>
      </pre></div></sub></td>
    </tr>
  </tbody></table>
<p></p>
<h3>Raise error when inputs to <code>autograd.grad</code> are empty (<a href="https://github.com/pytorch/pytorch/pull/52016" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/52016/hovercard">#52016</a>)</h3>
<p>Calling <code>autograd.grad</code> with an empty list of inputs used to do the same as backward. To reduce confusion, it now raises the expected error. If you were relying on this, you can simply update your code as follows:</p>
<p align="center">
  </p><table align="center">
    <tbody><tr><th>1.9.1</th><th>1.10.0</th></tr>
    <tr valign="top">
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="grad = autograd.grad(out, tuple())
assert grad == tuple()
      "><pre><span class="pl-s1">grad</span> <span class="pl-c1">=</span> <span class="pl-s1">autograd</span>.<span class="pl-en">grad</span>(<span class="pl-s1">out</span>, <span class="pl-en">tuple</span>())
<span class="pl-k">assert</span> <span class="pl-s1">grad</span> <span class="pl-c1">==</span> <span class="pl-en">tuple</span>()
      </pre></div></sub></td>
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="out.backward()
      "><pre><span class="pl-s1">out</span>.<span class="pl-en">backward</span>()
      </pre></div></sub></td>
    </tr>
  </tbody></table>
<p></p>
<h3>Optional arguments to <code>autograd.gradcheck</code> and <code>autograd.gradgradcheck</code> are now kwarg-only (<a href="https://github.com/pytorch/pytorch/pull/65290" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65290/hovercard">#65290</a>)</h3>
<p>These two functions now have a significant number of optional arguments controlling what they do (i.e., <code>eps</code>, <code>atol</code>, <code>rtol</code>, <code>raise_exception</code>, etc.). To improve readability, we made these arguments kwarg-only. If you are passing these arguments to <code>autograd.gradcheck</code> or <code>autograd.gradgradcheck</code> as positional arguments, you can update your code as follows:</p>
<p align="center">
  </p><table align="center">
    <tbody><tr><th>1.9.1</th><th>1.10.0</th></tr>
    <tr valign="top">
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="torch.autograd.gradcheck(fn, x, 1e-6)
      "><pre><span class="pl-s1">torch</span>.<span class="pl-s1">autograd</span>.<span class="pl-en">gradcheck</span>(<span class="pl-s1">fn</span>, <span class="pl-s1">x</span>, <span class="pl-c1">1e-6</span>)
      </pre></div></sub></td>
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="torch.autograd.gradcheck(fn, x, eps=1e-6)
      "><pre><span class="pl-s1">torch</span>.<span class="pl-s1">autograd</span>.<span class="pl-en">gradcheck</span>(<span class="pl-s1">fn</span>, <span class="pl-s1">x</span>, <span class="pl-s1">eps</span><span class="pl-c1">=</span><span class="pl-c1">1e-6</span>)
      </pre></div></sub></td>
    </tr>
  </tbody></table>
<p></p>
<h3>In-place detach (<code>detach_</code>) now errors for views that return multiple outputs (<a href="https://github.com/pytorch/pytorch/pull/58285" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58285/hovercard">#58285</a>)</h3>
<p>This change is finishing the deprecation cycle for the inplace-over-view logic. In particular, a few things that were warning are updated:</p>
<div class="snippet-clipboard-content position-relative overflow-auto" data-snippet-clipboard-copy-content="* `detach_` will now raise an error when invoked on any view created by `split`, `split_with_sizes`, or `chunk`. You should use the non-inplace `detach` instead.
* The error message for when an in-place operation (that is not detach) is performed on a view created by `split`, `split_with_size`, and `chunk` has been changed from &quot;This view is an output of a function...&quot; to &quot;This view is the output of a function...&quot;.
"><pre><code>* `detach_` will now raise an error when invoked on any view created by `split`, `split_with_sizes`, or `chunk`. You should use the non-inplace `detach` instead.
* The error message for when an in-place operation (that is not detach) is performed on a view created by `split`, `split_with_size`, and `chunk` has been changed from "This view is an output of a function..." to "This view is the output of a function...".
</code></pre></div>
<p align="center">
  </p><table align="center">
    <tbody><tr><th>1.9.1</th><th>1.10.0</th></tr>
    <tr valign="top">
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="b = a.split(1)[0]
b.detach_()
      "><pre><span class="pl-s1">b</span> <span class="pl-c1">=</span> <span class="pl-s1">a</span>.<span class="pl-en">split</span>(<span class="pl-c1">1</span>)[<span class="pl-c1">0</span>]
<span class="pl-s1">b</span>.<span class="pl-en">detach_</span>()
      </pre></div></sub></td>
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="b = a.split(1)[0]
c = b.detach()
      "><pre><span class="pl-s1">b</span> <span class="pl-c1">=</span> <span class="pl-s1">a</span>.<span class="pl-en">split</span>(<span class="pl-c1">1</span>)[<span class="pl-c1">0</span>]
<span class="pl-s1">c</span> <span class="pl-c1">=</span> <span class="pl-s1">b</span>.<span class="pl-en">detach</span>()
      </pre></div></sub></td>
    </tr>
  </tbody></table>
<p></p>
<h3>Fix saved variable unpacking version counter (<a href="https://github.com/pytorch/pytorch/pull/60195" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60195/hovercard">#60195</a>)</h3>
<p>In-place on the unpacked SavedVariables used to be ignored. They are now properly detected which can lead to errors saying that a variable needed for backward was modified in-place.<br>
This is a valid error and the user should fix this by cloning the unpacked saved variable before using it.</p>
<p>No internal formula will trigger this, but it might be triggered by user custom <code>autograd.Function</code> if the backward modifies a saved Tensor inplace and you do multiple backwards. This used to silently return the wrong result and will now raise the expected error.</p>
<h2>torch.nn</h2>
<h3>Added optional tensor arguments to <code>__torch_function__</code> handling checks (<a href="https://github.com/pytorch/pytorch/pull/63967" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63967/hovercard">#63967</a>)</h3>
<p>This fixes the <code>has_torch_function*()</code> checks throughout <code>torch.nn.functional</code> to correctly pass in optional tensor arguments; prior to this fix, <code>handle_torch_function()</code> was not called for these optional tensor arguments. Previously, passing a tensor-like object into a function that accepts an optional tensor might not trigger that object's <code>__torch_function__</code>. Now, the object's <code>__torch_function__</code> will be triggered as expected.</p>
<p align="center">
  </p><table align="center">
    <tbody><tr><th>1.9.1</th><th>1.10.0</th></tr>
    <tr valign="top">
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="import torch
import torch.nn.functional as F
class TestTensor(object):
    def __init__(self, weight):
        self.weight = weight
    def __torch_function__(self, func, _, args=(), kwargs=None):
        print(func)
        print(func == F.group_norm)
# Call F.group_norm with a custom Tensor as the non-optional arg 'features'
features = TestTensor(torch.randn(3,3))
F.group_norm(features, 3)
# ...prints &quot;group_norm&quot; and True
# Call F.group_norm with a custom Tensor as the optional arg 'weight'
features = torch.randn(3,3)
weight = TestTensor(torch.randn(3))
F.group_norm(features, 3, weight=weight)
# ...prints &quot;group_norm&quot; and False because weight's __torch_function__ is
# called with func as torch.group_norm instead of F.group_norm
      "><pre><span class="pl-k">import</span> <span class="pl-s1">torch</span>
<span class="pl-k">import</span> <span class="pl-s1">torch</span>.<span class="pl-s1">nn</span>.<span class="pl-s1">functional</span> <span class="pl-k">as</span> <span class="pl-v">F</span>
<span class="pl-k">class</span> <span class="pl-v">TestTensor</span>(<span class="pl-s1">object</span>):
    <span class="pl-k">def</span> <span class="pl-en">__init__</span>(<span class="pl-s1">self</span>, <span class="pl-s1">weight</span>):
        <span class="pl-s1">self</span>.<span class="pl-s1">weight</span> <span class="pl-c1">=</span> <span class="pl-s1">weight</span>
    <span class="pl-k">def</span> <span class="pl-en">__torch_function__</span>(<span class="pl-s1">self</span>, <span class="pl-s1">func</span>, <span class="pl-s1">_</span>, <span class="pl-s1">args</span><span class="pl-c1">=</span>(), <span class="pl-s1">kwargs</span><span class="pl-c1">=</span><span class="pl-c1">None</span>):
        <span class="pl-en">print</span>(<span class="pl-s1">func</span>)
        <span class="pl-en">print</span>(<span class="pl-s1">func</span> <span class="pl-c1">==</span> <span class="pl-v">F</span>.<span class="pl-s1">group_norm</span>)
<span class="pl-c"># Call F.group_norm with a custom Tensor as the non-optional arg 'features'</span>
<span class="pl-s1">features</span> <span class="pl-c1">=</span> <span class="pl-v">TestTensor</span>(<span class="pl-s1">torch</span>.<span class="pl-en">randn</span>(<span class="pl-c1">3</span>,<span class="pl-c1">3</span>))
<span class="pl-v">F</span>.<span class="pl-en">group_norm</span>(<span class="pl-s1">features</span>, <span class="pl-c1">3</span>)
<span class="pl-c"># ...prints "group_norm" and True</span>
<span class="pl-c"># Call F.group_norm with a custom Tensor as the optional arg 'weight'</span>
<span class="pl-s1">features</span> <span class="pl-c1">=</span> <span class="pl-s1">torch</span>.<span class="pl-en">randn</span>(<span class="pl-c1">3</span>,<span class="pl-c1">3</span>)
<span class="pl-s1">weight</span> <span class="pl-c1">=</span> <span class="pl-v">TestTensor</span>(<span class="pl-s1">torch</span>.<span class="pl-en">randn</span>(<span class="pl-c1">3</span>))
<span class="pl-v">F</span>.<span class="pl-en">group_norm</span>(<span class="pl-s1">features</span>, <span class="pl-c1">3</span>, <span class="pl-s1">weight</span><span class="pl-c1">=</span><span class="pl-s1">weight</span>)
<span class="pl-c"># ...prints "group_norm" and False because weight's __torch_function__ is</span>
<span class="pl-c"># called with func as torch.group_norm instead of F.group_norm</span>
      </pre></div></sub></td>
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="import torch
import torch.nn.functional as F
class TestTensor(object):
    def __init__(self, weight):
        self.weight = weight
    def __torch_function__(self, func, _, args=(), kwargs=None):
        print(func)
        print(func == F.group_norm)
# Call F.group_norm with a custom Tensor as the non-optional arg 'features'
features = TestTensor(torch.randn(3,3))
F.group_norm(features, 3)
# ...prints &quot;group_norm&quot; and True
# Call F.group_norm with a custom Tensor as the optional arg 'weight'
features = torch.randn(3,3)
weight = TestTensor(torch.randn(3))
F.group_norm(features, 3, weight=weight)
# ...prints &quot;group_norm&quot; and True
      "><pre><span class="pl-k">import</span> <span class="pl-s1">torch</span>
<span class="pl-k">import</span> <span class="pl-s1">torch</span>.<span class="pl-s1">nn</span>.<span class="pl-s1">functional</span> <span class="pl-k">as</span> <span class="pl-v">F</span>
<span class="pl-k">class</span> <span class="pl-v">TestTensor</span>(<span class="pl-s1">object</span>):
    <span class="pl-k">def</span> <span class="pl-en">__init__</span>(<span class="pl-s1">self</span>, <span class="pl-s1">weight</span>):
        <span class="pl-s1">self</span>.<span class="pl-s1">weight</span> <span class="pl-c1">=</span> <span class="pl-s1">weight</span>
    <span class="pl-k">def</span> <span class="pl-en">__torch_function__</span>(<span class="pl-s1">self</span>, <span class="pl-s1">func</span>, <span class="pl-s1">_</span>, <span class="pl-s1">args</span><span class="pl-c1">=</span>(), <span class="pl-s1">kwargs</span><span class="pl-c1">=</span><span class="pl-c1">None</span>):
        <span class="pl-en">print</span>(<span class="pl-s1">func</span>)
        <span class="pl-en">print</span>(<span class="pl-s1">func</span> <span class="pl-c1">==</span> <span class="pl-v">F</span>.<span class="pl-s1">group_norm</span>)
<span class="pl-c"># Call F.group_norm with a custom Tensor as the non-optional arg 'features'</span>
<span class="pl-s1">features</span> <span class="pl-c1">=</span> <span class="pl-v">TestTensor</span>(<span class="pl-s1">torch</span>.<span class="pl-en">randn</span>(<span class="pl-c1">3</span>,<span class="pl-c1">3</span>))
<span class="pl-v">F</span>.<span class="pl-en">group_norm</span>(<span class="pl-s1">features</span>, <span class="pl-c1">3</span>)
<span class="pl-c"># ...prints "group_norm" and True</span>
<span class="pl-c"># Call F.group_norm with a custom Tensor as the optional arg 'weight'</span>
<span class="pl-s1">features</span> <span class="pl-c1">=</span> <span class="pl-s1">torch</span>.<span class="pl-en">randn</span>(<span class="pl-c1">3</span>,<span class="pl-c1">3</span>)
<span class="pl-s1">weight</span> <span class="pl-c1">=</span> <span class="pl-v">TestTensor</span>(<span class="pl-s1">torch</span>.<span class="pl-en">randn</span>(<span class="pl-c1">3</span>))
<span class="pl-v">F</span>.<span class="pl-en">group_norm</span>(<span class="pl-s1">features</span>, <span class="pl-c1">3</span>, <span class="pl-s1">weight</span><span class="pl-c1">=</span><span class="pl-s1">weight</span>)
<span class="pl-c"># ...prints "group_norm" and True</span>
      </pre></div></sub></td>
    </tr>
  </tbody></table>
<p></p>
<h2>CUDA</h2>
<h3>Removed post-backward syncs on default stream (<a href="https://github.com/pytorch/pytorch/pull/60421" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60421/hovercard">#60421</a>)</h3>
<p>Calls to backward() or grad() synced only the calling thread's default stream with autograd leaf streams at the end of backward. This made the following weird pattern safe:</p>
<div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="with torch.cuda.stream(s):
    # imagine forward used many streams, so backward leaf nodes may run on many streams
    loss.backward()# no sync
use grads
"><pre><span class="pl-k">with</span> <span class="pl-s1">torch</span>.<span class="pl-s1">cuda</span>.<span class="pl-en">stream</span>(<span class="pl-s1">s</span>):
    <span class="pl-c"># imagine forward used many streams, so backward leaf nodes may run on many streams</span>
    <span class="pl-s1">loss</span>.<span class="pl-en">backward</span>()<span class="pl-c"># no sync</span>
<span class="pl-s1">use</span> <span class="pl-s1">grads</span></pre></div>
<p>but a more benign-looking pattern was unsafe:</p>
<div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="with torch.cuda.stream(s):
    # imagine forward used a lot of streams, so backward leaf nodes may run on many streams
    loss.backward()
    # backward() syncs the default stream with all the leaf streams, but does not sync s with anything,
    # so counterintuitively (even though we're in the same stream context as backward()!)
    # it is NOT SAFE to use grads here, and there's no easy way to make it safe,
    # unless you manually sync on all the streams you used in forward,
    # or move &quot;use grads&quot; back to default stream outside the context.
    use grads
"><pre><span class="pl-k">with</span> <span class="pl-s1">torch</span>.<span class="pl-s1">cuda</span>.<span class="pl-en">stream</span>(<span class="pl-s1">s</span>):
    <span class="pl-c"># imagine forward used a lot of streams, so backward leaf nodes may run on many streams</span>
    <span class="pl-s1">loss</span>.<span class="pl-en">backward</span>()
    <span class="pl-c"># backward() syncs the default stream with all the leaf streams, but does not sync s with anything,</span>
    <span class="pl-c"># so counterintuitively (even though we're in the same stream context as backward()!)</span>
    <span class="pl-c"># it is NOT SAFE to use grads here, and there's no easy way to make it safe,</span>
    <span class="pl-c"># unless you manually sync on all the streams you used in forward,</span>
    <span class="pl-c"># or move "use grads" back to default stream outside the context.</span>
    <span class="pl-s1">use</span> <span class="pl-s1">grads</span></pre></div>
<p>Note: this change makes it so that backward() has <a href="https://pytorch.org/docs/master/notes/cuda.html#stream-semantics-of-backward-passes" rel="nofollow">same user-facing stream semantics as any cuda op</a>.** In other words, the weird pattern is unsafe, and the benign-looking pattern is safe. Implementation-wise, this meant backward() should sync its calling thread's current stream, not default stream, with the leaf streams. This PR  deletes syncs on the default stream.</p>
<h2>torch.package</h2>
<ul>
<li>Removed verbose mode from PackageExporter (<a href="https://github.com/pytorch/pytorch/pull/61145" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61145/hovercard">#61145</a>)
<ul>
<li>PackageExporter is losing ‚Äúverbose‚Äù mode argument as we have found it is not useful and sometimes confusing. See following examples on how to modify your code to accommodate this change.</li>
</ul>
</li>
</ul>
<p align="center">
  </p><table align="center">
    <tbody><tr><th>1.9.1</th><th>1.10.0</th></tr>
    <tr valign="top">
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="with PackageExporter(buffer, verbose=False) as e:
    e.intern(&quot;**&quot;)
    e.save_pickle(&quot;res&quot;, &quot;mod1.pkl&quot;, mod1)
    e.save_pickle(&quot;res&quot;, &quot;mod2.pkl&quot;, mod2)
      "><pre><span class="pl-k">with</span> <span class="pl-v">PackageExporter</span>(<span class="pl-s1">buffer</span>, <span class="pl-s1">verbose</span><span class="pl-c1">=</span><span class="pl-c1">False</span>) <span class="pl-k">as</span> <span class="pl-s1">e</span>:
    <span class="pl-s1">e</span>.<span class="pl-en">intern</span>(<span class="pl-s">"**"</span>)
    <span class="pl-s1">e</span>.<span class="pl-en">save_pickle</span>(<span class="pl-s">"res"</span>, <span class="pl-s">"mod1.pkl"</span>, <span class="pl-s1">mod1</span>)
    <span class="pl-s1">e</span>.<span class="pl-en">save_pickle</span>(<span class="pl-s">"res"</span>, <span class="pl-s">"mod2.pkl"</span>, <span class="pl-s1">mod2</span>)
      </pre></div></sub></td>
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="with PackageExporter(buffer) as e:
    e.intern(&quot;**&quot;)
    e.save_pickle(&quot;res&quot;, &quot;mod1.pkl&quot;, mod1)
    e.save_pickle(&quot;res&quot;, &quot;mod2.pkl&quot;, mod2)
      "><pre><span class="pl-k">with</span> <span class="pl-v">PackageExporter</span>(<span class="pl-s1">buffer</span>) <span class="pl-k">as</span> <span class="pl-s1">e</span>:
    <span class="pl-s1">e</span>.<span class="pl-en">intern</span>(<span class="pl-s">"**"</span>)
    <span class="pl-s1">e</span>.<span class="pl-en">save_pickle</span>(<span class="pl-s">"res"</span>, <span class="pl-s">"mod1.pkl"</span>, <span class="pl-s1">mod1</span>)
    <span class="pl-s1">e</span>.<span class="pl-en">save_pickle</span>(<span class="pl-s">"res"</span>, <span class="pl-s">"mod2.pkl"</span>, <span class="pl-s1">mod2</span>)
      </pre></div></sub></td>
    </tr>
  </tbody></table>
<p></p>
<h2>Quantization</h2>
<h3>Added extra observer/fake_quant (the same observer/fake_quant instance as the input) for some operators in prepare_fx, e.g. maxpool, add_scalar and mul_scalar (<a href="https://github.com/pytorch/pytorch/pull/61687" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61687/hovercard">#61687</a>, <a href="https://github.com/pytorch/pytorch/pull/61859" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61859/hovercard">#61859</a>)</h3>
<p>Previously the way we insert observers/fake_quants are specific to fbgemm/qnnpack backend, as we work on making FX Graph Mode Quantization extensible to custom backends, we are changing some behaviors for the fbgemm/qnnpack path as well. The above changes are adding extra observer/fake_quant to the output of some operators to make sure we model the quantized operator more accurately in quantization aware training, the comprehensive list of operators where the behavior changes are the following:</p>
<ul>
<li>modules: torch.nn.MaxPool1d, torch.nn.MaxPool2d, torch.nn.MaxPool3d, torch.nn.Identity</li>
<li>torch functions: torch.nn.functional.max_pool1d, torch.nn.functional.max_pool2d, torch.nn.functional.max_pool3d, torch.chunk, torch.flatten, torch.transpose, torch.repeat_interleave, torch.sort, torch.squeeze, torch.stack, torch.unsqueeze, operator.getitem,</li>
<li>Tensor methods: chunk, contiguous, detach, detach_, numel, permute, repeat, repeat_interleave, reshape, resize_, shape, size, squeeze, squeeze_, transpose, unsqueeze, unsqueeze_, view</li>
<li>Tensor operations: add scalar and mul scalar (add/mul with a Tensor and a Scalar input)</li>
</ul>
<p>We will show an example with torch.nn.MaxPool2d:</p>
<div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="class M(torch.nn.Module):
    def __init__(self):
        super().__init__()
        self.maxpool2d = torch.nn.MaxPool2d(kernel_size=3)

    def forward(self, x):
        x = self.maxpool2d(x)
        return x
m = M().eval()        
m = prepare_fx(m, {&quot;&quot;: torch.quantization.default_qconfig})
print(m.code)
"><pre><span class="pl-k">class</span> <span class="pl-v">M</span>(<span class="pl-s1">torch</span>.<span class="pl-s1">nn</span>.<span class="pl-v">Module</span>):
    <span class="pl-k">def</span> <span class="pl-en">__init__</span>(<span class="pl-s1">self</span>):
        <span class="pl-en">super</span>().<span class="pl-en">__init__</span>()
        <span class="pl-s1">self</span>.<span class="pl-s1">maxpool2d</span> <span class="pl-c1">=</span> <span class="pl-s1">torch</span>.<span class="pl-s1">nn</span>.<span class="pl-v">MaxPool2d</span>(<span class="pl-s1">kernel_size</span><span class="pl-c1">=</span><span class="pl-c1">3</span>)

    <span class="pl-k">def</span> <span class="pl-en">forward</span>(<span class="pl-s1">self</span>, <span class="pl-s1">x</span>):
        <span class="pl-s1">x</span> <span class="pl-c1">=</span> <span class="pl-s1">self</span>.<span class="pl-en">maxpool2d</span>(<span class="pl-s1">x</span>)
        <span class="pl-k">return</span> <span class="pl-s1">x</span>
<span class="pl-s1">m</span> <span class="pl-c1">=</span> <span class="pl-v">M</span>().<span class="pl-en">eval</span>()        
<span class="pl-s1">m</span> <span class="pl-c1">=</span> <span class="pl-en">prepare_fx</span>(<span class="pl-s1">m</span>, {<span class="pl-s">""</span>: <span class="pl-s1">torch</span>.<span class="pl-s1">quantization</span>.<span class="pl-s1">default_qconfig</span>})
<span class="pl-en">print</span>(<span class="pl-s1">m</span>.<span class="pl-s1">code</span>)</pre></div>
<p align="center">
  </p><table align="center">
    <tbody><tr><th>1.9.1</th><th>1.10.0</th></tr>
    <tr valign="top">
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="def forward(self, x):
    x_activation_post_process_0 = self.x_activation_post_process_0(x); x = None
    maxpool2d = self.maxpool2d(x_activation_post_process_0); x_activation_post_process_0 = None
    return maxpool2d
      "><pre><span class="pl-k">def</span> <span class="pl-en">forward</span>(<span class="pl-s1">self</span>, <span class="pl-s1">x</span>):
    <span class="pl-s1">x_activation_post_process_0</span> <span class="pl-c1">=</span> <span class="pl-s1">self</span>.<span class="pl-en">x_activation_post_process_0</span>(<span class="pl-s1">x</span>); <span class="pl-s1">x</span> <span class="pl-c1">=</span> <span class="pl-c1">None</span>
    <span class="pl-s1">maxpool2d</span> <span class="pl-c1">=</span> <span class="pl-s1">self</span>.<span class="pl-en">maxpool2d</span>(<span class="pl-s1">x_activation_post_process_0</span>); <span class="pl-s1">x_activation_post_process_0</span> <span class="pl-c1">=</span> <span class="pl-c1">None</span>
    <span class="pl-k">return</span> <span class="pl-s1">maxpool2d</span>
      </pre></div></sub></td>
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="def forward(self, x):
    x_activation_post_process_0 = self.x_activation_post_process_0(x); x = None
    maxpool2d = self.maxpool2d(x_activation_post_process_0); x_activation_post_process_0 = None
    maxpool2d_activation_post_process_0 = self.maxpool2d_activation_post_process_0(maxpool2d); maxpool2d = None
    return maxpool2d_activation_post_process_0
      "><pre><span class="pl-k">def</span> <span class="pl-en">forward</span>(<span class="pl-s1">self</span>, <span class="pl-s1">x</span>):
    <span class="pl-s1">x_activation_post_process_0</span> <span class="pl-c1">=</span> <span class="pl-s1">self</span>.<span class="pl-en">x_activation_post_process_0</span>(<span class="pl-s1">x</span>); <span class="pl-s1">x</span> <span class="pl-c1">=</span> <span class="pl-c1">None</span>
    <span class="pl-s1">maxpool2d</span> <span class="pl-c1">=</span> <span class="pl-s1">self</span>.<span class="pl-en">maxpool2d</span>(<span class="pl-s1">x_activation_post_process_0</span>); <span class="pl-s1">x_activation_post_process_0</span> <span class="pl-c1">=</span> <span class="pl-c1">None</span>
    <span class="pl-s1">maxpool2d_activation_post_process_0</span> <span class="pl-c1">=</span> <span class="pl-s1">self</span>.<span class="pl-en">maxpool2d_activation_post_process_0</span>(<span class="pl-s1">maxpool2d</span>); <span class="pl-s1">maxpool2d</span> <span class="pl-c1">=</span> <span class="pl-c1">None</span>
    <span class="pl-k">return</span> <span class="pl-s1">maxpool2d_activation_post_process_0</span>
      </pre></div></sub></td>
    </tr>
  </tbody></table>
<p></p>
<p>Note that <code>self.maxpool2d_activation_post_process_0</code> and <code>self.x_activation_post_process_0</code> will refer to the same observer/fake_quant instance, this is to simulate the numerics for the quantized maxpool implementation, where the output would reuse the quantization parameter of the input. Simple illustration with graph:</p>
<p>Before:</p>
<div class="snippet-clipboard-content position-relative overflow-auto" data-snippet-clipboard-copy-content="observer_0 - maxpool - ...
"><pre><code>observer_0 - maxpool - ...
</code></pre></div>
<p>After:</p>
<div class="snippet-clipboard-content position-relative overflow-auto" data-snippet-clipboard-copy-content="observer_0 - maxpool - observer_0 (same observer instance as input observer) - ...
"><pre><code>observer_0 - maxpool - observer_0 (same observer instance as input observer) - ...
</code></pre></div>
<h2>ONNX</h2>
<h3>Removed <code>aten</code> arg from <code>torch.onnx.export()</code>. (<a href="https://github.com/pytorch/pytorch/pull/62759" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62759/hovercard">#62759</a>)</h3>
<p>The new <code>OperatorExportTypes.ONNX</code> removes the need for an explicit <code>aten</code> argument. If Pytorch was built with <code>-DPYTORCH_ONNX_CAFFE2_BUNDLE</code> the a <code>None</code> value means <code>OperatorExportTypes.ONNX_ATEN_FALLBACK</code></p>
<p align="center">
  </p><table align="center">
    <tbody><tr><th>1.9.1</th><th>1.10.0</th></tr>
    <tr valign="top">
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="torch.onnx.export(..., aten=True)
      "><pre><span class="pl-s1">torch</span>.<span class="pl-s1">onnx</span>.<span class="pl-en">export</span>(..., <span class="pl-s1">aten</span><span class="pl-c1">=</span><span class="pl-c1">True</span>)
      </pre></div></sub></td>
      <td><sub><div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="torch.onnx.export(..., operator_export_type=torch.onnx.OperatorExportTypes.ONNX_ATEN)
      "><pre><span class="pl-s1">torch</span>.<span class="pl-s1">onnx</span>.<span class="pl-en">export</span>(..., <span class="pl-s1">operator_export_type</span><span class="pl-c1">=</span><span class="pl-s1">torch</span>.<span class="pl-s1">onnx</span>.<span class="pl-v">OperatorExportTypes</span>.<span class="pl-v">ONNX_ATEN</span>)
      </pre></div></sub></td>
    </tr>
  </tbody></table>
<p></p>
<h1>Deprecations</h1>
<h2>Python API</h2>
<h3>Deprecate <strong><code>__torch_function__</code></strong> as a plain methods (<a href="https://github.com/pytorch/pytorch/pull/64843" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64843/hovercard">#64843</a>)</h3>
<p>The <code>__torch_function__</code> function used to create Tensor like objects did not have any constraint whether it should be a method, class method or static method.</p>
<p>To make it compatible with newer features on Tensor-like objects, we are deprecating setting it as a plain method. You can define it as a class method to get the current class and scan the argument list if you need an object that is an instance of this class.</p>
<h2>Mobile</h2>
<h3>Removed API torch.utils.bundled_inputs.run_on_bundled_input (<a href="https://github.com/pytorch/pytorch/pull/58344" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58344/hovercard">#58344</a>)</h3>
<p>This API caused many issues and is not really necessary. The functionality (run model with bundled input) can be achieved by using <code>get_all_bundled_inputs</code>. For example:</p>
<p>1.9.1:</p>
<div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="model.run_on_bundled_input(0)
"><pre><span class="pl-s1">model</span>.<span class="pl-en">run_on_bundled_input</span>(<span class="pl-c1">0</span>)</pre></div>
<p>1.10.0:</p>
<div class="highlight highlight-source-python position-relative overflow-auto" data-snippet-clipboard-copy-content="model(*model.get_all_bundled_inputs()[0])
"><pre><span class="pl-en">model</span>(<span class="pl-c1">*</span><span class="pl-s1">model</span>.<span class="pl-en">get_all_bundled_inputs</span>()[<span class="pl-c1">0</span>])</pre></div>
<h2>Distributed</h2>
<h3><code>torch.distributed.rpc</code>: Removed ProcessGroup RPC backend (<a href="https://github.com/pytorch/pytorch/pull/62411" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62411/hovercard">#62411</a> , <a href="https://github.com/pytorch/pytorch/pull/62985" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62985/hovercard">#62985</a>)</h3>
<p>ProcessGroup RPC backend has been deprecated and 1.9 was the last release which carried it. The default RPC backend is TensorPipe which is the recommended backend for RPC. Users who use <code>torch.distributed.rpc.BackendType.PROCESS_GROUP</code> will be given an error message to switch to <code>torch.distributed.rpc.BackendType.TENSORPIPE</code>.</p>
<h2>ONNX</h2>
<h3>Removed following arguments in torch.onnx.export(): enable_onnx_checker, strip_doc_string, _retain_param_name  (<a href="https://github.com/pytorch/pytorch/pull/64369" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64369/hovercard">#64369</a>, <a href="https://github.com/pytorch/pytorch/pull/64371" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64371/hovercard">#64371</a>, <a href="https://github.com/pytorch/pytorch/pull/64370" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64370/hovercard">#64370</a>)</h3>
<p><code>enable_onnx_checker</code> argument is removed. ONNX checker will now always run by default. Users can catch exceptions to ignore raised failures. <code>strip_doc_string</code> has been rolled into the <code>verbose</code> arg in <code>torch.onnx.export()</code>. <code>_retain_param_name</code> argument has been removed in  <code>torch.onnx.export()</code> will default to <code>True</code> . There is no way to get the old behavior of <code>_retain_param_name=False</code>. Users should stop setting this arg.</p>
<p>1.9.1:</p>
<div class="snippet-clipboard-content position-relative overflow-auto" data-snippet-clipboard-copy-content="torch.onnx.export(..., enable_onnx_checker=False, strip_doc_string=False)
"><pre><code>torch.onnx.export(..., enable_onnx_checker=False, strip_doc_string=False)
</code></pre></div>
<p>1.10.0:</p>
<div class="snippet-clipboard-content position-relative overflow-auto" data-snippet-clipboard-copy-content="try:
    torch.onnx.export(verbose=True)
except torch.onnx.utils.ONNXCheckerError:
   pass
"><pre><code>try:
    torch.onnx.export(verbose=True)
except torch.onnx.utils.ONNXCheckerError:
   pass
</code></pre></div>
<h2>Infra (Releng)</h2>
<h3>Disable ParallelTBB (<a href="https://github.com/pytorch/pytorch/pull/65092" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65092/hovercard">#65092</a>)</h3>
<p><code>ParallelTBB</code> config/codepath is no longer actively tested by PyTorch CI and as result is subject to code/functionality degradation</p>
<h1>New features</h1>
<h2>Python API</h2>
<ul>
<li>Added new functions:
<ul>
<li><code>torch.isin()</code> (<a href="https://github.com/pytorch/pytorch/pull/53125" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/53125/hovercard">#53125</a>), <code>torch.bitwise_{left/right}_shift</code>, <code>__rlshift__</code>, <code>__rrshift__</code> (<a href="https://github.com/pytorch/pytorch/pull/59544" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59544/hovercard">#59544</a>), <code>torch.Tensor.{__rand__, __ror__,__rxor__}</code> (<a href="https://github.com/pytorch/pytorch/pull/59240" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59240/hovercard">#59240</a>),  <code>torch.aminmax</code> (<a href="https://github.com/pytorch/pytorch/pull/62401" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62401/hovercard">#62401</a>),  <code>torch.new_ones</code> (<a href="https://github.com/pytorch/pytorch/pull/58405" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58405/hovercard">#58405</a>)</li>
<li>For numpy compatibility <code>torch.cov</code> (<a href="https://github.com/pytorch/pytorch/pull/58311" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58311/hovercard">#58311</a>), <code>torch.frombuffer</code> (<a href="https://github.com/pytorch/pytorch/pull/59077" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59077/hovercard">#59077</a>), <code>torch.corrcoef</code> (<a href="https://github.com/pytorch/pytorch/pull/60420" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60420/hovercard">#60420</a>), <code>torch.nanmean</code> (<a href="https://github.com/pytorch/pytorch/pull/62671" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62671/hovercard">#62671</a>), <code>torch.cumulative_trapezoid</code> (<a href="https://github.com/pytorch/pytorch/pull/61615" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61615/hovercard">#61615</a>)</li>
</ul>
</li>
<li>The <a href="https://pytorch.org/docs/1.10.0/special.html?highlight=special" rel="nofollow">torch.special module</a> is now stable! This module, consistent with SciPy‚Äôs special module, has 30 operations including the Hurwitz zeta function and various gamma functions.  (<a href="https://github.com/pytorch/pytorch/pull/59623" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59623/hovercard">#59623</a>, <a href="https://github.com/pytorch/pytorch/pull/56352" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/56352/hovercard">#56352</a>, <a href="https://github.com/pytorch/pytorch/pull/58126" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58126/hovercard">#58126</a>, <a href="https://github.com/pytorch/pytorch/pull/59141" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59141/hovercard">#59141</a>, <a href="https://github.com/pytorch/pytorch/pull/59143" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59143/hovercard">#59143</a>, <a href="https://github.com/pytorch/pytorch/pull/58650" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58650/hovercard">#58650</a>, <a href="https://github.com/pytorch/pytorch/pull/55878" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/55878/hovercard">#55878</a>, <a href="https://github.com/pytorch/pytorch/pull/58838" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58838/hovercard">#58838</a>, <a href="https://github.com/pytorch/pytorch/pull/60512" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60512/hovercard">#60512</a>, <a href="https://github.com/pytorch/pytorch/pull/60641" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60641/hovercard">#60641</a>, <a href="https://github.com/pytorch/pytorch/pull/61633" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61633/hovercard">#61633</a>, <a href="https://github.com/pytorch/pytorch/pull/60519" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60519/hovercard">#60519</a>, <a href="https://github.com/pytorch/pytorch/pull/59691" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59691/hovercard">#59691</a>, <a href="https://github.com/pytorch/pytorch/pull/58194" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58194/hovercard">#58194</a>)</li>
<li>Added support for slots and subclass magic getstate/setstate method for Tensor serialization (<a href="https://github.com/pytorch/pytorch/pull/62745" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62745/hovercard">#62745</a>)</li>
<li><code>torch.optim</code>:
<ul>
<li>Added Nesterov Adam as <code>NAdam</code> (<a href="https://github.com/pytorch/pytorch/pull/59009" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59009/hovercard">#59009</a>)</li>
<li>Added <code>lr_scheduler.ChainedScheduler</code> (<a href="https://github.com/pytorch/pytorch/pull/63491" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63491/hovercard">#63491</a>, <a href="https://github.com/pytorch/pytorch/pull/63457" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63457/hovercard">#63457</a>, <a href="https://github.com/pytorch/pytorch/pull/65034" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65034/hovercard">#65034</a>))</li>
<li>Added <code>lr_scheduler.SequentialLR</code> (<a href="https://github.com/pytorch/pytorch/pull/64037" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64037/hovercard">#64037</a>, <a href="https://github.com/pytorch/pytorch/pull/65035" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65035/hovercard">#65035</a>)</li>
<li>Added <code>lr_scheduler.{ConstantLR,LinearLR}</code> (<a href="https://github.com/pytorch/pytorch/pull/64395" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64395/hovercard">#64395</a>)</li>
</ul>
</li>
<li><code>torch.cpu.amp.autocast</code>: enable new API for CPU autocast (<a href="https://github.com/pytorch/pytorch/pull/57386" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57386/hovercard">#57386</a>, <a href="https://github.com/pytorch/pytorch/pull/63534" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63534/hovercard">#63534</a>)</li>
<li>Added <code>BFloat16</code> support for <code>torch.{cross, tril, triu, tril_indices, triu_indices, cumsum, cummax, cummin, median, kthvalue, nansum, nextafter, range, sinh, cosh, frexp, nan_to_num, sigmoid, sigmoid_backward, tanh_backward, addcmul, addcdiv, bucketize, bernoulli, dropout, fold, unfold, MaxPool2D, AdaptiveAvgPool2D, topk}</code> on CPU (<a href="https://github.com/pytorch/pytorch/pull/62454" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62454/hovercard">#62454</a>, <a href="https://github.com/pytorch/pytorch/pull/63307" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63307/hovercard">#63307</a>, <a href="https://github.com/pytorch/pytorch/pull/55210" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/55210/hovercard">#55210</a>, <a href="https://github.com/pytorch/pytorch/pull/60074" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60074/hovercard">#60074</a>, <a href="https://github.com/pytorch/pytorch/pull/61083" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61083/hovercard">#61083</a>, <a href="https://github.com/pytorch/pytorch/pull/61829" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61829/hovercard">#61829</a>, <a href="https://github.com/pytorch/pytorch/pull/55221" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/55221/hovercard">#55221</a>,  <a href="https://github.com/pytorch/pytorch/pull/61826" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61826/hovercard">#61826</a>, <a href="https://github.com/pytorch/pytorch/pull/55588" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/55588/hovercard">#55588</a>, <a href="https://github.com/pytorch/pytorch/pull/56372" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/56372/hovercard">#56372</a>, <a href="https://github.com/pytorch/pytorch/pull/62880" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62880/hovercard">#62880</a>, <a href="https://github.com/pytorch/pytorch/pull/55202" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/55202/hovercard">#55202</a>, <a href="https://github.com/pytorch/pytorch/pull/59547" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59547/hovercard">#59547</a>)</li>
<li>Added <code>BFloat16</code> support for  <code>torch.{ceil, floor, frac, round, trunc, sort, topk, aminmax, cumsum, logcumsumexp, cumprod, cummin, cummax}</code> on CUDA (<a href="https://github.com/pytorch/pytorch/pull/57910" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57910/hovercard">#57910</a>, <a href="https://github.com/pytorch/pytorch/pull/58196" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58196/hovercard">#58196</a>, <a href="https://github.com/pytorch/pytorch/pull/59977" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59977/hovercard">#59977</a>, <a href="https://github.com/pytorch/pytorch/pull/62767" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62767/hovercard">#62767</a>, <a href="https://github.com/pytorch/pytorch/pull/57904" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57904/hovercard">#57904</a>).</li>
<li>Added  <code>torch.cuda.is_bf16_supported</code> (<a href="https://github.com/pytorch/pytorch/pull/63798" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63798/hovercard">#63798</a>)</li>
<li>Added zero rate to Poisson distribution (<a href="https://github.com/pytorch/pytorch/pull/61511" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61511/hovercard">#61511</a>)</li>
<li>Added <code>torch.segment_reduce</code> (<a href="https://github.com/pytorch/pytorch/pull/59951" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59951/hovercard">#59951</a>, <a href="https://github.com/pytorch/pytorch/pull/60018" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60018/hovercard">#60018</a>, <a href="https://github.com/pytorch/pytorch/pull/61141" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61141/hovercard">#61141</a>, <a href="https://github.com/pytorch/pytorch/pull/61266" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61266/hovercard">#61266</a>, <a href="https://github.com/pytorch/pytorch/pull/59521" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59521/hovercard">#59521</a>, <a href="https://github.com/pytorch/pytorch/pull/60379" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60379/hovercard">#60379</a>, <a href="https://github.com/pytorch/pytorch/pull/60379" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60379/hovercard">#60379</a>)</li>
<li>Added boolean support to <code>torch.isclose</code> (<a href="https://github.com/pytorch/pytorch/pull/61271" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61271/hovercard">#61271</a>)</li>
<li>Added <code>torch.trapezoid</code> (<a href="https://github.com/pytorch/pytorch/pull/61475" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61475/hovercard">#61475</a>).</li>
<li>Added <code>torch.gradient</code> support for second order central differences (edge_order=2) (<a href="https://github.com/pytorch/pytorch/pull/58165" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58165/hovercard">#58165</a>)</li>
<li><code>torch.sigmoid</code>: CUDA support and complex autograd support (<a href="https://github.com/pytorch/pytorch/pull/48647" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/48647/hovercard">#48647</a>)</li>
<li>Added channels-last support for <code>torch.bilinear</code> and <code>torch.nn,MaxUnpool2d</code> (<a href="https://github.com/pytorch/pytorch/pull/56322" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/56322/hovercard">#56322</a>, <a href="https://github.com/pytorch/pytorch/pull/49984" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/49984/hovercard">#49984</a>)</li>
</ul>
<h2>Autograd</h2>
<ul>
<li>[Experimental] Forward mode AD:
<ul>
<li><em>NOTE: In addition to operators listed below, many simple ops are already supported. If you encounter an operator that does not have a forward-mode AD formula implemented, please file an issue. As a workaround, you can use custom <code>autograd.Function</code> to implement your own forward-mode-AD-supported operator.</em></li>
<li>Added forward-mode AD support for custom <code>autograd.Function</code> (<a href="https://github.com/pytorch/pytorch/pull/64061" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64061/hovercard">#64061</a>, <a href="https://github.com/pytorch/pytorch/pull/63434" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63434/hovercard">#63434</a>)</li>
<li>Added forward-mode AD support for <code>torch.{acos, add, addbmm, addcdiv, addcmul, addmm, addmv, addr, angle, acosh, asinh, atanh, asin, atan, conj, baddbmm, bmm, cat, ceil, clamp, clamp_min, clamp_max, complex, copy_sign, cos, cosh, cross, cumprod, cumsum, cummax, cummin, deg2rad, div, dot, vdot, exp, exp2, expm1, expand, floor, frac, frexp, gather, hardswish, hstack, hypot, index_add_, index_copy_, index_put_, index_select, kthvalue, lerp, lgamma, digamma, polygamma, log, log10, log1p, log2, logaddexp, logaddexp2, xlogy, masked_fill_, masked_fill_, masked_scatter_, masked_select, max, maximum, fmax, mean, min, mininum, fmin, mm, mode, mul, lu, lu_solve, vstack}</code> (<a href="https://github.com/pytorch/pytorch/pull/57768" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57768/hovercard">#57768</a>, <a href="https://github.com/pytorch/pytorch/pull/57863" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57863/hovercard">#57863</a> <a href="https://github.com/pytorch/pytorch/pull/59711" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59711/hovercard">#59711</a>, <a href="https://github.com/pytorch/pytorch/pull/64742" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64742/hovercard">#64742</a>)</li>
<li>Added Forward AD support for the following element-wise and linear operators <code>torch.{mvlgamma, nan_to_num, permute, pow,  reciprocal, remainder, repeat, round, rsqrt, sigmoid, logit, sign, sgn, sin, sinc, sinh, sqrt, squeeze, sub, sum, t, flip, roll, rot90, take, tan, tanh, trace, transpose, tril, triu, trunc, unfold, unsqueeze, view, zero_, hardshrink} </code>(<a href="https://github.com/pytorch/pytorch/pull/59993" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59993/hovercard">#59993</a>)</li>
<li>Added Forward AD support for <code>torch.special.</code>{<code>xlog1py, entr}</code> (<a href="https://github.com/pytorch/pytorch/pull/59711" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59711/hovercard">#59711</a>, <a href="https://github.com/pytorch/pytorch/pull/59993" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59993/hovercard">#59993</a>)</li>
<li>Added forward AD support for <code>torch.linalg.{cholesky, cholesky_ex, eigh, inv, inv_ex, solve}</code>  (<a href="https://github.com/pytorch/pytorch/pull/62160" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62160/hovercard">#62160</a>, <a href="https://github.com/pytorch/pytorch/pull/64646" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64646/hovercard">#64646</a>, <a href="https://github.com/pytorch/pytorch/pull/62163" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62163/hovercard">#62163</a>, <a href="https://github.com/pytorch/pytorch/pull/62159" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62159/hovercard">#62159</a>)</li>
<li>Added forward AD support for <code>torch.functional.leak_relu</code> (<a href="https://github.com/pytorch/pytorch/pull/59993" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59993/hovercard">#59993</a>)</li>
</ul>
</li>
<li>Added saved tensor hooks to customize packing/unpacking behavior of tensors saved for backward (<a href="https://github.com/pytorch/pytorch/pull/60685" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60685/hovercard">#60685</a>, <a href="https://github.com/pytorch/pytorch/pull/60663" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60663/hovercard">#60663</a>, <a href="https://github.com/pytorch/pytorch/pull/62564" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62564/hovercard">#62564</a>, <a href="https://github.com/pytorch/pytorch/pull/60975" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60975/hovercard">#60975</a>, <a href="https://github.com/pytorch/pytorch/pull/62909" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62909/hovercard">#62909</a>, <a href="https://github.com/pytorch/pytorch/pull/62717" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62717/hovercard">#62717</a>)</li>
<li>Exposed raw saved tensors for custom <code>autograd.Function</code> to use with the saved tensor hooks (<a href="https://github.com/pytorch/pytorch/pull/60551" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60551/hovercard">#60551</a>)</li>
<li>Added default saved tensor hooks (<a href="https://github.com/pytorch/pytorch/pull/61834" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61834/hovercard">#61834</a>, <a href="https://github.com/pytorch/pytorch/pull/62563" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62563/hovercard">#62563</a>, <a href="https://github.com/pytorch/pytorch/pull/62361" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62361/hovercard">#62361</a>)</li>
<li>Added context manager using default saved tensor hooks to automatically move saved tensors on CPU and back (<a href="https://github.com/pytorch/pytorch/pull/61928" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61928/hovercard">#61928</a>, <a href="https://github.com/pytorch/pytorch/pull/62410" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62410/hovercard">#62410</a>)</li>
<li>Added C++ and python bindings for <code>.is_inference()</code> method (<a href="https://github.com/pytorch/pytorch/pull/58729" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58729/hovercard">#58729</a>)</li>
<li><code>torch.lu_solve</code>: Implement support for backward AD (<a href="https://github.com/pytorch/pytorch/pull/61681" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61681/hovercard">#61681</a>).</li>
</ul>
<h2>torch.nn</h2>
<ul>
<li>Added new modules: <code>nn.{ReflectionPad3d, LazyInstanceNorm*d}</code> (<a href="https://github.com/pytorch/pytorch/pull/59791" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59791/hovercard">#59791</a>, <a href="https://github.com/pytorch/pytorch/pull/60837" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60837/hovercard">#60837</a>, <a href="https://github.com/pytorch/pytorch/pull/61308" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61308/hovercard">#61308</a>, <a href="https://github.com/pytorch/pytorch/pull/60982" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60982/hovercard">#60982</a>)</li>
<li><code>nn.CrossEntropyLoss</code>: Added support for class probability targets (<a href="https://github.com/pytorch/pytorch/pull/61044" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61044/hovercard">#61044</a>)</li>
<li><code>nn.CrossEntropyLoss</code>: Added support for label smoothing (<a href="https://github.com/pytorch/pytorch/pull/63122" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63122/hovercard">#63122</a>)</li>
<li><code>nn.Module</code>: Added support for arbitrary objects in state_dicts via <code>get_extra_state()</code> / <code>set_extra_state()</code> (<a href="https://github.com/pytorch/pytorch/pull/62976" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62976/hovercard">#62976</a>)</li>
<li><code>nn.utils.skip_init()</code>: Added function to skip module parameter / buffer initialization (<a href="https://github.com/pytorch/pytorch/pull/57555" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57555/hovercard">#57555</a>)</li>
</ul>
<h2>Profiler</h2>
<ul>
<li>Added profiler support for mobile (<a href="https://github.com/pytorch/pytorch/pull/62419" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62419/hovercard">#62419</a>, <a href="https://github.com/pytorch/pytorch/pull/62418" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62418/hovercard">#62418</a>, <a href="https://github.com/pytorch/pytorch/pull/62417" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62417/hovercard">#62417</a>,<a href="https://github.com/pytorch/pytorch/pull/62228" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62228/hovercard">#62228</a>,<a href="https://github.com/pytorch/pytorch/pull/62191" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62191/hovercard">#62191,</a><a href="https://github.com/pytorch/pytorch/pull/61792" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61792/hovercard">#61792</a>)</li>
<li>Ported Nvtx support to new profiler (<a href="https://github.com/pytorch/pytorch/pull/61634" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61634/hovercard">#61634</a>)</li>
<li>Added Tensor core usage stats and recommendations in Tensorboard (<a href="https://github.com/pytorch/kineto/pull/364" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/kineto/pull/364/hovercard"><code>#364</code></a><a href="https://github.com/pytorch/kineto/pull/402/commits/e435a8f55fdbf2a2331931782404b9020eefa4ba">,</a><a href="https://github.com/pytorch/kineto/pull/368" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/kineto/pull/368/hovercard"><code>#368</code></a><a href="https://github.com/pytorch/kineto/pull/402/commits/d3132ebc51faed586e6699e895fecc6b4d255334">,</a><a href="https://github.com/pytorch/kineto/pull/383" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/kineto/pull/383/hovercard"><code>#383</code></a>, <a href="https://github.com/pytorch/kineto/pull/422" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/kineto/pull/422/hovercard"><code>#422</code></a>)</li>
</ul>
<h2>CUDA</h2>
<ul>
<li>Allow enabling warnings on CUDA synchronization (<a href="https://github.com/pytorch/pytorch/pull/62092" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62092/hovercard">#62092</a>)</li>
<li>Added CUDA graph Prototype API and documentation (<a href="https://github.com/pytorch/pytorch/pull/63269" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63269/hovercard">#63269</a>)</li>
<li>Make stream semantics of backward calls consistent with other cuda ops (<a href="https://github.com/pytorch/pytorch/pull/57833" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57833/hovercard">#57833</a>, <a href="https://github.com/pytorch/pytorch/pull/60230" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60230/hovercard">#60230</a>, <a href="https://github.com/pytorch/pytorch/pull/60127" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60127/hovercard">#60127</a>)</li>
<li>Enabled autocast support for user-specified device and dtype (<a href="https://github.com/pytorch/pytorch/pull/61002" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61002/hovercard">#61002</a>, <a href="https://github.com/pytorch/pytorch/pull/63416" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63416/hovercard">#63416</a>)</li>
</ul>
<h2>C++ API</h2>
<ul>
<li>Added C++ API for meta functions. They are available in the <code>at::meta::</code> namespace (<a href="https://github.com/pytorch/pytorch/pull/58570" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58570/hovercard">#58570</a>)</li>
<li>Exposed interface to set grain size on <code>cpu_kernel</code>, <code>cpu_kernel_vec</code> and <code>cpu_kernel_multiple_outputs</code> (<a href="https://github.com/pytorch/pytorch/pull/58949" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58949/hovercard">#58949</a>)</li>
<li>Added <code>at::native::resize_bytes_cpu</code> to resize <code>Storage</code> in ATen (<a href="https://github.com/pytorch/pytorch/pull/60324" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60324/hovercard">#60324</a>)</li>
<li>Added <code>transpose</code> to PackedTensorAccessor (<a href="https://github.com/pytorch/pytorch/pull/61114" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61114/hovercard">#61114</a>)</li>
<li>Added <code>torch::linalg::qr</code> as the C++ API (<a href="https://github.com/pytorch/pytorch/pull/60529" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60529/hovercard">#60529</a>)</li>
<li>Exposed <code>amin</code> and <code>amax</code> to aten symbols (<a href="https://github.com/pytorch/pytorch/pull/61550" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61550/hovercard">#61550</a>)</li>
<li>Added support to invoke callable activation function for Transformer modules (<a href="https://github.com/pytorch/pytorch/pull/62342" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62342/hovercard">#62342</a>)</li>
<li>Added support for <code>c10::optional</code> to compare with different but comparable types (<a href="https://github.com/pytorch/pytorch/pull/62890" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62890/hovercard">#62890</a>)</li>
<li>Added a unified API <code>c10::util::check_env</code> to check environment variable (<a href="https://github.com/pytorch/pytorch/pull/59052" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59052/hovercard">#59052</a>)</li>
</ul>
<h2>TorchScript</h2>
<ul>
<li>Added reference semantics to TorchScript classes (<a href="https://github.com/pytorch/pytorch/pull/44324" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/44324/hovercard">#44324</a>)</li>
<li>Conservatively moved all suitable prim ops from full-jit to mobile, and make them selective. (<a href="https://github.com/pytorch/pytorch/pull/58353" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58353/hovercard">#58353</a>)</li>
<li>Added change to predicate uses of RPC APIs on <code>torch.distributed.rpc.is_available()</code> (<a href="https://github.com/pytorch/pytorch/pull/58887" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58887/hovercard">#58887</a>)</li>
<li>Added a phase to perform inplace&lt;-&gt;functional conversion for activation operators (<a href="https://github.com/pytorch/pytorch/pull/57477" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57477/hovercard">#57477</a>)</li>
<li>Enabled Profile-Directed Typing in <code>torch.jit.script</code> (<a href="https://github.com/pytorch/pytorch/pull/62420" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62420/hovercard">#62420</a>)</li>
<li>Introduced enhancement for smart serialization for operator schemas with out arg (<a href="https://github.com/pytorch/pytorch/pull/63096" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63096/hovercard">#63096</a>)</li>
<li>Added a pass to transform better handle concatenation ops (<a href="https://github.com/pytorch/pytorch/pull/59881" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59881/hovercard">#59881</a>)</li>
<li>Added a new operator for concat that takes in variadic parameters (<a href="https://github.com/pytorch/pytorch/pull/59880" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59880/hovercard">#59880</a>)</li>
<li>Added support for union in TorchScript (<a href="https://github.com/pytorch/pytorch/pull/64234" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64234/hovercard">#64234</a>)</li>
</ul>
<h2>torch.package</h2>
<ul>
<li>Added basic tooling to enable users to see what is inside of a PackageExporter (<a href="https://github.com/pytorch/pytorch/pull/61147" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61147/hovercard">#61147</a>)</li>
<li>Added hasattr to <code>torch::deploy</code> C++ API (<a href="https://github.com/pytorch/pytorch/pull/62669" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62669/hovercard">#62669</a>)</li>
<li>Added support to re-save a PackageImporter module (<a href="https://github.com/pytorch/pytorch/pull/65101" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65101/hovercard">#65101</a>)</li>
<li>Added support to make frozen symbol name customizable in <code>torch::deploy</code>. (<a href="https://github.com/pytorch/pytorch/pull/63817" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63817/hovercard">#63817</a>)</li>
</ul>
<h2>Mobile</h2>
<ul>
<li>Enabled kineto profiler on mobile via EdgeKinetoProfiler (<a href="https://github.com/pytorch/pytorch/pull/62419" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62419/hovercard">#62419</a>)</li>
<li>Added support of loading lite interpreter module from assets in Android (<a href="https://github.com/pytorch/pytorch/pull/61609" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61609/hovercard">#61609</a>)</li>
<li>Enabled tracing based selective build (<a href="https://github.com/pytorch/pytorch/pull/63421" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63421/hovercard">#63421,</a> <a href="https://github.com/pytorch/pytorch/pull/64087" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64087/hovercard">#64087</a>, <a href="https://github.com/pytorch/pytorch/pull/66237" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/66237/hovercard">#66237,</a> <a href="https://github.com/pytorch/pytorch/pull/66395" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/66395/hovercard">#66395</a>)
<ul>
<li>built tracer in OSS  (<a href="https://github.com/pytorch/pytorch/pull/64087" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64087/hovercard">#64087</a>)</li>
<li>used operator.yaml to build libtorch library (<a href="https://github.com/pytorch/pytorch/pull/66237" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/66237/hovercard">#66237)</a></li>
<li>Built tracer and enabled tracing-based build with tracer output  (<a href="https://github.com/pytorch/pytorch/pull/66395" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/66395/hovercard">#66395</a>)</li>
</ul>
</li>
<li>NNAPI
<ul>
<li>Android NNAPI delegate implementation of runtime initialization (compilation) and execution (<a href="https://github.com/pytorch/pytorch/pull/62272" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62272/hovercard">#62272</a>)</li>
<li>Added <code>aten::{avgpool2d,softmax,to,div,flatten,detach,slice,log_softmax,conv2d_transpose}</code> to NNAPI converter (<a href="https://github.com/pytorch/pytorch/pull/58538" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58538/hovercard">#58538</a>, <a href="https://github.com/pytorch/pytorch/pull/58539" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58539/hovercard">#58539</a>, <a href="https://github.com/pytorch/pytorch/pull/58540" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58540/hovercard">#58540</a>, <a href="https://github.com/pytorch/pytorch/pull/58541" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58541/hovercard">#58541</a>, <a href="https://github.com/pytorch/pytorch/pull/60885" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60885/hovercard">#60885</a>, <a href="https://github.com/pytorch/pytorch/pull/58543" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58543/hovercard">#58543</a>, <a href="https://github.com/pytorch/pytorch/pull/59364" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59364/hovercard">#59364</a>, <a href="https://github.com/pytorch/pytorch/pull/61378" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61378/hovercard">#61378</a>, <a href="https://github.com/pytorch/pytorch/pull/59529" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59529/hovercard">#59529</a></li>
<li>Added Int32 support for NNAPI (<a href="https://github.com/pytorch/pytorch/pull/59365" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59365/hovercard">#59365</a>)</li>
<li>Made nnapi <code>aten::{conv2d,linear,cat,flatten}</code> converter accept flexible batch (<a href="https://github.com/pytorch/pytorch/pull/61021" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61021/hovercard">#61021</a>, <a href="https://github.com/pytorch/pytorch/pull/61022" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61022/hovercard">#61022</a>, <a href="https://github.com/pytorch/pytorch/commit/76c0f223d3">76c0f223d3</a>, <a href="https://github.com/pytorch/pytorch/pull/61024" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61024/hovercard">#61024</a>)</li>
<li>Added option to specify custom NNAPI serializer (<a href="https://github.com/pytorch/pytorch/pull/61025" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61025/hovercard">#61025</a>)</li>
<li>Made Android NNAPI preprocess to accept both single Tensor inputs and Tensor List inputs (<a href="https://github.com/pytorch/pytorch/pull/61752" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61752/hovercard">#61752</a>)</li>
<li>Added a few improvements in NNAPI delegation (<a href="https://github.com/pytorch/pytorch/pull/63489" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63489/hovercard">#63489</a>)</li>
<li>Added support const values in binary ops (<a href="https://github.com/pytorch/pytorch/commit/2d58f3f56d">2d58f3f56d</a>)</li>
</ul>
</li>
<li>Added unary/binary ops necessary and more shape functions for mobilenet (<a href="https://github.com/pytorch/pytorch/pull/56828" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/56828/hovercard">#56828</a>, <a href="https://github.com/pytorch/pytorch/pull/58932" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58932/hovercard">#58932</a>)</li>
<li>Added <code>aten::{hardswish,tanh,clamp}</code> for iOS Metal (<a href="https://github.com/pytorch/pytorch/pull/64588" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64588/hovercard">#64588</a>, <a href="https://github.com/pytorch/pytorch/pull/61383" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61383/hovercard">#61383</a>)</li>
<li>Added CoreML support (<a href="https://github.com/pytorch/pytorch/pull/64521" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64521/hovercard">#64521</a>, <a href="https://github.com/pytorch/pytorch/pull/64522" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64522/hovercard">#64522</a>, <a href="https://github.com/pytorch/pytorch/pull/64523" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64523/hovercard">#64523</a>)</li>
<li>Added compatibility API (<a href="https://github.com/pytorch/pytorch/pull/61477" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61477/hovercard">#61477</a>, <a href="https://github.com/pytorch/pytorch/pull/57501" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57501/hovercard">#57501</a>)</li>
<li>Added support operators with default argument in front of out argument (<a href="https://github.com/pytorch/pytorch/pull/63651" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63651/hovercard">#63651</a>, <a href="https://github.com/pytorch/pytorch/pull/63540" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63540/hovercard">#63540</a>)</li>
</ul>
<h2>Distributed</h2>
<p><code>DistributedDataParallel</code></p>
<ul>
<li>Local SGD and variants for DDP communication optimization (<a href="https://github.com/pytorch/pytorch/pull/60303" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60303/hovercard">#60303</a>, <a href="https://github.com/pytorch/pytorch/pull/60320" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60320/hovercard">#60320</a>, <a href="https://github.com/pytorch/pytorch/pull/60632" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60632/hovercard">#60632</a>, <a href="https://github.com/pytorch/pytorch/pull/60891" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60891/hovercard">#60891</a>, <a href="https://github.com/pytorch/pytorch/pull/61206" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61206/hovercard">#61206</a>, <a href="https://github.com/pytorch/pytorch/pull/61207" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61207/hovercard">#61207</a>, <a href="https://github.com/pytorch/pytorch/pull/62105" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62105/hovercard">#62105</a>, <a href="https://github.com/pytorch/pytorch/pull/62111" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62111/hovercard">#62111</a>, <a href="https://github.com/pytorch/pytorch/pull/62131" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62131/hovercard">#62131</a>, <a href="https://github.com/pytorch/pytorch/pull/62132" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62132/hovercard">#62132</a>, <a href="https://github.com/pytorch/pytorch/pull/62392" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62392/hovercard">#62392</a>, <a href="https://github.com/pytorch/pytorch/pull/63277" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63277/hovercard">#63277</a>, <a href="https://github.com/pytorch/pytorch/pull/63340" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63340/hovercard">#63340</a>, <a href="https://github.com/pytorch/pytorch/pull/64885" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64885/hovercard">#64885</a>, <a href="https://github.com/pytorch/pytorch/pull/65197" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65197/hovercard">#65197</a>)</li>
<li>Provided a noop hook for performance debugging (<a href="https://github.com/pytorch/pytorch/pull/64344" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64344/hovercard">#64344</a>, <a href="https://github.com/pytorch/pytorch/pull/64352" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64352/hovercard">#64352</a>)</li>
<li>Implemented BF16 allreduce gradient communication hook (<a href="https://github.com/pytorch/pytorch/pull/63260" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63260/hovercard">#63260</a>)</li>
<li>Allowed retrieval of model parameters in communication hook (<a href="https://github.com/pytorch/pytorch/pull/61637" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61637/hovercard">#61637</a>)</li>
</ul>
<p><code>torch.distributed</code></p>
<ul>
<li>Added a function to create new subgroups of a given size (<a href="https://github.com/pytorch/pytorch/pull/59111" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59111/hovercard">#59111</a>)</li>
<li>Introduced a new torchrun entry point for elastic (<a href="https://github.com/pytorch/pytorch/pull/64049" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64049/hovercard">#64049</a>)</li>
</ul>
<h2>torch.fx</h2>
<ul>
<li>Added APIs to mutate specific args/kwargs (<a href="https://github.com/pytorch/pytorch/pull/58571" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58571/hovercard">#58571</a>)</li>
<li>Introduced EngineHolder for serializing and running TRT Engines with PyTorch (<a href="https://github.com/pytorch/pytorch/commit/06399d441d">06399d441d</a>)</li>
<li>Introduced <code>__fx_create_arg__</code> dunder method for controlling custom classes are handled as node args (<a href="https://github.com/pytorch/pytorch/pull/61780" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61780/hovercard">#61780</a>)</li>
<li>Added <code>autowrap_functions</code> kwarg to Tracer (<a href="https://github.com/pytorch/pytorch/pull/62106" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62106/hovercard">#62106</a>)</li>
<li>Gradual typing
<ul>
<li>Added type annotation field to nodes (<a href="https://github.com/pytorch/pytorch/pull/60621" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60621/hovercard">#60621</a>)</li>
<li>Added experimental gradual typechecker (<a href="https://github.com/pytorch/pytorch/pull/60805" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60805/hovercard">#60805</a>)</li>
<li>Extended all experimental type-checking operations to support <code>conv2d</code>, <code>BatchNorm2D</code>,  <code>ReLU</code>, <code>maxpool2D</code>, <code>AdaptiveAvgPooling2D</code>, <code>flatten</code> (<a href="https://github.com/pytorch/pytorch/pull/61093" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61093/hovercard">#61093</a>, <a href="https://github.com/pytorch/pytorch/pull/61012" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61012/hovercard">#61012</a>, <a href="https://github.com/pytorch/pytorch/pull/61150" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61150/hovercard">#61150</a>, <a href="https://github.com/pytorch/pytorch/pull/61188" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61188/hovercard">#61188</a>, <a href="https://github.com/pytorch/pytorch/pull/61239" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61239/hovercard">#61239</a>, <a href="https://github.com/pytorch/pytorch/pull/61265" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61265/hovercard">#61265</a>)</li>
<li>Added experimental refinement types and unification for symbolic shape inference (<a href="https://github.com/pytorch/pytorch/pull/61776" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61776/hovercard">#61776</a>)</li>
<li>Changed output node handling for typechecker to deal with tuples (<a href="https://github.com/pytorch/pytorch/pull/62582" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62582/hovercard">#62582</a>)</li>
<li>Added handle of <code>get_attr</code> operations in typechecker (<a href="https://github.com/pytorch/pytorch/pull/62682" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62682/hovercard">#62682</a>)</li>
<li>Added equality constraints for some acc operations for symbolic inference (<a href="https://github.com/pytorch/pytorch/pull/63689" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63689/hovercard">#63689</a>)</li>
<li>Added inference for algebraic expressions (<a href="https://github.com/pytorch/pytorch/pull/63822" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63822/hovercard">#63822</a>)</li>
</ul>
</li>
<li>Provided function interface for <code>remove_duplicate_output_args</code> (<a href="https://github.com/pytorch/pytorch/pull/65134" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65134/hovercard">#65134</a>)</li>
<li>Introduced helper function to generate an unique name for an attr in a module (<a href="https://github.com/pytorch/pytorch/pull/64970" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64970/hovercard">#64970</a>)</li>
</ul>
<h2>ONNX</h2>
<ul>
<li>Added support for ONNX op set 14 (<a href="https://github.com/pytorch/pytorch/pull/59486" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59486/hovercard">#59486</a>)</li>
<li>Added support for GRU RNNs with packed input in scripting mode (<a href="https://github.com/pytorch/pytorch/pull/58691" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58691/hovercard">#58691</a>)</li>
<li>Enhanced shape inference (<a href="https://github.com/pytorch/pytorch/pull/64585" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64585/hovercard">#64585</a>)</li>
<li>Added support for <code>torch.{linspace, new_ones, nn.LSTMCell, bernoulli, dot, nn.utils.spectral_norm,bernoulli, distributions.normal.Normal, roll}</code> (<a href="https://github.com/pytorch/pytorch/pull/58854" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58854/hovercard">#58854</a>, <a href="https://github.com/pytorch/pytorch/pull/59255" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59255/hovercard">#59255</a>, <a href="https://github.com/pytorch/pytorch/pull/62757" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62757/hovercard">#62757</a>, <a href="https://github.com/pytorch/pytorch/pull/62765" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62765/hovercard">#62765</a>, <a href="https://github.com/pytorch/pytorch/pull/59536" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59536/hovercard">#59536,</a><a href="https://github.com/pytorch/pytorch/pull/61560" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61560/hovercard">#61560,</a><a href="https://github.com/pytorch/pytorch/pull/58697" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58697/hovercard">#58697</a>)</li>
</ul>
<h2>Infra (Releng)</h2>
<ul>
<li>Default Linux/Windows testing workflows were migrated to GitHub Actions. PyTorch Probot has been extended to support new set of rerun command with new set of labels that one can use to opt in and opt out of certain types of CI. More information can be found on <a href="https://github.com/pytorch/pytorch/wiki/Continuous-Integration#user-guide">Continuous Integration</a> wiki page</li>
<li>Overall statistics and health of PyTorch CI/CD system can be viewed at <a href="https://metrics.pytorch.org/" rel="nofollow">https://metrics.pytorch.org</a> (<a href="https://github.com/pytorch/pytorch/pull/65157" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65157/hovercard">#65157</a>, <a href="https://github.com/pytorch/pytorch/pull/61389" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61389/hovercard">#61389</a>, <a href="https://github.com/pytorch/pytorch/pull/62217" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62217/hovercard">#62217</a>, <a href="https://github.com/pytorch/pytorch/pull/64948" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64948/hovercard">#64948</a>, <a href="https://github.com/pytorch/pytorch/pull/60026" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60026/hovercard">#60026</a>, <a href="https://github.com/pytorch/pytorch/pull/61071" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61071/hovercard">#61071</a>, <a href="https://github.com/pytorch/pytorch/pull/64303" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64303/hovercard">#64303</a>)</li>
<li>Improved mechanism for disabling tests via issues. Creating an issue which title begins with ‚ÄúDISABLED‚Äù followed by the test name will disable the test in question for all platforms, which could be refined by explicitly specifying list of platforms in the issue body. Comment from @pytorch-probot would indicate that issue format was recognized by the CI system and test is now disabled. Closing the issue re-enabled the specified test in CI. Disabled tests will be temporarily re-enabled while running CI for PR marked as fixing it (<a href="https://github.com/pytorch/pytorch/pull/61427" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61427/hovercard">#61427</a>)</li>
<li>New documentation preview and new artifacts frontend. Using <a href="https://hud.pytorch.org/" rel="nofollow">https://hud.pytorch.org</a>, one can get an overview of PR/commit CI status, download build artifacts as well as read documentation associated with this build. See <a href="https://github.com/pytorch/pytorch/wiki/Using-hud.pytorch.org">Using HUD</a> wiki page for more information (<a href="https://github.com/pytorch/pytorch/pull/60711" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60711/hovercard">#60711</a>,  <a href="https://github.com/pytorch/pytorch/pull/60792" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60792/hovercard">#60792</a>, <a href="https://github.com/pytorch/pytorch/pull/60893" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60893/hovercard">#60893</a>)</li>
</ul>
<h2>Misc</h2>
<ul>
<li>Added support for <code>torch.fft.</code> operators on ARM-based platforms using pocket FFT (<a href="https://github.com/pytorch/pytorch/pull/60976" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60976/hovercard">#60976</a>, <a href="https://github.com/pytorch/pytorch/pull/62222" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62222/hovercard">#62222</a>, <a href="https://github.com/pytorch/pytorch/pull/63714" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63714/hovercard">#63714</a>)</li>
<li><code>torch.einsum</code>: added support for the ‚Äúsublist‚Äù format (<a href="https://github.com/pytorch/pytorch/pull/56625" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/56625/hovercard">#56625</a>)</li>
<li><code>torch.linalg.det</code>: added support for complex autograd (<a href="https://github.com/pytorch/pytorch/pull/58195" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58195/hovercard">#58195</a>)</li>
<li>Added autograd support for <code>Tensor.to_sparse</code> (<a href="https://github.com/pytorch/pytorch/pull/58413" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58413/hovercard">#58413</a>)</li>
<li>Added more CUDA support for CSR layout: constructors (<a href="https://github.com/pytorch/pytorch/pull/59010" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59010/hovercard">#59010</a>), sparse_to_dense/add_sparse_csr (<a href="https://github.com/pytorch/pytorch/pull/59011" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59011/hovercard">#59011</a>), addmm/matvec (<a href="https://github.com/pytorch/pytorch/pull/59012" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59012/hovercard">#59012</a>)</li>
<li>Vulkan: Added support for <code>max_pool2d</code>, <code>tanh</code>, <code>hardshrink</code>, <code>log_softmax</code>, <code>leaky_relu</code>, <code>softmax</code> (<a href="https://github.com/pytorch/pytorch/pull/58806" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58806/hovercard">#58806</a>, <a href="https://github.com/pytorch/pytorch/pull/60695" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60695/hovercard">#60695</a>, <a href="https://github.com/pytorch/pytorch/pull/62870" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62870/hovercard">#62870</a>, <a href="https://github.com/pytorch/pytorch/pull/63193" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63193/hovercard">#63193</a>, <a href="https://github.com/pytorch/pytorch/pull/62239" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62239/hovercard">#62239</a>)</li>
<li>Enabled local run of clang-tidy and clang-format lint workflows (<a href="https://github.com/pytorch/pytorch/pull/61121" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61121/hovercard">#61121</a>, <a href="https://github.com/pytorch/pytorch/pull/61797" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61797/hovercard">#61797</a>, <a href="https://github.com/pytorch/pytorch/pull/60745" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60745/hovercard">#60745</a>)</li>
</ul>
<h1>Improvements</h1>
<h2>Python API</h2>
<ul>
<li>Added clearer stack trace for <code>torch.floor_divide</code> deprecation warning (<a href="https://github.com/pytorch/pytorch/pull/64034" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64034/hovercard">#64034</a>)</li>
<li>Use cascade-summation algorithm to improve <code>torch.nansum</code> accuracy (<a href="https://github.com/pytorch/pytorch/pull/61082" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61082/hovercard">#61082</a>)</li>
<li><code>torch.i0</code>: now promote integer inputs to float (<a href="https://github.com/pytorch/pytorch/pull/52735" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/52735/hovercard">#52735</a>)</li>
<li><code>torch.kthvalue:</code> added change to adjust output dim size for numpy compatibility (<a href="https://github.com/pytorch/pytorch/pull/59214" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59214/hovercard">#59214</a>)</li>
<li>Added reduce variants for <code>torch.scatter</code> operation. (<a href="https://github.com/pytorch/pytorch/pull/57015" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57015/hovercard">#57015</a>)</li>
<li>Added support for quantized tensors in <code>torch.testing.assert_close</code> (<a href="https://github.com/pytorch/pytorch/pull/58926" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58926/hovercard">#58926</a>)</li>
<li>Improved error message for invalid value input to Distribution methods (<a href="https://github.com/pytorch/pytorch/pull/61056" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61056/hovercard">#61056</a>)</li>
<li><code>torch.isclose</code> upcast to most precise dtype within their category before the comparison (<a href="https://github.com/pytorch/pytorch/pull/60536" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60536/hovercard">#60536</a>)</li>
<li>Added change to cast <code>alpha</code> to <code>acc_type</code> for <code>torch.add</code> and <code>torch.sub</code> (<a href="https://github.com/pytorch/pytorch/pull/60227" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60227/hovercard">#60227</a>)</li>
<li>Fixed dimension in the error message for CUDA <code>torch.cat</code> shape check and removed unnecessary offending index information (<a href="https://github.com/pytorch/pytorch/pull/64556" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64556/hovercard">#64556</a>).</li>
<li>Improved DLPack support (<a href="https://github.com/pytorch/pytorch/pull/57110" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57110/hovercard">#57110</a>).</li>
<li>Added change to raise an error when empty index tensor is passed to <code>torch.gather</code> (<a href="https://github.com/pytorch/pytorch/pull/65006" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65006/hovercard">#65006</a>).</li>
<li>Added change to store <code>float64</code> in <code>tensorboard</code> instead of <code>float32</code> (<a href="https://github.com/pytorch/pytorch/pull/59435" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59435/hovercard">#59435</a>).</li>
<li>Added <code>use_strict_trace</code> to tensorboard <code>add_graph</code> method (<a href="https://github.com/pytorch/pytorch/pull/63120" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63120/hovercard">#63120</a>).</li>
<li>Add option to skip GH validation for <code>torch.hub</code> (<a href="https://github.com/pytorch/pytorch/pull/62139" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62139/hovercard">#62139</a>)</li>
<li>Added a new kwarg <code>output_size</code> to <code>tensor.repeat_interleave</code>(<a href="https://github.com/pytorch/pytorch/pull/58881" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58881/hovercard">#58881</a>)</li>
<li>Add support for <code>torch.isclose</code> (<a href="https://github.com/pytorch/pytorch/pull/63571" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63571/hovercard">#63571</a>)</li>
<li>Make the behavior of <code>torch.{testting.assert_close,is_close}</code> consistent with numpy (<a href="https://github.com/pytorch/pytorch/pull/63841" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63841/hovercard">#63841</a>)</li>
</ul>
<h2>Autograd</h2>
<ul>
<li>Added warning about memory leak when <code>.backward()</code> is called with <code>create_graph=True</code> (<a href="https://github.com/pytorch/pytorch/pull/59412" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59412/hovercard">#59412</a>)</li>
<li>Added warning when accessing <code>Tensor::grad()</code> on a non-leaf Tensor in the C++ API (<a href="https://github.com/pytorch/pytorch/pull/59362" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59362/hovercard">#59362</a>)</li>
<li>Fixed error message formatting in <code>grad_output</code> creation for <code>.backward()</code> and <code>autograd.grad()</code> (<a href="https://github.com/pytorch/pytorch/pull/59532" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59532/hovercard">#59532</a>)</li>
<li>Added change to raise <code>NotImplementedError</code> for forward and backward-mode AD formulas that are not implemented (<a href="https://github.com/pytorch/pytorch/pull/59482" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59482/hovercard">#59482</a>, <a href="https://github.com/pytorch/pytorch/pull/59483" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59483/hovercard">#59483</a>)</li>
<li>Reduced memory usage for <code>torch.relu</code> for common use cases (<a href="https://github.com/pytorch/pytorch/pull/63089" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63089/hovercard">#63089</a>)</li>
<li>Added support for non-leaf inputs for <code>autograd.backward()</code> function <code>inputs</code> argument (<a href="https://github.com/pytorch/pytorch/pull/60521" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60521/hovercard">#60521</a>)</li>
<li>Improved error message when a tensor with <code>requires_grad=True</code>  is passed to a non-differentiable function (<a href="https://github.com/pytorch/pytorch/pull/60610" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60610/hovercard">#60610</a>)</li>
<li>Made <code>binary_cross_entropy</code> differentiable w.r.t. <code>target</code> (<a href="https://github.com/pytorch/pytorch/pull/59447" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59447/hovercard">#59447</a>)</li>
</ul>
<h2>torch.nn</h2>
<ul>
<li>Added support for inputs with no batch dimensions for <code>nn.{AdaptiveAvgPool*d, AdaptiveMaxPool*d, AvgPool*d, CosineEmbeddingLoss, Dropout, FractionalMaxPool2d, Linear, LPPool1d, MaxPool*d, MaxUnpool*d, NLLLoss, PairwiseDistance, ReflectionPad*d, ReplicationPad*d, TripletMarginLoss, ZeroPad*d}</code>, most other loss modules, and all activation modules (<a href="https://github.com/pytorch/pytorch/pull/61264" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61264/hovercard">#61264</a>, <a href="https://github.com/pytorch/pytorch/pull/61847" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61847/hovercard">#61847</a>, <a href="https://github.com/pytorch/pytorch/pull/61860" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61860/hovercard">#61860</a>, <a href="https://github.com/pytorch/pytorch/pull/64590" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64590/hovercard">#64590</a>, <a href="https://github.com/pytorch/pytorch/pull/61911" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61911/hovercard">#61911</a>, <a href="https://github.com/pytorch/pytorch/pull/62490" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62490/hovercard">#62490</a>, <a href="https://github.com/pytorch/pytorch/pull/60992" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60992/hovercard">#60992</a>, <a href="https://github.com/pytorch/pytorch/pull/62190" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62190/hovercard">#62190</a>, <a href="https://github.com/pytorch/pytorch/pull/62206" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62206/hovercard">#62206</a>, <a href="https://github.com/pytorch/pytorch/pull/61984" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61984/hovercard">#61984</a>, <a href="https://github.com/pytorch/pytorch/pull/61310" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61310/hovercard">#61310</a>, <a href="https://github.com/pytorch/pytorch/pull/62651" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62651/hovercard">#62651</a>, <a href="https://github.com/pytorch/pytorch/pull/64882" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64882/hovercard">#64882</a>, <a href="https://github.com/pytorch/pytorch/pull/62183" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62183/hovercard">#62183</a>, <a href="https://github.com/pytorch/pytorch/pull/61060" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61060/hovercard">#61060</a>, <a href="https://github.com/pytorch/pytorch/pull/61262" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61262/hovercard">#61262</a>, <a href="https://github.com/pytorch/pytorch/pull/62729" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62729/hovercard">#62729</a>, <a href="https://github.com/pytorch/pytorch/pull/61300" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61300/hovercard">#61300</a>, <a href="https://github.com/pytorch/pytorch/pull/61461" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61461/hovercard">#61461</a>, <a href="https://github.com/pytorch/pytorch/pull/62726" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62726/hovercard">#62726</a>)</li>
<li>Added support for inputs with 0 batch size for <code>nn.{AdaptiveAvgPool*d, AdaptiveMaxPool*d, Bilinear, FractionalMaxPool*d, LocalResponseNorm, MaxPool*d, MaxUnpool*d, TransformerDecoder, TransformerDecoderLayer, TransformerEncoder, TransformerEncoderLayer}</code> (<a href="https://github.com/pytorch/pytorch/pull/62025" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62025/hovercard">#62025</a>, <a href="https://github.com/pytorch/pytorch/pull/62088" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62088/hovercard">#62088</a>, <a href="https://github.com/pytorch/pytorch/pull/47106" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/47106/hovercard">#47106</a>, <a href="https://github.com/pytorch/pytorch/pull/62083" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62083/hovercard">#62083</a>, <a href="https://github.com/pytorch/pytorch/pull/62801" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62801/hovercard">#62801</a>, <a href="https://github.com/pytorch/pytorch/pull/64082" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64082/hovercard">#64082</a>, <a href="https://github.com/pytorch/pytorch/pull/62800" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62800/hovercard">#62800</a>)</li>
<li>Parametrization: Added support for nested parametrizations, parametrizations depending on several inputs, resizing of parametrized tensors, and the orthogonal parametrization (<a href="https://github.com/pytorch/pytorch/pull/65167" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65167/hovercard">#65167</a>, <a href="https://github.com/pytorch/pytorch/pull/60530" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60530/hovercard">#60530</a>, <a href="https://github.com/pytorch/pytorch/pull/60418" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60418/hovercard">#60418</a>, <a href="https://github.com/pytorch/pytorch/pull/62089" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62089/hovercard">#62089</a>)</li>
<li><code>nn.AvgPool2d</code>: Added <code>channels_last</code> support on CPU (<a href="https://github.com/pytorch/pytorch/pull/58725" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58725/hovercard">#58725</a>)</li>
<li><code>nn.BatchNorm</code>: Use <code>resize_output</code> and <code>empty</code> instead of <code>empty_like</code> to improve flexibility in output memory format choice (<a href="https://github.com/pytorch/pytorch/pull/63084" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63084/hovercard">#63084</a>)</li>
<li><code>nn.Bilinear</code>: Added support for non-contiguous tensor inputs (<a href="https://github.com/pytorch/pytorch/pull/38409" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/38409/hovercard">#38409</a>)</li>
<li><code>nn.GELU</code>: Added support for fp32/bfloat16 in CPU path using mkldnn implementation (<a href="https://github.com/pytorch/pytorch/pull/58525" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58525/hovercard">#58525</a>)</li>
<li><code>nn.GroupNorm</code>: Improved numerical stability by using the Welford algorithm and cascade summation (<a href="https://github.com/pytorch/pytorch/pull/54921" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/54921/hovercard">#54921</a>)</li>
<li><code>nn.LayerNorm</code>: Improved numerical stability by using the Welford algorithm and pairwise sums (<a href="https://github.com/pytorch/pytorch/pull/59987" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59987/hovercard">#59987</a>)</li>
<li><code>nn.NLLLoss</code>: Added support for target of dtype <code>byte</code> (<a href="https://github.com/pytorch/pytorch/pull/60308" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60308/hovercard">#60308</a>, <a href="https://github.com/pytorch/pytorch/pull/60650" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60650/hovercard">#60650</a>)</li>
<li><code>nn.SmoothL1Loss</code>: Added support for integral target within the backward pass (<a href="https://github.com/pytorch/pytorch/pull/61112" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61112/hovercard">#61112</a>)</li>
<li><code>nn.Transformer</code>: Added configurable pre/post LayerNorm placement (<a href="https://github.com/pytorch/pytorch/pull/60593" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60593/hovercard">#60593</a>, <a href="https://github.com/pytorch/pytorch/pull/61692" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61692/hovercard">#61692</a>)</li>
<li>Added check to verify non-zero sequence length for <code>nn.{RNN, LSTM, GRU}</code> (<a href="https://github.com/pytorch/pytorch/pull/60269" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60269/hovercard">#60269</a>)</li>
<li>Added support for bfloat16 in CPU path to <code>nn.{LeakyReLU, RReLU}</code> (<a href="https://github.com/pytorch/pytorch/pull/61514" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61514/hovercard">#61514</a>)</li>
<li>Added support for <code>channels_last</code> memory format in <code>nn.{AdaptiveMaxPool2d, GroupNorm}</code> (<a href="https://github.com/pytorch/pytorch/pull/48920" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/48920/hovercard">#48920</a>, <a href="https://github.com/pytorch/pytorch/pull/49821" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/49821/hovercard">#49821</a>)</li>
<li>Added callable activation function support to <code>nn.{MultiheadAttention, Transformer, TransformerDecoderLayer, TransformerEncoderLayer}</code> (<a href="https://github.com/pytorch/pytorch/pull/61355" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61355/hovercard">#61355</a>, <a href="https://github.com/pytorch/pytorch/pull/62342" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62342/hovercard">#62342</a>)</li>
</ul>
<h2>Profiler</h2>
<ul>
<li>Changed <code>profiler.profile</code> argument <code>with_flops</code>  when set to <code>True</code> to report total FLOPs rather than FLOP/s, and support more operators (<a href="https://github.com/pytorch/pytorch/pull/62779" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62779/hovercard">#62779</a>, <a href="https://github.com/pytorch/pytorch/pull/61895" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61895/hovercard">#61895</a>)</li>
<li>Improved memory profiling and Tensorboard memory view, enabling better understanding of memory usage by showing active memory allocations at various points of your program run as well as a memory usage trend chart.  (<a href="https://github.com/pytorch/pytorch/pull/61282" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61282/hovercard">#61282</a>, <a href="https://github.com/pytorch/kineto/pull/361" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/kineto/pull/361/hovercard"><code>#361</code></a>, <a href="https://github.com/pytorch/kineto/pull/404" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/kineto/pull/404/hovercard"><code>#404</code></a><a href="https://github.com/pytorch/kineto/pull/435/commits/36f069ad8f819255f5b575782e99b0c4573a6d0f">,</a><a href="https://github.com/pytorch/kineto/pull/416" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/kineto/pull/416/hovercard"><code>#416</code></a><a href="https://github.com/pytorch/kineto/pull/435/commits/d6d28b719270b1ceb10fca1003cfb77a11e18c79">,</a><a href="https://github.com/pytorch/kineto/pull/421" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/kineto/pull/421/hovercard"><code>#421</code></a>)</li>
<li>Added flow arrows between ops in the forward pass and the corresponding ops in the backward pass in the trace view (<a href="https://github.com/pytorch/pytorch/pull/62553" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62553/hovercard">#62553</a>, <a href="https://github.com/pytorch/kineto/pull/372" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/kineto/pull/372/hovercard">#372</a>)</li>
<li>Increased profiling coverage of backward pass (<a href="https://github.com/pytorch/pytorch/pull/63619" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63619/hovercard">#63619</a>)</li>
<li>Made threads and GPU streams appear in a consistent sorted order in the trace view (<a href="https://github.com/pytorch/kineto/pull/399" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/kineto/pull/399/hovercard">#399</a>)</li>
<li>Added shapes and reg usage to the GPU kernel view (<a href="https://github.com/pytorch/kineto/pull/351" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/kineto/pull/351/hovercard"><code>#351</code></a><a href="https://github.com/pytorch/kineto/pull/402/commits/eed895ba7ce521deb457dee4678d7a6c8a4a7bd6">)</a></li>
</ul>
<h2>Dataloader</h2>
<ul>
<li>Properly delegated indices called by <code>Subset</code> to dataset (<a href="https://github.com/pytorch/pytorch/pull/59513" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59513/hovercard">#59513</a>)</li>
<li>Removed the restriction that input datasets in <code>ConcatDataset</code> must be <code>Sized</code> (<a href="https://github.com/pytorch/pytorch/pull/64114" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64114/hovercard">#64114</a>)</li>
<li>Allowed annotation of <code>IterableDataset</code> to accept keyword-only arguments and <code>abc</code> class (<a href="https://github.com/pytorch/pytorch/pull/58450" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58450/hovercard">#58450</a>)</li>
<li>Changed annotation of <code>DataLoader</code> to accept non-integer <code>Sampler</code> as input(<a href="https://github.com/pytorch/pytorch/pull/63500" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63500/hovercard">#63500</a>)</li>
</ul>
<h2>CUDA</h2>
<ul>
<li>Include function name in the error message for inputs being on different devices (<a href="https://github.com/pytorch/pytorch/pull/58502" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58502/hovercard">#58502</a>)</li>
<li>Fix MAGMA initialization (<a href="https://github.com/pytorch/pytorch/pull/58521" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58521/hovercard">#58521</a>)</li>
<li>Updated NCCL to 2.10 (<a href="https://github.com/pytorch/pytorch/pull/62276" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62276/hovercard">#62276</a>)</li>
<li>Added deterministic path for <code>torch.scatter_add</code> for 1D tensors (<a href="https://github.com/pytorch/pytorch/pull/58761" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58761/hovercard">#58761</a>)</li>
<li>Added CUDA support for mean reduction (<a href="https://github.com/pytorch/pytorch/pull/59543" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59543/hovercard">#59543</a>)</li>
<li>Add missing CUDA kernel launch check (<a href="https://github.com/pytorch/pytorch/pull/60114" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60114/hovercard">#60114</a>)</li>
<li>Improved CUDA extension building error/warning messages (<a href="https://github.com/pytorch/pytorch/pull/59665" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59665/hovercard">#59665</a>, <a href="https://github.com/pytorch/pytorch/pull/60592" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60592/hovercard">#60592</a>)</li>
<li>Added change to compute CUDA reduction buffer size in elements (<a href="https://github.com/pytorch/pytorch/pull/63969" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63969/hovercard">#63969</a>)</li>
</ul>
<h2>TorchScript</h2>
<ul>
<li>Added change to simplify pass on arithmetic expressions for integers. (<a href="https://github.com/pytorch/pytorch/pull/61444" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61444/hovercard">#61444</a>)</li>
<li>Set future's error to current exception as is when <code>--torch_jit_enable_rethrow_caught_exception=true</code> (<a href="https://github.com/pytorch/pytorch/pull/63348" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63348/hovercard">#63348</a>)</li>
<li>Improved TorchScript module getattr() to be same as python class getattr() method (<a href="https://github.com/pytorch/pytorch/pull/61599" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61599/hovercard">#61599</a>)</li>
<li>Improved slicing for scripted version of <code>torch.nn.ModuleList</code> to support arbitrary step size (<a href="https://github.com/pytorch/pytorch/pull/58361" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58361/hovercard">#58361</a>)</li>
<li>Added parsing logic for <code>Tuple[()]</code> annotation (<a href="https://github.com/pytorch/pytorch/pull/58340" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58340/hovercard">#58340</a>)</li>
<li>Changed list striding kernel implementation to handle optional integers (<a href="https://github.com/pytorch/pytorch/pull/58536" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58536/hovercard">#58536</a>)</li>
<li>Added support for <code>torch.nn.Parameter</code> type for Profile-Directed-Typing (<a href="https://github.com/pytorch/pytorch/pull/59249" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59249/hovercard">#59249</a>)</li>
<li>Added change to annotate NoneType as Optional[type] (<a href="https://github.com/pytorch/pytorch/pull/60383" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60383/hovercard">#60383</a>)</li>
<li>Added support for default values on NamedTuple fields (<a href="https://github.com/pytorch/pytorch/pull/54682" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/54682/hovercard">#54682</a>)</li>
<li>Improved JIT support for <code>torch.einsum</code> (<a href="https://github.com/pytorch/pytorch/pull/59265" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59265/hovercard">#59265</a>)</li>
<li>Added change to allow for heterogenous List and Dict values + Improve container typing algorithm (<a href="https://github.com/pytorch/pytorch/pull/57137" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57137/hovercard">#57137</a>)</li>
<li>Added support for eager mode use of <code>torch.jit.isinstance</code> with multiple types (<a href="https://github.com/pytorch/pytorch/pull/60465" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60465/hovercard">#60465</a>)</li>
<li>Allowed uncompiled strings as input to <code>checkScriptRaisesRegex</code> (<a href="https://github.com/pytorch/pytorch/pull/63901" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63901/hovercard">#63901</a>)</li>
<li>Introduced more robust check of whether a class is defined in torch (<a href="https://github.com/pytorch/pytorch/pull/64083" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64083/hovercard">#64083</a>)</li>
<li>Added change to preserve types during empty container assignment (<a href="https://github.com/pytorch/pytorch/pull/58911" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58911/hovercard">#58911</a>)</li>
<li>Made JIT not assume that the device is CUDA. (<a href="https://github.com/pytorch/pytorch/pull/54238" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/54238/hovercard">#54238</a>)</li>
<li>Updated <code>optimize_for_mobile</code> to preserve nodes‚Äô debug information (<a href="https://github.com/pytorch/pytorch/pull/63106" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63106/hovercard">#63106</a>)</li>
<li>Added support for device as Dict key (<a href="https://github.com/pytorch/pytorch/pull/65079" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65079/hovercard">#65079</a>)</li>
<li>Added support for Python C extension modules in <code>torch::deploy</code> (<a href="https://github.com/pytorch/pytorch/pull/58117" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58117/hovercard">#58117</a>)</li>
<li>Added a flag to suppress stacktrace in exception messages(<a href="https://github.com/pytorch/pytorch/pull/63073" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63073/hovercard">#63073</a>)</li>
<li>Added API to change logging levels for JIT (<a href="https://github.com/pytorch/pytorch/pull/58821" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58821/hovercard">#58821</a>)</li>
<li>Provided API to preserve source range and callstack information during graph rewrite (<a href="https://github.com/pytorch/pytorch/pull/58300" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58300/hovercard">#58300</a>)</li>
<li>Re-enabled BatchNorm autodiff  (<a href="https://github.com/pytorch/pytorch/pull/57321" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57321/hovercard">#57321</a>)</li>
<li>Extracted element-wise ops supported by JIT fuser into a separate list (<a href="https://github.com/pytorch/pytorch/pull/59579" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59579/hovercard">#59579</a>)</li>
<li>Reworked requires_grad on DifferentiableGraphOp (<a href="https://github.com/pytorch/pytorch/pull/57575" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57575/hovercard">#57575</a>)</li>
</ul>
<h2>torch.package</h2>
<ul>
<li>Unified three categories of dependency handling error (broken, denied, unhandled) into a single "error" field in the node, with optional context (<a href="https://github.com/pytorch/pytorch/pull/58572" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58572/hovercard">#58572</a>)</li>
<li>Renamed MockZipReader into DirectoryReader (<a href="https://github.com/pytorch/pytorch/pull/59107" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59107/hovercard">#59107</a>)</li>
<li>Added change to silently skip cases where the <strong>**import</strong>** statement cannot be parsed (<a href="https://github.com/pytorch/pytorch/pull/61148" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61148/hovercard">#61148</a>)</li>
<li>Make torch::deploy work with or without cuda (<a href="https://github.com/pytorch/pytorch/pull/58493" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58493/hovercard">#58493</a>)</li>
</ul>
<h2>Mobile</h2>
<ul>
<li>Added check to ensure op name does not contain open parenthesis (<a href="https://github.com/pytorch/pytorch/pull/58687" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58687/hovercard">#58687</a>)</li>
<li>Added handles and symbolicate exception callstack thrown from backend (<a href="https://github.com/pytorch/pytorch/pull/55462" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/55462/hovercard">#55462</a>, <a href="https://github.com/pytorch/pytorch/pull/57441" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57441/hovercard">#57441</a>, <a href="https://github.com/pytorch/pytorch/pull/57481" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57481/hovercard">#57481</a>)</li>
<li>Enabled implicit operator versioning via number of arguments (<a href="https://github.com/pytorch/pytorch/pull/58852" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58852/hovercard">#58852</a>)</li>
<li>Cleaned up unused APIs and improve debugging experience for iOS GPU (<a href="https://github.com/pytorch/pytorch/pull/60280" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60280/hovercard">#60280</a>, <a href="https://github.com/pytorch/pytorch/pull/60281" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60281/hovercard">#60281,</a><a href="https://github.com/pytorch/pytorch/pull/60282" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60282/hovercard">#60282</a>)</li>
<li>Added debug information to track memory allocation exception for Metal (<a href="https://github.com/pytorch/pytorch/pull/59112" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59112/hovercard">#59112</a>)</li>
<li>Added print of IValue type name in error message for Android (<a href="https://github.com/pytorch/pytorch/pull/64602" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64602/hovercard">#64602</a>)</li>
<li>Added print of error message when failing to load model file (<a href="https://github.com/pytorch/pytorch/pull/63404" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63404/hovercard">#63404</a>)</li>
<li>Introduced multiple improvements in <code>torch.utils.model_dump</code> APIs:
<ul>
<li>Make stdout argument for main kwarg-only (<a href="https://github.com/pytorch/pytorch/pull/60699" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60699/hovercard">#60699</a>)</li>
<li>Implement "Hider" properly (<a href="https://github.com/pytorch/pytorch/pull/57654" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57654/hovercard">#57654</a>)</li>
<li>Handle <code>torch.device</code> objects (<a href="https://github.com/pytorch/pytorch/pull/57656" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57656/hovercard">#57656</a>)</li>
<li>Handle dict rendering (<a href="https://github.com/pytorch/pytorch/pull/57657" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57657/hovercard">#57657</a>)</li>
<li>Add a section that summarizes tensor memory usage (<a href="https://github.com/pytorch/pytorch/pull/57658" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57658/hovercard">#57658</a>)</li>
<li>Handle invalid UTF-8 in pickles (<a href="https://github.com/pytorch/pytorch/pull/57661" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57661/hovercard">#57661</a>)</li>
</ul>
</li>
</ul>
<h2>Quantization</h2>
<ul>
<li>Added out variant for int8 <code>quantized::linear</code> (<a href="https://github.com/pytorch/pytorch/pull/58282" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58282/hovercard">#58282</a>) and <code>quantized::embedding_bag_byte_prepack</code> (<a href="https://github.com/pytorch/pytorch/pull/64081" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64081/hovercard">#64081</a>)</li>
<li>FX graph mode quantization: improve <code>qconfig_dict</code> argument handling (<a href="https://github.com/pytorch/pytorch/pull/59605" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59605/hovercard">#59605</a>, <a href="https://github.com/pytorch/pytorch/pull/58566" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58566/hovercard">#58566</a>)</li>
<li>Added support to embedding trained in FP16 (<a href="https://github.com/pytorch/pytorch/pull/60736" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60736/hovercard">#60736</a>)</li>
<li>Added support for <code>torch.index_select</code> on quantized tensors (<a href="https://github.com/pytorch/pytorch/pull/61406" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61406/hovercard">#61406</a>)</li>
<li>Added a new fused MovingAvg Obs + FakeQuant operator (<a href="https://github.com/pytorch/pytorch/pull/61570" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61570/hovercard">#61570</a>, <a href="https://github.com/pytorch/pytorch/pull/61589" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61589/hovercard">#61589</a>, <a href="https://github.com/pytorch/pytorch/pull/61691" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61691/hovercard">#61691</a>, <a href="https://github.com/pytorch/pytorch/pull/62346" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62346/hovercard">#62346</a>, <a href="https://github.com/pytorch/pytorch/pull/62863" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62863/hovercard">#62863</a>, <a href="https://github.com/pytorch/pytorch/pull/62702" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62702/hovercard">#62702</a>, <a href="https://github.com/pytorch/pytorch/pull/63043" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63043/hovercard">#63043</a>, <a href="https://github.com/pytorch/pytorch/pull/64829" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64829/hovercard">#64829</a>)</li>
<li>Added support for dynamic linear + relu fusion (INT8) (<a href="https://github.com/pytorch/pytorch/pull/63799" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63799/hovercard">#63799</a>,<a href="https://github.com/pytorch/pytorch/pull/63826" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63826/hovercard">#63826</a>)</li>
<li>Enabled JIT tracing on quantizable LSTM (<a href="https://github.com/pytorch/pytorch/pull/64438" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64438/hovercard">#64438</a>)</li>
</ul>
<h2>Distributed</h2>
<p><code>DistributedDataParallel</code></p>
<ul>
<li>Added error logging to DDP logging API (<a href="https://github.com/pytorch/pytorch/pull/59281" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59281/hovercard">#59281</a>, <a href="https://github.com/pytorch/pytorch/pull/59284" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59284/hovercard">#59284</a>, <a href="https://github.com/pytorch/pytorch/pull/59351" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59351/hovercard">#59351,</a><a href="https://github.com/pytorch/pytorch/pull/65023" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65023/hovercard">#65023</a>)</li>
<li>Added <code>NCCL_ASYNC_ERROR_HANDLING</code> environment variable to control NCCL error handling (<a href="https://github.com/pytorch/pytorch/pull/59109" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59109/hovercard">#59109</a>)</li>
<li>Communication hook APIs to always return single tensor (<a href="https://github.com/pytorch/pytorch/pull/62074" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62074/hovercard">#62074</a>, <a href="https://github.com/pytorch/pytorch/pull/62389" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62389/hovercard">#62389</a>, <a href="https://github.com/pytorch/pytorch/pull/62457" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62457/hovercard">#62457</a>)</li>
<li>Added DDP bucket sizes in DDP logging API (<a href="https://github.com/pytorch/pytorch/pull/62229" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62229/hovercard">#62229</a>, <a href="https://github.com/pytorch/pytorch/pull/62232" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62232/hovercard">#62232</a>, <a href="https://github.com/pytorch/pytorch/pull/62231" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62231/hovercard">#62231</a>, <a href="https://github.com/pytorch/pytorch/pull/62625" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62625/hovercard">#62625</a>,</li>
<li>Improved rebuilding buckets logic  (<a href="https://github.com/pytorch/pytorch/pull/62279" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62279/hovercard">#62279</a>, <a href="https://github.com/pytorch/pytorch/pull/58097" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58097/hovercard">#58097</a>)</li>
<li>Allowed DDP uneven inputs work with communication hooks (<a href="https://github.com/pytorch/pytorch/pull/61017" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61017/hovercard">#61017</a>, <a href="https://github.com/pytorch/pytorch/pull/61018" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61018/hovercard">#61018</a>, <a href="https://github.com/pytorch/pytorch/pull/61019" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61019/hovercard">#61019</a>, <a href="https://github.com/pytorch/pytorch/pull/61020" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61020/hovercard">#61020</a>)</li>
<li>Added logging if graph is static at end of training (<a href="https://github.com/pytorch/pytorch/pull/61871" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61871/hovercard">#61871</a>)</li>
<li>Added logging of unused param names under DETAIL debug mode. (<a href="https://github.com/pytorch/pytorch/pull/62209" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62209/hovercard">#62209</a>)</li>
<li>Allowed tuning of first bucket in DDP (<a href="https://github.com/pytorch/pytorch/pull/62748" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62748/hovercard">#62748</a>)</li>
<li>Added gradient ready order, host-side timestamps, and bucket indices to DDP logging (<a href="https://github.com/pytorch/pytorch/pull/62751" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62751/hovercard">#62751</a>, <a href="https://github.com/pytorch/pytorch/pull/62770" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62770/hovercard">#62770</a>)</li>
<li>Added a debug check in C++ fp16 gradient hook (<a href="https://github.com/pytorch/pytorch/pull/63379" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63379/hovercard">#63379</a>)</li>
<li>Added a fallback to use <code>mul</code> and <code>copy_</code> instead of <code>mul</code>‚Äôs <code>out=</code> variant when gradient tensor requires grad in DDP (<a href="https://github.com/pytorch/pytorch/pull/63831" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63831/hovercard">#63831</a>)</li>
<li>Used <code>Tensor.set_</code> instead of directory assigning data in model averaging (<a href="https://github.com/pytorch/pytorch/pull/63895" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63895/hovercard">#63895</a>)</li>
<li>Added more iterations for DDP logging (<a href="https://github.com/pytorch/pytorch/pull/64071" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64071/hovercard">#64071</a>,  <a href="https://github.com/pytorch/pytorch/pull/64411" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64411/hovercard">#64411</a>)</li>
</ul>
<p><code>torch.distributed</code></p>
<ul>
<li>Introduced ProcessGroup wrapper and use it in debug mode(<a href="https://github.com/pytorch/pytorch/pull/58224" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58224/hovercard">#58224</a>, <a href="https://github.com/pytorch/pytorch/pull/58281" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58281/hovercard">#58281</a>, <a href="https://github.com/pytorch/pytorch/pull/60237" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60237/hovercard">#60237</a>)</li>
<li>Made a small change for <code>torch.distributed</code> launcher (<a href="https://github.com/pytorch/pytorch/pull/59152" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59152/hovercard">#59152</a>)</li>
<li>Added complex number support for all_to_all/scatter (<a href="https://github.com/pytorch/pytorch/pull/61299" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61299/hovercard">#61299</a>)</li>
<li>Made gloo communication profiling more accurate (<a href="https://github.com/pytorch/pytorch/pull/61342" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61342/hovercard">#61342</a>)</li>
<li>Used generator instead of list to save memory in scatter (<a href="https://github.com/pytorch/pytorch/pull/62516" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62516/hovercard">#62516</a>)</li>
<li>Provided failure reason from ProcessGroup when aborting NCCL communicator (<a href="https://github.com/pytorch/pytorch/pull/64241" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64241/hovercard">#64241</a>)</li>
<li>Introduced error raised when capturing uncapturable NCCL in CUDA graphs. (<a href="https://github.com/pytorch/pytorch/pull/64440" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64440/hovercard">#64440</a>)</li>
<li>Added Single-Machine Model Parallel Support to <code>torch.distributed.optim.ZeroRedundancyOptimizer</code> (<a href="https://github.com/pytorch/pytorch/pull/61370" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61370/hovercard">#61370</a>)</li>
</ul>
<p><code>torch.distributed.nn.RemoteModule</code></p>
<ul>
<li>Supported creating a RemoteModule by RRef (<a href="https://github.com/pytorch/pytorch/pull/59242" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59242/hovercard">#59242</a>)</li>
<li>Supported switching RemoteModule between train/eval (<a href="https://github.com/pytorch/pytorch/pull/59026" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59026/hovercard">#59026</a>)</li>
</ul>
<p><code>torch.distributed.elastic</code></p>
<ul>
<li>Added minor logging and error formatting improvements (<a href="https://github.com/pytorch/pytorch/pull/63214" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63214/hovercard">#63214</a>,  <a href="https://github.com/pytorch/pytorch/pull/62823" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62823/hovercard">#62823</a>)</li>
<li>Improved process termination logic (<a href="https://github.com/pytorch/pytorch/pull/61602" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61602/hovercard">#61602</a>)</li>
<li>Added fqdn hostname to error printout (<a href="https://github.com/pytorch/pytorch/pull/66662/" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/66662/hovercard">#66662</a>)</li>
</ul>
<p><code>torch.distributed.rpc</code></p>
<ul>
<li>Fix RPC initialization to avoid shutdown timeout (<a href="https://github.com/pytorch/pytorch/pull/59801" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59801/hovercard">#59801</a>)</li>
<li>Supported RRefs that contain <code>threading.Locks</code> (<a href="https://github.com/pytorch/pytorch/pull/57943" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57943/hovercard">#57943</a>), <code>torch.cuda.Event</code> (<a href="https://github.com/pytorch/pytorch/pull/61354" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61354/hovercard">#61354</a>)</li>
<li>Updated rpc tensorpipe logic for sparse tensors (<a href="https://github.com/pytorch/pytorch/pull/64575" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64575/hovercard">#64575</a>)</li>
<li>Added rpc sparse tensor fix (<a href="https://github.com/pytorch/pytorch/pull/59609" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59609/hovercard">#59609</a>, <a href="https://github.com/pytorch/pytorch/pull/62794" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62794/hovercard">#62794</a>)</li>
<li>Added change to ensure that future completion doesn't swallow exception. (<a href="https://github.com/pytorch/pytorch/pull/61094" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61094/hovercard">#61094</a>)</li>
<li>Set streams when invoking UDFs (<a href="https://github.com/pytorch/pytorch/pull/59210" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59210/hovercard">#59210</a>)</li>
<li>Set and propagate devices in RRef completion Future (<a href="https://github.com/pytorch/pytorch/pull/59211" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59211/hovercard">#59211</a>)</li>
<li>Made TensorPipe agent use streams from Future when sending response (<a href="https://github.com/pytorch/pytorch/pull/59212" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59212/hovercard">#59212</a>)</li>
<li>Added change to leverage TensorPipe's automatic SHM address selection (<a href="https://github.com/pytorch/pytorch/pull/63028" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63028/hovercard">#63028</a>)</li>
<li>Made Future store Storages instead of references to DataPtrs (<a href="https://github.com/pytorch/pytorch/pull/60470" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60470/hovercard">#60470</a>, <a href="https://github.com/pytorch/pytorch/pull/60943" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60943/hovercard">#60943</a>)</li>
<li>Added change to avoid re-doing CUDA stream sync in OwnerRRef (<a href="https://github.com/pytorch/pytorch/pull/57355" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57355/hovercard">#57355</a>)</li>
</ul>
<p><code>torch.distributed.Store</code></p>
<ul>
<li>Enhanced connect timeout error message (<a href="https://github.com/pytorch/pytorch/pull/61390" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61390/hovercard">#61390</a>)</li>
<li>Added minor fixes in c10d for Windows (<a href="https://github.com/pytorch/pytorch/pull/62953" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62953/hovercard">#62953</a>)</li>
</ul>
<p><code>torch.distributed.pipeline</code></p>
<ul>
<li>Supported non-tensor inputs in pipeline parallel API (<a href="https://github.com/pytorch/pytorch/pull/55441" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/55441/hovercard">#55441</a>, <a href="https://github.com/pytorch/pytorch/pull/57226" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57226/hovercard">#57226</a>, <a href="https://github.com/pytorch/pytorch/pull/57325" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57325/hovercard">#57325</a>)</li>
<li>Added a <code>WithDevice</code> wrapper to specify device execution for a module. (<a href="https://github.com/pytorch/pytorch/pull/65190" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65190/hovercard">#65190</a>)</li>
</ul>
<h2>torch.fx</h2>
<ul>
<li>Added users of a node to the serialized JSON (<a href="https://github.com/pytorch/pytorch/pull/59357" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59357/hovercard">#59357</a>)</li>
<li>Added requires_grad to TensorMetadata (<a href="https://github.com/pytorch/pytorch/pull/60972" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60972/hovercard">#60972</a>)</li>
<li>Added change to swap out Python's AnnAssign with an Assign node where the annotation function is called (<a href="https://github.com/pytorch/pytorch/pull/60622" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60622/hovercard">#60622</a>)</li>
<li>Added type annotations for the <code>torch.nn.Module</code> constructor (<a href="https://github.com/pytorch/pytorch/pull/61334" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61334/hovercard">#61334</a>)</li>
<li>Enabled <code>torch.deploy</code> for GraphModules with non-torch dependencies (<a href="https://github.com/pytorch/pytorch/pull/61680" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61680/hovercard">#61680</a>)</li>
<li>Added change to allow FX tracer to trace control flow (if/while) statements when parameter shapes are in the conditionals (<a href="https://github.com/pytorch/pytorch/pull/61820" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61820/hovercard">#61820</a>)</li>
<li>Added <code>torch.memory_format</code> as a BaseArgumentType (<a href="https://github.com/pytorch/pytorch/pull/62593" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62593/hovercard">#62593</a>)</li>
<li>Added backwards compatibility guarantees for 1.10 (<a href="https://github.com/pytorch/pytorch/pull/63888" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63888/hovercard">#63888</a>)
<ul>
<li>Renamed reduce functions back to their old, public names (<a href="https://github.com/pytorch/pytorch/pull/64324" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64324/hovercard">#64324</a>)</li>
<li>Added change to ensure BC coverage for all of <code>torch.fx</code> passes (<a href="https://github.com/pytorch/pytorch/pull/65081" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65081/hovercard">#65081</a>)</li>
</ul>
</li>
<li>Add <code>__matmul__</code> to the magic methods for FX tracing (<a href="https://github.com/pytorch/pytorch/pull/64512" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64512/hovercard">#64512</a>)</li>
</ul>
<h2>Composability</h2>
<ul>
<li>Added meta tensor support for <code>torch.{any, all, fmax, fmin, remainder, glu, argmax, argmin, avg_pool3d_backward, isposinf, isneginf, fmod, fmin, signbit, slow_conv_transpose2d, nll_loss_backward, cumprod, aminmax, addcmul, addcdiv, gather, hardshrink_backward, softshrink_backward, hardshrink, gelu, gelu_backward, avg_pool2d, avg_pool2d_backward, avg_pool3d, reflection_pad1d_backward, all, any, silu_backward, sgn, softplus, leaky_relu_backward, hardsigmoid_backward, elu_backward, eq, xlogy, ne, lt, gt, le, ge, sigmoid_backward, tanh_backward, logit_backward, bitwise_or, bitwise_xor, bitwise_and, nll_loss_forward, log_softmax, log_softmax_backward_data, prod, norm, sum.dim_IntList, clamp}</code> (<a href="https://github.com/pytorch/pytorch/pull/64642" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64642/hovercard">#64642</a>, <a href="https://github.com/pytorch/pytorch/pull/58458" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58458/hovercard">#58458,</a><a href="https://github.com/pytorch/pytorch/pull/58732" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58732/hovercard">#58732</a>, <a href="https://github.com/pytorch/pytorch/pull/61800" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61800/hovercard">#61800</a>, <a href="https://github.com/pytorch/pytorch/pull/60363" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60363/hovercard">#60363</a>, <a href="https://github.com/pytorch/pytorch/pull/60364" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60364/hovercard">#60364</a>, <a href="https://github.com/pytorch/pytorch/pull/59084" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59084/hovercard">#59084</a>, <a href="https://github.com/pytorch/pytorch/pull/60633" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60633/hovercard">#60633</a>, <a href="https://github.com/pytorch/pytorch/pull/60809" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60809/hovercard">#60809</a>, <a href="https://github.com/pytorch/pytorch/pull/60810" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60810/hovercard">#60810</a>, <a href="https://github.com/pytorch/pytorch/pull/57936" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57936/hovercard">#57936</a>, <a href="https://github.com/pytorch/pytorch/pull/55503" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/55503/hovercard">#55503</a>, <a href="https://github.com/pytorch/pytorch/pull/62144" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62144/hovercard">#62144</a>, <a href="https://github.com/pytorch/pytorch/pull/61899" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61899/hovercard">#61899</a>, <a href="https://github.com/pytorch/pytorch/pull/62401" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62401/hovercard">#62401</a>, <a href="https://github.com/pytorch/pytorch/pull/62318" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62318/hovercard">#62318</a>, <a href="https://github.com/pytorch/pytorch/pull/62319" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62319/hovercard">#62319</a>, <a href="https://github.com/pytorch/pytorch/pull/63312" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63312/hovercard">#63312</a>, <a href="https://github.com/pytorch/pytorch/pull/58662" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58662/hovercard">#58662</a>, <a href="https://github.com/pytorch/pytorch/pull/58663" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58663/hovercard">#58663</a>, <a href="https://github.com/pytorch/pytorch/pull/58664" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58664/hovercard">#58664</a>, <a href="https://github.com/pytorch/pytorch/pull/58665" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58665/hovercard">#58665</a>, <a href="https://github.com/pytorch/pytorch/pull/58987" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58987/hovercard">#58987</a>, <a href="https://github.com/pytorch/pytorch/pull/59082" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59082/hovercard">#59082</a>, <a href="https://github.com/pytorch/pytorch/pull/59083" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59083/hovercard">#59083</a>, <a href="https://github.com/pytorch/pytorch/pull/59103" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59103/hovercard">#59103</a>, <a href="https://github.com/pytorch/pytorch/pull/60360" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60360/hovercard">#60360</a>, <a href="https://github.com/pytorch/pytorch/pull/60361" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60361/hovercard">#60361</a>, <a href="https://github.com/pytorch/pytorch/pull/58661" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58661/hovercard">#58661</a>, <a href="https://github.com/pytorch/pytorch/pull/58197" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58197/hovercard">#58197</a>, <a href="https://github.com/pytorch/pytorch/pull/58482" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58482/hovercard">#58482</a>, <a href="https://github.com/pytorch/pytorch/pull/58483" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58483/hovercard">#58483</a>, <a href="https://github.com/pytorch/pytorch/pull/58484" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58484/hovercard">#58484</a>, <a href="https://github.com/pytorch/pytorch/pull/58660" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58660/hovercard">#58660</a>, <a href="https://github.com/pytorch/pytorch/pull/60177" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60177/hovercard">#60177</a>, <a href="https://github.com/pytorch/pytorch/pull/60814" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60814/hovercard">#60814</a>, <a href="https://github.com/pytorch/pytorch/pull/60942" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60942/hovercard">#60942</a>, <a href="https://github.com/pytorch/pytorch/pull/60815" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60815/hovercard">#60815</a>, <a href="https://github.com/pytorch/pytorch/pull/60816" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60816/hovercard">#60816</a>, <a href="https://github.com/pytorch/pytorch/pull/60817" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60817/hovercard">#60817</a>, <a href="https://github.com/pytorch/pytorch/pull/60811" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60811/hovercard">#60811</a>, <a href="https://github.com/pytorch/pytorch/pull/60812" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60812/hovercard">#60812</a>, <a href="https://github.com/pytorch/pytorch/pull/60813" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60813/hovercard">#60813</a>, <a href="https://github.com/pytorch/pytorch/pull/61443" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61443/hovercard">#61443</a>, <a href="https://github.com/pytorch/pytorch/pull/57374" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57374/hovercard">#57374</a>, <a href="https://github.com/pytorch/pytorch/pull/62372" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62372/hovercard">#62372</a>, <a href="https://github.com/pytorch/pytorch/pull/62024" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62024/hovercard">#62024</a>, <a href="https://github.com/pytorch/pytorch/pull/62711" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62711/hovercard">#62711</a>, <a href="https://github.com/pytorch/pytorch/pull/61642" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61642/hovercard">#61642</a>, <a href="https://github.com/pytorch/pytorch/pull/61361" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61361/hovercard">#61361</a>)</li>
<li>PyObject preservation: Previously, tensors in python that no longer had any python-side references (but still had references in C++, e.g. if it‚Äôs saved for autograd) would get deallocated, and we would create a new Python object to replace it next time it passes from C++ to Python. We now preserve the PyObject as long as there are any references on either the python or C++ side. This ensures that any metadata on the original python object is preserved. For example, tensor subclasses that were saved for autograd now get properly preserved. (<a href="https://github.com/pytorch/pytorch/pull/56017" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/56017/hovercard">#56017</a>)</li>
</ul>
<h2>Build_Frontend</h2>
<ul>
<li>Added a new include directory in BLIS search path (<a href="https://github.com/pytorch/pytorch/pull/58166" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58166/hovercard">#58166</a>)</li>
<li>Added print to show full Python version in <code>torch.utils.collect_env</code> (<a href="https://github.com/pytorch/pytorch/pull/59632" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59632/hovercard">#59632</a>)</li>
<li>Added change to respect <code>CMAKE_PREFIX_PATH</code> choice set by caller (<a href="https://github.com/pytorch/pytorch/pull/61904" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61904/hovercard">#61904</a>)</li>
<li>Dropped incremental linking on Windows when REL_WITH_DEB_INFO=1. (<a href="https://github.com/pytorch/pytorch/pull/64892" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64892/hovercard">#64892</a>)</li>
<li>Enabled kineto build for ROCm platform (<a href="https://github.com/pytorch/pytorch/pull/58401" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58401/hovercard">#58401</a>)</li>
<li>Added support to system-provided Intel TBB (<a href="https://github.com/pytorch/pytorch/pull/61934" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61934/hovercard">#61934</a>)</li>
<li>Added Pytorch build support with <a href="https://en.wikipedia.org/wiki/Newlib" rel="nofollow">Newlib</a> c library (<a href="https://github.com/pytorch/pytorch/pull/60345" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60345/hovercard">#60345</a>, <a href="https://github.com/pytorch/pytorch/pull/60052" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60052/hovercard">#60052</a>)</li>
<li>Imrpove <code>torch.__version__</code> comparisons (<a href="https://github.com/pytorch/pytorch/pull/61556" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61556/hovercard">#61556</a>, <a href="https://github.com/pytorch/pytorch/pull/64565" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64565/hovercard">#64565</a>, <a href="https://github.com/pytorch/pytorch/pull/63848" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63848/hovercard">#63848</a>)</li>
<li>CMake: added optional precompiled header support (<a href="https://github.com/pytorch/pytorch/pull/61940" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61940/hovercard">#61940</a>)</li>
<li>Removed unnecessary Ubuntu version checks (<a href="https://github.com/pytorch/pytorch/pull/61738" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61738/hovercard">#61738</a>)</li>
<li>Added GPU support to <code>bazel</code> builds (<a href="https://github.com/pytorch/pytorch/pull/63604" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63604/hovercard">#63604</a>)</li>
</ul>
<h2>Infra (Releng)</h2>
<ul>
<li>Improved automated test sharding. (<a href="https://github.com/pytorch/pytorch/pull/59727" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59727/hovercard">#59727</a>, <a href="https://github.com/pytorch/pytorch/pull/60206" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60206/hovercard">#60206</a>)</li>
<li>Added change to strictly type everything in .github and tools (<a href="https://github.com/pytorch/pytorch/pull/59117" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59117/hovercard">#59117</a>)</li>
<li>Upgraded Windows CI Python to 3.8 (<a href="https://github.com/pytorch/pytorch/pull/59729" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59729/hovercard">#59729</a>) and CUDA to 10.2 (<a href="https://github.com/pytorch/pytorch/pull/65080" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65080/hovercard">#65080</a>)</li>
<li>Made change to use expecttest from PyPI (<a href="https://github.com/pytorch/pytorch/pull/60658" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60658/hovercard">#60658</a>, <a href="https://github.com/pytorch/pytorch/pull/63320" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63320/hovercard">#63320</a>)</li>
<li>Added option to run specified tests option to run_test.py (<a href="https://github.com/pytorch/pytorch/pull/59649" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59649/hovercard">#59649</a>)</li>
<li>Enabled Metal in PyTorch MacOS/iOS nightly builds (<a href="https://github.com/pytorch/pytorch/pull/63718" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63718/hovercard">#63718</a>, <a href="https://github.com/pytorch/pytorch/pull/65075" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65075/hovercard">#65075</a>)</li>
<li>Added retries to flaky CI steps. (<a href="https://github.com/pytorch/pytorch/pull/65013" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65013/hovercard">#65013</a>, <a href="https://github.com/pytorch/pytorch/pull/65104" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65104/hovercard">#65104</a>, <a href="https://github.com/pytorch/pytorch/pull/64120" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64120/hovercard">#64120</a>, <a href="https://github.com/pytorch/pytorch/pull/60216" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60216/hovercard">#60216</a>, <a href="https://github.com/pytorch/pytorch/pull/63319" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63319/hovercard">#63319</a>)</li>
<li>Allowed Docker build on macOS (<a href="https://github.com/pytorch/pytorch/pull/60375" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60375/hovercard">#60375</a>)</li>
</ul>
<h2>Misc</h2>
<ul>
<li>Added support for MIOpen channel last convolution (<a href="https://github.com/pytorch/pytorch/pull/63617" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63617/hovercard">#63617</a>)</li>
<li>Enabled kernel asserts on rocm (<a href="https://github.com/pytorch/pytorch/pull/49624" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/49624/hovercard">#49624</a>)</li>
<li>Added bool, float16, bfloat16 and complex support for to_dense for CSR sparse Tensors (<a href="https://github.com/pytorch/pytorch/pull/60657" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60657/hovercard">#60657</a>)</li>
<li>Added complex dtype support for matrix multiplication of two COO sparse Tensors on CPU (<a href="https://github.com/pytorch/pytorch/pull/59554" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59554/hovercard">#59554</a>)</li>
<li>Added the ‚Äúupper‚Äù kwarg to <code>torch.linalg.cholesky</code> (<a href="https://github.com/pytorch/pytorch/pull/62434" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62434/hovercard">#62434</a>)</li>
<li>Improved error message in ONNX when attempting to export dict modification (<a href="https://github.com/pytorch/pytorch/pull/58696" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58696/hovercard">#58696</a>)</li>
<li>Migrated <code>THAllocator</code> to <code>MapAllocator</code> in ATen (<a href="https://github.com/pytorch/pytorch/pull/60325" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60325/hovercard">#60325</a>)</li>
<li>Converted input type of <code>TensorOptions.device_index</code> from <code>int16_t</code> to to <code>c10::DeviceIndex</code> (<a href="https://github.com/pytorch/pytorch/pull/60412" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60412/hovercard">#60412</a>)</li>
</ul>
<h1>Bug fixes</h1>
<h2>Python API</h2>
<ul>
<li>Added fix to recognize transposed dense tensors as a form of partial overlap (<a href="https://github.com/pytorch/pytorch/pull/59014" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59014/hovercard">#59014</a>)</li>
<li>Fixed <code>torch.polygamma</code> incorrect behavior at infinites when n&gt;=1 (<a href="https://github.com/pytorch/pytorch/pull/61641" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61641/hovercard">#61641</a>)</li>
<li>Fixed for non-contiguous inputs for <code>torch.{sort,topk}</code> on CUDA (<a href="https://github.com/pytorch/pytorch/pull/63029" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63029/hovercard">#63029</a>), <code>torch.tensor_split</code> indices(<a href="https://github.com/pytorch/pytorch/pull/63390" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63390/hovercard">#63390</a>)</li>
<li>Fixed legacy constructor <code>torch.Tensor</code>  when given a scalar Tensor (<a href="https://github.com/pytorch/pytorch/pull/58885" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58885/hovercard">#58885</a>)</li>
<li>Added change to not wrap <code>Tensor.{grad,_base}</code> by default for Tensor-like objects(<a href="https://github.com/pytorch/pytorch/pull/60464" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60464/hovercard">#60464</a>)</li>
<li>Fixed <code>torch.angle</code> on aarch64 (<a href="https://github.com/pytorch/pytorch/pull/59832" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59832/hovercard">#59832</a>)</li>
<li>Fixed specialized convolution kernel on arm64 (<a href="https://github.com/pytorch/pytorch/pull/60460" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60460/hovercard">#60460</a>)</li>
<li><code>torch.normal</code>: fixed RuntimeError when standard deviation named arg is torch.empty <a href="https://github.com/pytorch/pytorch/pull/66524/" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/66524/hovercard">(#66524</a>)</li>
<li>Fixed random sampling on SGX platforms (<a href="https://github.com/pytorch/pytorch/pull/60368" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60368/hovercard">#60368</a>)</li>
<li>Fixed testing when Scipy is not available (<a href="https://github.com/pytorch/pytorch/pull/61699" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61699/hovercard">#61699</a>)</li>
<li>Fixed <code>torch.Tensor.copy_</code> when using large inputs and broadcasting (<a href="https://github.com/pytorch/pytorch/pull/64425" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64425/hovercard">#64425</a>)</li>
<li>Fixed broadcasting behavior for <code>torch.trapezoid</code> (<a href="https://github.com/pytorch/pytorch/pull/64054" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64054/hovercard">#64054</a>).</li>
<li>Fixed dtype check of comparison ops (<a href="https://github.com/pytorch/pytorch/pull/64267" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64267/hovercard">#64267</a>).</li>
<li>Fixed <code>torch.median</code> crash on empty tensor (<a href="https://github.com/pytorch/pytorch/pull/61698" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61698/hovercard">#61698</a>)</li>
<li>Fixed missing lazy initialization in <code>torch.get_num_threads</code> (<a href="https://github.com/pytorch/pytorch/pull/64486" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64486/hovercard">#64486</a>)</li>
<li>Fixed check for empty named dims list to <code>torch.flatten</code> (<a href="https://github.com/pytorch/pytorch/pull/61953" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61953/hovercard">#61953</a>)</li>
<li>Fixed <code>torch.hub.{list,help}</code> functions for Windows (<a href="https://github.com/pytorch/pytorch/pull/63773" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63773/hovercard">#63773</a>)</li>
<li>Fixed <code>torch.{istft,rfft}</code> errors for special inputs (<a href="https://github.com/pytorch/pytorch/pull/63469" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63469/hovercard">#63469</a>, <a href="https://github.com/pytorch/pytorch/pull/63327" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63327/hovercard">#63327</a>)</li>
<li>Fixed type annotation
<ul>
<li><code>optim.lr_scheduler.CosineAnnealingWarmRestart</code> (<a href="https://github.com/pytorch/pytorch/pull/61106" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61106/hovercard">#61106</a>)</li>
<li>Fixed type annotation of <code>torch.hub.load</code> (<a href="https://github.com/pytorch/pytorch/pull/63755" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63755/hovercard">#63755</a>)</li>
</ul>
</li>
<li><code>x[index] = value</code> no longer results in a RuntimeError if <code>x</code> and <code>value</code> are different devices.<br>
(<a href="https://github.com/pytorch/pytorch/pull/61612" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61612/hovercard">#61612</a>)</li>
<li>Fixed crash while creating new tensor if NumPy is not available (<a href="https://github.com/pytorch/pytorch/pull/66433" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/66433/hovercard">#66433</a>)</li>
<li>Handle exceptions from THPModule_setQEngine (<a href="https://github.com/pytorch/pytorch/pull/60073" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60073/hovercard">#60073</a>)</li>
<li>Fixed <code>torch.Tensor.cauchy_</code> on CUDA for inf values (<a href="https://github.com/pytorch/pytorch/pull/60186" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60186/hovercard">#60186</a>)</li>
</ul>
<h2>Autograd</h2>
<ul>
<li><code>torch.{signbit,isin}</code> no longer raise an error when passed a tensor that requires grad (<a href="https://github.com/pytorch/pytorch/pull/62529" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62529/hovercard">#62529</a>)</li>
<li>Fixed sub-gradient for <code>torch.a{max,min}</code> (<a href="https://github.com/pytorch/pytorch/pull/59669" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59669/hovercard">#59669</a>)</li>
<li>Fixed segfaults when a tensor hook removes itself (<a href="https://github.com/pytorch/pytorch/pull/61250" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61250/hovercard">#61250</a>)</li>
<li>Fixed double backward for <code>binary_cross_entropy</code> loss function when <code>reduction=sum</code>. (<a href="https://github.com/pytorch/pytorch/pull/59479" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59479/hovercard">#59479</a>)</li>
<li>Made sure that TLS (grad mode, inference mode, dispatcher state, etc) are properly set in hooks being called during the backward pass (<a href="https://github.com/pytorch/pytorch/pull/60067" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60067/hovercard">#60067</a>)</li>
</ul>
<h2>torch.nn</h2>
<ul>
<li><code>nn.AdaptiveAvgPool2d</code>: Correctly dispatch to CUDA implementation (<a href="https://github.com/pytorch/pytorch/pull/61851" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61851/hovercard">#61851</a>)</li>
<li><code>nn.AdaptiveAvgPool3d</code>: Fixed gradient computation (<a href="https://github.com/pytorch/pytorch/pull/60630" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60630/hovercard">#60630</a>)</li>
<li><code>nn.BatchNorm</code>: Fixed mixed precision usage when <code>affine=False</code> (<a href="https://github.com/pytorch/pytorch/pull/61962" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61962/hovercard">#61962</a>)</li>
<li><code>nn.BatchNorm2d</code>: Fixed issue when input is non-contiguous (<a href="https://github.com/pytorch/pytorch/pull/63392" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63392/hovercard">#63392</a>)</li>
<li>Fixed <code>batch_norm()</code> to preserve output memory layout based on input (<a href="https://github.com/pytorch/pytorch/pull/62773" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62773/hovercard">#62773</a>)</li>
<li><code>nn.MaxPool2d</code>: Use <code>channels_last</code> memory format for output and indices when input is channels_last (<a href="https://github.com/pytorch/pytorch/pull/61245" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61245/hovercard">#61245</a>)</li>
<li><code>nn.Module</code>: Fixed full backward hook when grad is disabled (<a href="https://github.com/pytorch/pytorch/pull/65335" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65335/hovercard">#65335</a>)</li>
<li><code>nn.Module</code>: Fixed <code>get_buffer()</code> to check buffers by name instead of value (<a href="https://github.com/pytorch/pytorch/pull/61429" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61429/hovercard">#61429</a>)</li>
<li><code>nn.Module</code>: Fixed pre-forward hooks for Lazy modules (<a href="https://github.com/pytorch/pytorch/pull/60517" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60517/hovercard">#60517</a>)</li>
<li><code>nn.Softmax</code>: Improve numerical stability by subtracting max value in vectorized CPU implementation (<a href="https://github.com/pytorch/pytorch/pull/63132" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63132/hovercard">#63132</a>)</li>
<li><code>F.cosine_similarity</code>: Fixed type promotion behavior and added input validation checks (<a href="https://github.com/pytorch/pytorch/pull/62054" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62054/hovercard">#62054</a>, <a href="https://github.com/pytorch/pytorch/pull/66191" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/66191/hovercard">#66191</a>, <a href="https://github.com/pytorch/pytorch/pull/62912" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62912/hovercard">#62912</a>, <a href="https://github.com/pytorch/pytorch/pull/58559" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58559/hovercard">#58559</a>)</li>
<li><code>F.embedding</code>: Added check to validate that weights are 2D (<a href="https://github.com/pytorch/pytorch/pull/59314" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59314/hovercard">#59314</a>)</li>
<li><code>F.interpolate</code>: Fixed output for edge case of single pixel without align_corners (<a href="https://github.com/pytorch/pytorch/pull/61166" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61166/hovercard">#61166</a>)</li>
<li><code>F.nll_loss</code>: Fixed regression for gradient computation (<a href="https://github.com/pytorch/pytorch/pull/64203" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64203/hovercard">#64203</a>)</li>
<li><code>F.pad</code>: Fixed type of default pad value to be floating point (<a href="https://github.com/pytorch/pytorch/pull/62095" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62095/hovercard">#62095</a>)</li>
<li>Fixed issues with printing <code>torch._ops.ops.{atan, quantized}</code> modules (<a href="https://github.com/pytorch/pytorch/pull/62447" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62447/hovercard">#62447</a>)</li>
<li>Fixed <code>torch.nn.utils.parametrizations.spectral_norm</code> so that it can be used twice in the same forward pass (<a href="https://github.com/pytorch/pytorch/pull/62293" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62293/hovercard">#62293</a>)</li>
<li>Disabled cuDNN persistent RNN on A30 to avoid exceptions from hard-to-detect edge cases (<a href="https://github.com/pytorch/pytorch/pull/59830" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59830/hovercard">#59830</a>)</li>
</ul>
<h2>Dataloader</h2>
<ul>
<li>Fixed <code>IterableFecher</code> to stop fetching data after <code>StopIterator</code> (<a href="https://github.com/pytorch/pytorch/pull/59313" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59313/hovercard">#59313</a>)</li>
<li>Fixed <code>ExceptionWrapper</code> to re-raise Exception with multiple args (<a href="https://github.com/pytorch/pytorch/pull/58131" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58131/hovercard">#58131</a>)</li>
</ul>
<h2>AMD</h2>
<ul>
<li>Fix ROCm compilation by properly marking c++ functions as CPU only (<a href="https://github.com/pytorch/pytorch/pull/62628" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62628/hovercard">#62628</a>)</li>
<li>Fixed <code>torch.{i1,i1e}</code> ROCm failure: mark array as const so that it is available for host and device (<a href="https://github.com/pytorch/pytorch/pull/59187" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59187/hovercard">#59187</a>)</li>
</ul>
<h2>CUDA</h2>
<ul>
<li>Fixed to not use deprecated data accessor in IndexKernel.cu (<a href="https://github.com/pytorch/pytorch/pull/62268" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62268/hovercard">#62268</a>)</li>
<li>Fixed sign comparison (<a href="https://github.com/pytorch/pytorch/pull/62194" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62194/hovercard">#62194</a>, <a href="https://github.com/pytorch/pytorch/pull/62483" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62483/hovercard">#62483</a>)</li>
<li>Fixed <code>torch.manual_seed{_all}</code> memory leak (<a href="https://github.com/pytorch/pytorch/pull/62534" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62534/hovercard">#62534</a>)</li>
<li>Fixed CUDA_KERNEL_ASSERT ambiguous symbol in NDEBUG mode (<a href="https://github.com/pytorch/pytorch/pull/62527" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62527/hovercard">#62527</a>)</li>
<li>Changed to use long index type for <code>torch.index_add</code> deterministic implementation (<a href="https://github.com/pytorch/pytorch/pull/59254" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59254/hovercard">#59254</a>)</li>
<li>Fixed illegal memory access on NHWC BN kernel (<a href="https://github.com/pytorch/pytorch/pull/59981" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59981/hovercard">#59981</a>)</li>
<li>Fixed typo in Normalization.cu (<a href="https://github.com/pytorch/pytorch/pull/62515" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62515/hovercard">#62515</a>)</li>
<li>Added change to ignore and clear errors related to cuda not being ready yet (<a href="https://github.com/pytorch/pytorch/pull/61554" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61554/hovercard">#61554</a>)</li>
<li>Fixed segmentation fault due to access to destroyed global IPC variable(<a href="https://github.com/pytorch/pytorch/pull/56141" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/56141/hovercard">#56141</a>)</li>
<li>Fixed reduction launch config (<a href="https://github.com/pytorch/pytorch/pull/64304" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64304/hovercard">#64304</a>)</li>
<li>Fixed typo embedding_renorm_ cuda implementation (<a href="https://github.com/pytorch/pytorch/pull/64542" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64542/hovercard">#64542</a>)</li>
<li>Added missing kernel checks (<a href="https://github.com/pytorch/pytorch/pull/60635" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60635/hovercard">#60635</a>)</li>
<li>CUDA graphs: made sure graph mempool malloc counter pairs with frees for all allocations (<a href="https://github.com/pytorch/pytorch/pull/61567" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61567/hovercard">#61567</a>)</li>
<li>Fix bug where some kernels would not properly call cuda lazy initialization (<a href="https://github.com/pytorch/pytorch/pull/61882" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61882/hovercard">#61882</a>)</li>
<li>Added check for contiguous to dispatch to NHWC CUDA template (<a href="https://github.com/pytorch/pytorch/pull/62839" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62839/hovercard">#62839</a>)</li>
<li>Moved grid_sampler to autocast promote list (<a href="https://github.com/pytorch/pytorch/pull/58618" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58618/hovercard">#58618</a>)</li>
<li>Added check for memory overlap in sort for large input sizes (<a href="https://github.com/pytorch/pytorch/pull/58327" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58327/hovercard">#58327</a>)</li>
</ul>
<h2>C++ API</h2>
<ul>
<li>Fixed <code>map</code> function for <code>vec256</code> to accept const pointer to function (<a href="https://github.com/pytorch/pytorch/pull/59957" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59957/hovercard">#59957</a>)</li>
<li>Added <code>supports_as_strided</code> method to <code>Device</code> and fixed indices of <code>to_sparse()</code> contiguous on all devices (<a href="https://github.com/pytorch/pytorch/pull/59370" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59370/hovercard">#59370</a>)</li>
<li>Removed redundant bitwise-and op in MT19937RNGEngine (<a href="https://github.com/pytorch/pytorch/pull/63219" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63219/hovercard">#63219</a>)</li>
<li>Fixed subprocess encoding for cpp extension on Windows (<a href="https://github.com/pytorch/pytorch/pull/63756" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63756/hovercard">#63756</a>)</li>
<li>Define the SYCL device version <code>__assert_fail</code> when the NDEBUG defined. (<a href="https://github.com/pytorch/pytorch/pull/58906" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58906/hovercard">#58906</a>)</li>
</ul>
<h2>TorchScript</h2>
<ul>
<li>Fixed inconsistency between Python and JIT power operation (<a href="https://github.com/pytorch/pytorch/pull/62842" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62842/hovercard">#62842</a>)</li>
<li>Added change to convert <code>__constants__</code> attribute in model to a set to be consistent (<a href="https://github.com/pytorch/pytorch/pull/60003" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60003/hovercard">#60003</a>)</li>
<li>Added change to Ignore unsupported attribute checker pass for <code>torch.jit.trace</code> (<a href="https://github.com/pytorch/pytorch/pull/60200" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60200/hovercard">#60200</a>)</li>
<li>Fixed missing element types and shapes when <code>torch.autograd.Function</code> has multiple tensor outputs (<a href="https://github.com/pytorch/pytorch/pull/57966" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57966/hovercard">#57966</a>)</li>
<li>Fixed <code>Tensor.to</code> schema to reflect that the output may alias input (<a href="https://github.com/pytorch/pytorch/pull/60001" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60001/hovercard">#60001</a>)</li>
<li>Added change to turn off layer norm in jit symbolic differentiation (<a href="https://github.com/pytorch/pytorch/pull/63816" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63816/hovercard">#63816</a>)</li>
<li>Fixed name conflict by using a more specific prefix for lowered module name. (<a href="https://github.com/pytorch/pytorch/pull/61007" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61007/hovercard">#61007</a>)</li>
<li>Added change to allow disabling cache in autocast (automatic mixed precision) (<a href="https://github.com/pytorch/pytorch/pull/63552" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63552/hovercard">#63552</a>)</li>
<li>Fixed concat optimization to handle cases when input list is mutated after cat using AliasDb (<a href="https://github.com/pytorch/pytorch/pull/60774" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60774/hovercard">#60774</a>)</li>
<li>Fixed symbolic derivative of hardswish (<a href="https://github.com/pytorch/pytorch/pull/59405" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59405/hovercard">#59405</a>)</li>
</ul>
<h2>torch.package</h2>
<ul>
<li>Fixed a bug when using <code>importlib.resources.path</code> for python &lt;3.8.8 (<a href="https://github.com/pytorch/pytorch/pull/58718" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58718/hovercard">#58718</a>)</li>
<li>Fixed bugs when using <code>os</code> and <code>os.path</code> (<a href="https://github.com/pytorch/pytorch/pull/60276" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60276/hovercard">#60276</a>)</li>
<li>Fixed storage serialization collision when saving a <code>ScriptModule</code> and then saving a <code>Tensor</code> owned by it. (<a href="https://github.com/pytorch/pytorch/pull/61806" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61806/hovercard">#61806</a>)</li>
<li>Fixed use-after-free during autograd shutdown (<a href="https://github.com/pytorch/pytorch/pull/64620" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64620/hovercard">#64620</a>)</li>
<li>Fixed non-determinism in naming scheme of serialized storages in export code paths and ABA ABA storage identity problem during serialization for <code>torch.package</code> (<a href="https://github.com/pytorch/pytorch/pull/59735" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59735/hovercard">#59735</a>)</li>
<li>Fixed GIL issue when acquiring multiple sessions. (<a href="https://github.com/pytorch/pytorch/pull/58584" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58584/hovercard">#58584</a>)</li>
</ul>
<h2>Mobile</h2>
<ul>
<li>Fixed Nnapi backend dangling pointer bug (<a href="https://github.com/pytorch/pytorch/pull/63092" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63092/hovercard">#63092</a>)</li>
<li>Fixed missing constants archive in torchscript model after backport (<a href="https://github.com/pytorch/pytorch/pull/58892" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58892/hovercard">#58892</a>)</li>
<li>Fixed type hints in optimize_for_mobile to be consistent with the default(<a href="https://github.com/pytorch/pytorch/pull/59282" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59282/hovercard">#59282</a>)</li>
<li>Fixed xnnpack hardswish memory issue (<a href="https://github.com/pytorch/pytorch/pull/59577" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59577/hovercard">#59577</a>, <a href="https://github.com/pytorch/pytorch/pull/61622" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61622/hovercard">#61622</a>)</li>
<li>Fixed the issue that model_dump didn‚Äôt work with delegate models (<a href="https://github.com/pytorch/pytorch/pull/61043" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61043/hovercard">#61043</a>)</li>
<li>Fixed concat shaders didn‚Äôt work for certain iOS devices (<a href="https://github.com/pytorch/pytorch/pull/61074" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61074/hovercard">#61074</a>)</li>
<li>Fixed the Metal <code>torch.clamp</code> shader function for x86_64 (<a href="https://github.com/pytorch/pytorch/pull/63062" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63062/hovercard">#63062</a>)</li>
<li>Fixed callstack pointer serialization bug (<a href="https://github.com/pytorch/pytorch/pull/63576" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63576/hovercard">#63576</a>)</li>
<li>Fixed model loading error for Vulkan backend in Java API (<a href="https://github.com/pytorch/pytorch/pull/63402" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63402/hovercard">#63402</a>)</li>
<li>Fixed the issue that sub modules with same names are not serialized correctly in bytecode format (<a href="https://github.com/pytorch/pytorch/pull/61933" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61933/hovercard">#61933</a>)</li>
</ul>
<h2>Quantization</h2>
<ul>
<li>Fixed crash when model outputs dicts or lists (<a href="https://github.com/pytorch/pytorch/pull/58416" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58416/hovercard">#58416</a>)</li>
<li>QAT: Fixed the runtime run <code>cannot resize variables that require grad</code> (<a href="https://github.com/pytorch/pytorch/pull/57068" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57068/hovercard">#57068</a>)</li>
<li>Fixed support for custom module (<a href="https://github.com/pytorch/pytorch/pull/59041" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59041/hovercard">#59041</a>)</li>
<li>Fixed the "tensors to be on the same device" error in HistogramObserver (<a href="https://github.com/pytorch/pytorch/pull/59234" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59234/hovercard">#59234</a>)</li>
<li>Fixed dimension for output of batchnorm 1d (<a href="https://github.com/pytorch/pytorch/pull/59264" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59264/hovercard">#59264</a>)</li>
<li>Fixed quantized mean operator in QNNPACK backend (<a href="https://github.com/pytorch/pytorch/pull/59761" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59761/hovercard">#59761</a>)</li>
<li>Fixed a bug in .to for qtensors so scale/zp move too (<a href="https://github.com/pytorch/pytorch/pull/61576" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61576/hovercard">#61576</a>)</li>
<li>Fixed quantized Conv1d module parameters (<a href="https://github.com/pytorch/pytorch/pull/62356" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62356/hovercard">#62356</a>)</li>
<li>Fixed quantization for tuple arguments (<a href="https://github.com/pytorch/pytorch/pull/63376" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63376/hovercard">#63376</a>)</li>
<li>Fixed fuse qconfig comparison (<a href="https://github.com/pytorch/pytorch/pull/63384" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63384/hovercard">#63384</a>)</li>
<li>Fixed the conversion of the quantizable RNN (<a href="https://github.com/pytorch/pytorch/pull/63879" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63879/hovercard">#63879</a>)</li>
<li>Fixed quantization for sub_scalar (<a href="https://github.com/pytorch/pytorch/pull/64603" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64603/hovercard">#64603</a>)</li>
<li>Fixed a bug for sub (<a href="https://github.com/pytorch/pytorch/pull/65109" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65109/hovercard">#65109</a>)</li>
<li>Add change to ensure qconfig works for QAT with multiple modules (<a href="https://github.com/pytorch/pytorch/pull/63343" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63343/hovercard">#63343</a>)</li>
</ul>
<h2>Distributed</h2>
<p><code>DistributedDataParallel</code></p>
<ul>
<li>Fixed Pipe + DDP for unused parameters, static graph (<a href="https://github.com/pytorch/pytorch/pull/60118" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60118/hovercard">#60118</a>)</li>
<li>Fixed case where new tensors with no grad_fn are returned in DDP forward. (<a href="https://github.com/pytorch/pytorch/pull/60882" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60882/hovercard">#60882</a>)</li>
<li>Re-enabled the optimization of fusing copy and division when no comm hook is specified for both dense and sparse tensors (<a href="https://github.com/pytorch/pytorch/pull/61379" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61379/hovercard">#61379</a>, <a href="https://github.com/pytorch/pytorch/pull/61814" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61814/hovercard">#61814</a>)</li>
<li>Fixed fp16 C++ DDP gradient communication hook (<a href="https://github.com/pytorch/pytorch/pull/63375" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63375/hovercard">#63375</a>)</li>
<li>Added change to ensure buffers are broadcasted properly when they are reassigned in module (<a href="https://github.com/pytorch/pytorch/pull/64776" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64776/hovercard">#64776</a>)</li>
<li>Fixed GradBucket.is_last() logic (<a href="https://github.com/pytorch/pytorch/pull/63768" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63768/hovercard">#63768</a>)</li>
</ul>
<p><code>torch.distributed.Store</code></p>
<ul>
<li>torch.distributed and RPC cannot both be initialized with the same host:port pair (<a href="https://github.com/pytorch/pytorch/pull/58328" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58328/hovercard">#58328</a>, <a href="https://github.com/pytorch/pytorch/pull/58329" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58329/hovercard">#58329</a>, <a href="https://github.com/pytorch/pytorch/pull/58330" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58330/hovercard">#58330</a>, <a href="https://github.com/pytorch/pytorch/pull/58331" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58331/hovercard">#58331</a>)</li>
</ul>
<p><code>torch.distributed.rpc</code></p>
<ul>
<li>Added change to run dist_autograd backward RPCs on appropriate CUDA streams. (<a href="https://github.com/pytorch/pytorch/pull/60606" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60606/hovercard">#60606</a>)</li>
<li>Fixed race condition in TensorPipe agent (<a href="https://github.com/pytorch/pytorch/pull/58753" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58753/hovercard">#58753</a>)</li>
<li>Fixed issue when some gradients are None for distributed optimizers (<a href="https://github.com/pytorch/pytorch/pull/62249" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62249/hovercard">#62249</a>)</li>
</ul>
<p><code>torch.distributed.elastic</code></p>
<ul>
<li>Added change to ensure rendezvous timeout does not get overwritten (<a href="https://github.com/pytorch/pytorch/pull/61471" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61471/hovercard">#61471</a>)</li>
<li>Fixed the edge case when no node is alive (<a href="https://github.com/pytorch/pytorch/pull/59663" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59663/hovercard">#59663</a>)</li>
<li>Added change to cast timestamp type to int (<a href="https://github.com/pytorch/pytorch/pull/59712" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59712/hovercard">#59712</a>)</li>
<li>Added properly formatted traceback on error (<a href="https://github.com/pytorch/pytorch/pull/65041" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65041/hovercard">#65041</a>)</li>
</ul>
<p><code>torch.distributed.autograd</code></p>
<ul>
<li>Updated GraphTask::owner_ in a single thread for DistEngine. (<a href="https://github.com/pytorch/pytorch/pull/58625" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58625/hovercard">#58625</a>)</li>
<li>Introduced the deadlock fix (<a href="https://github.com/pytorch/pytorch/pull/61588" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61588/hovercard">#61588</a>, <a href="https://github.com/pytorch/pytorch/pull/61593" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61593/hovercard">#61593</a>)</li>
</ul>
<p><code>torch.distributed</code></p>
<ul>
<li>Fixed the slowdown of _object_to_tensor since 1.9 (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1008729784" data-permission-text="Title is private" data-url="https://github.com/pytorch/pytorch/issues/65721" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65721/hovercard" href="https://github.com/pytorch/pytorch/pull/65721">#65721</a>) (<a href="https://github.com/pytorch/pytorch/pull/65721" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65721/hovercard">#65721</a>)</li>
</ul>
<h2>torch.fx</h2>
<ul>
<li>Fixed retracing wrapped functions (<a href="https://github.com/pytorch/pytorch/pull/58061" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58061/hovercard">#58061</a>)</li>
<li>Added override for call_function so that wrapped functions stay wrapped (<a href="https://github.com/pytorch/pytorch/pull/60057" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60057/hovercard">#60057</a>)</li>
<li>Added fix to retain node.meta after normalizing args (<a href="https://github.com/pytorch/pytorch/pull/60449" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60449/hovercard">#60449</a>)</li>
<li>Added change to skip the output nodes but process possible nodes after it, when creating a single partition  (<a href="https://github.com/pytorch/pytorch/pull/60370" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60370/hovercard">#60370</a>)</li>
<li>Fixed fx patch module name (<a href="https://github.com/pytorch/pytorch/pull/61062" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61062/hovercard">#61062</a>)</li>
<li>Fixed graph <code>copy.deepcopy</code> to propagate output type (<a href="https://github.com/pytorch/pytorch/pull/61747" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61747/hovercard">#61747</a>)</li>
<li>Added change to allow starter nodes to depend on <code>get_attr</code> node (<a href="https://github.com/pytorch/pytorch/pull/62234" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62234/hovercard">#62234</a>)</li>
<li>Added change to prevent implicit submodule inlining when submodule is a GraphModule (<a href="https://github.com/pytorch/pytorch/pull/62436" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62436/hovercard">#62436</a>)</li>
<li>Added change to persist <code>tracer_cls</code> on <code>fx.Graph</code> when deep copying (<a href="https://github.com/pytorch/pytorch/pull/63353" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63353/hovercard">#63353</a>)</li>
<li>Fixed GraphModule deepcopy to use deepcopied graph (<a href="https://github.com/pytorch/pytorch/pull/63090" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63090/hovercard">#63090</a>)</li>
<li>Fixed constant folding for attrs in submodule hierarchies (<a href="https://github.com/pytorch/pytorch/pull/64342" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64342/hovercard">#64342</a>)</li>
<li>Fixed some const fold cases with deep model hierarchy (<a href="https://github.com/pytorch/pytorch/pull/64945" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64945/hovercard">#64945</a>)</li>
<li>Fixed tracing of bitwise and/or (<a href="https://github.com/pytorch/pytorch/pull/65196" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65196/hovercard">#65196</a>)</li>
</ul>
<h2>ONNX</h2>
<ul>
<li>Added shape type inference fixes for control flow (<a href="https://github.com/pytorch/pytorch/pull/60248" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60248/hovercard">#60248</a>)</li>
<li>Fixed sum export with attribute <code>keepdims</code> (<a href="https://github.com/pytorch/pytorch/pull/60245" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60245/hovercard">#60245</a>)</li>
<li>Fixed shape inference for large model (<a href="https://github.com/pytorch/pytorch/pull/60244" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60244/hovercard">#60244</a>)</li>
<li>Fixed split export in op set 13 (<a href="https://github.com/pytorch/pytorch/pull/57605" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57605/hovercard">#57605</a>)</li>
<li>Fixed control-flow shape inference with contrib op (<a href="https://github.com/pytorch/pytorch/pull/62762" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62762/hovercard">#62762</a>)</li>
<li>Updated <code>instance_norm2d</code> export to handle <code>track_running_stats=True</code> (<a href="https://github.com/pytorch/pytorch/pull/58690" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58690/hovercard">#58690</a>)</li>
<li>Fixed the issue of converting empty list to sequence(<a href="https://github.com/pytorch/pytorch/pull/61558" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61558/hovercard">#61558</a>)</li>
<li>Fixed sum could not be exported for empty tensor (<a href="https://github.com/pytorch/pytorch/pull/59537" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59537/hovercard">#59537</a>)</li>
<li>Fixed an issue that optimizations might adjust graph inputs unexpectedly (<a href="https://github.com/pytorch/pytorch/pull/62763" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62763/hovercard">#62763</a>)</li>
</ul>
<h2>Vulkan</h2>
<ul>
<li>Fixed an issue where comparing equivalent descriptors would evaluate to <code>false</code> (<a href="https://github.com/pytorch/pytorch/pull/60199" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60199/hovercard">#60199</a>)</li>
<li>Fixed asserts in Vulkan JIT passes to actually throw an exception (<a href="https://github.com/pytorch/pytorch/pull/61495" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61495/hovercard">#61495</a>)</li>
</ul>
<h2>Performance_as_a_product</h2>
<ul>
<li>Added fix to ensure number of thread utilities are initialized before getting the number of threads (<a href="https://github.com/pytorch/pytorch/pull/60185" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60185/hovercard">#60185</a>)</li>
<li>Added fix to ensure thread id is valid in nested parallel regions (<a href="https://github.com/pytorch/pytorch/pull/60183" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60183/hovercard">#60183</a>)</li>
<li>Fixed parallel tbb build (<a href="https://github.com/pytorch/pytorch/pull/60532" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60532/hovercard">#60532</a>)</li>
<li>Added change to make flags in the pytorch managed thread pool atomic. (<a href="https://github.com/pytorch/pytorch/pull/58457" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58457/hovercard">#58457</a>)</li>
<li>Set mkl thread locally (<a href="https://github.com/pytorch/pytorch/pull/62891" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62891/hovercard">#62891</a>)</li>
</ul>
<h2>Composability</h2>
<ul>
<li>Added a fix to ensure that the C++ API‚Äôs that skip the dispatcher (such as <code>at::cpu::{op}</code> and <code>at::cuda::{op}</code> get external linkage, so they can be used outside of libtorch (<a href="https://github.com/pytorch/pytorch/pull/58569" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58569/hovercard">#58569</a>)</li>
<li>Fixed bug where shared memory tensor file names can collide (<a href="https://github.com/pytorch/pytorch/pull/60978" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60978/hovercard">#60978</a>)</li>
</ul>
<h2>Build_Frontend</h2>
<ul>
<li>Fixed binary building without python (<a href="https://github.com/pytorch/pytorch/pull/66031" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/66031/hovercard">#66031</a>)</li>
<li>Fixed Windows ninja builds when MAX_JOBS is specified (<a href="https://github.com/pytorch/pytorch/pull/65444" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65444/hovercard">#65444</a>)</li>
<li>Skipped Bfloat16 support when building for VSX (<a href="https://github.com/pytorch/pytorch/pull/61630" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61630/hovercard">#61630</a>)</li>
<li>Made change to use python3 alias in Makefile (<a href="https://github.com/pytorch/pytorch/pull/58786" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58786/hovercard">#58786</a>)</li>
<li>Made change to use <code>pybind11</code> from <code>third_party</code> folder by default (<a href="https://github.com/pytorch/pytorch/pull/58951" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58951/hovercard">#58951</a>)</li>
<li>Made change to ensure FindLAPACK finds the same BLAS library (<a href="https://github.com/pytorch/pytorch/pull/49647" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/49647/hovercard">#49647</a>)</li>
<li>Improved Python package detection in <code>torch.utils.collect_env</code> (<a href="https://github.com/pytorch/pytorch/pull/63321" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63321/hovercard">#63321</a>)</li>
<li>Skipped SVE acceleration on M1 machine (<a href="https://github.com/pytorch/pytorch/pull/58785" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58785/hovercard">#58785</a>)</li>
<li>Made <code>SciPy</code> dependency optional in PyTorch unary operators tests (<a href="https://github.com/pytorch/pytorch/pull/59304" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59304/hovercard">#59304</a>)</li>
<li>Fixed error-handling when Python executable can not be found (<a href="https://github.com/pytorch/pytorch/pull/61230" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61230/hovercard">#61230</a>)</li>
<li>Fixed <code>setup.py</code> re-run incremental build logic on Windows (<a href="https://github.com/pytorch/pytorch/pull/59689" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59689/hovercard">#59689</a>)</li>
<li>Reduced binary size for CUDA-split build by establishing correct linking order (<a href="https://github.com/pytorch/pytorch/pull/58287" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58287/hovercard">#58287</a>)</li>
<li>Fixed  <code>torch.utils.cpp_extension</code> behavior when older setuptools are used (<a href="https://github.com/pytorch/pytorch/pull/61484" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61484/hovercard">#61484</a>)</li>
</ul>
<h2>Infra (Releng)</h2>
<ul>
<li>Fixed windows ci squid env (<a href="https://github.com/pytorch/pytorch/pull/62353" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62353/hovercard">#62353</a>)</li>
<li>Introduced CI dependency pinning: (<a href="https://github.com/pytorch/pytorch/pull/64922" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64922/hovercard">#64922</a>, <a href="https://github.com/pytorch/pytorch/pull/65017" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65017/hovercard">#65017</a>)</li>
<li>Fixed breakpad build and add to more images (<a href="https://github.com/pytorch/pytorch/pull/59236" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59236/hovercard">#59236</a>)</li>
<li>Updated certificate trust chain CI to depend on the linked commits (<a href="https://github.com/pytorch/pytorch/pull/65934" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65934/hovercard">#65934</a>, <a href="https://github.com/pytorch/pytorch/pull/66004" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/66004/hovercard">#66004</a>)</li>
</ul>
<h2>LinAlg_Frontend</h2>
<ul>
<li>Fixed an issue where the ‚Äúinfo‚Äù tensor returned by <code>torch.linalg.inv_ex</code> could sometimes be on the wrong device (<a href="https://github.com/pytorch/pytorch/pull/59223" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59223/hovercard">#59223</a>)</li>
<li>Fixed an issue where <code>torch.linalg.norm</code> could return tensors with the wrong shape in some edge cases (<a href="https://github.com/pytorch/pytorch/pull/60273" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60273/hovercard">#60273</a>)</li>
<li>Fixed an issue where <code>torch.linalg.svd</code> could return tensors with the wrong shape in some edge cases (<a href="https://github.com/pytorch/pytorch/pull/62022" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62022/hovercard">#62022</a>)</li>
<li>Fixed an issue where <code>torch.matmul</code> would throw an error when attempting to multiply certain empty tensors (<a href="https://github.com/pytorch/pytorch/pull/63359" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63359/hovercard">#63359</a>)</li>
</ul>
<h2>Sparse_Frontend</h2>
<ul>
<li>Fixed dtype inference in sparse_csr_tensor_ctor (<a href="https://github.com/pytorch/pytorch/pull/58631" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58631/hovercard">#58631</a>)</li>
<li>Fixed addmm failure for CSR Tensors when MKL is not available (<a href="https://github.com/pytorch/pytorch/pull/58768" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58768/hovercard">#58768</a>)</li>
<li>Fixed overflow of numel for sparse COO tensors after calling coalesce (<a href="https://github.com/pytorch/pytorch/pull/57492" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57492/hovercard">#57492</a>)</li>
<li>Fixed multiplication of 0-dim Tensor and COO sparse Tensor and improved Error message for multiplication of dense and sparse COO tensor (<a href="https://github.com/pytorch/pytorch/pull/61723" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61723/hovercard">#61723</a>)</li>
<li>Fixed internal assert error for CSR tensors crow_/col_indices methods in Debug build (<a href="https://github.com/pytorch/pytorch/pull/63176" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63176/hovercard">#63176</a>)</li>
<li>Fixed support of torch.conj for zero-dimensional sparse COO Tensors (<a href="https://github.com/pytorch/pytorch/pull/59553" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59553/hovercard">#59553</a>)</li>
</ul>
<h2>Misc</h2>
<ul>
<li>Added change to increase warmup for better steady state measurements. (<a href="https://github.com/pytorch/pytorch/pull/58801" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58801/hovercard">#58801</a>)</li>
<li>Fixed bad use of channels last kernel in sync batch norm backward (<a href="https://github.com/pytorch/pytorch/pull/64100" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64100/hovercard">#64100</a>)</li>
</ul>
<h1>Performance</h1>
<h2>Python API</h2>
<ul>
<li><code>torch.special.{'i0', 'i0e', 'i1', 'i1e'}:</code> converted floating-point constants to input type in Bessel functions (<a href="https://github.com/pytorch/pytorch/pull/59416" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59416/hovercard">#59416</a>)</li>
<li>Added change to speed up <code>torch.unique_consecutive()</code> (<a href="https://github.com/pytorch/pytorch/pull/64835" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64835/hovercard">#64835</a>)</li>
<li>Made sure all graphs tests call <code>torch.cuda.empty_cache()</code> before capture to fix flaky tests (<a href="https://github.com/pytorch/pytorch/pull/59233" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59233/hovercard">#59233</a>)</li>
<li><code>torch.flip</code> : improved performance via TensorIterator (<a href="https://github.com/pytorch/pytorch/pull/59509" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59509/hovercard">#59509</a>)</li>
<li>Added change to parallelize <code>torch.gelu</code> via tensoriterator (<a href="https://github.com/pytorch/pytorch/pull/58950" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58950/hovercard">#58950</a>)</li>
<li><code>torch.sum</code>: added change to accumulate 16-bit float sums in 32-bit accumulators for improved precision and performance (<a href="https://github.com/pytorch/pytorch/pull/60387" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60387/hovercard">#60387</a>)</li>
<li>Added fast path for conjugated tensors for  <code>torch.</code>{<code>dot, vdot, mm, addmm, bmm, baddbmm}</code> (<a href="https://github.com/pytorch/pytorch/pull/62915" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62915/hovercard">#62915</a>, <a href="https://github.com/pytorch/pytorch/pull/59380" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59380/hovercard">#59380</a>)</li>
</ul>
<h2>Autograd</h2>
<ul>
<li>Faster <code>torch.cum{sum,prod}</code> backward formulas (<a href="https://github.com/pytorch/pytorch/pull/60642" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60642/hovercard">#60642</a>)</li>
<li>Reduced overhead from <code>reshape</code> call if the tensor already has the right shape (<a href="https://github.com/pytorch/pytorch/pull/61466" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61466/hovercard">#61466</a>)</li>
<li>Added change to speed up saving variables for backward (<a href="https://github.com/pytorch/pytorch/pull/59837" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59837/hovercard">#59837</a>, <a href="https://github.com/pytorch/pytorch/pull/61927" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61927/hovercard">#61927</a>)</li>
<li>Reduced number of TLS access when deciding if an op needs to be tracked by autograd or not (<a href="https://github.com/pytorch/pytorch/pull/60740" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60740/hovercard">#60740</a>)</li>
<li>Improved code that detect when it is valid to re-use existing Tensors during the backward pass (<a href="https://github.com/pytorch/pytorch/pull/59817" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59817/hovercard">#59817</a>)</li>
</ul>
<h2>torch.nn</h2>
<ul>
<li><code>nn.utils.clip_grad_norm_</code>: Removed device syncs (<a href="https://github.com/pytorch/pytorch/pull/61042" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61042/hovercard">#61042</a>)</li>
<li><code>nn.BatchNorm2d</code>: Optimized performance for <code>channels_last</code> on CPU (<a href="https://github.com/pytorch/pytorch/pull/59286" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59286/hovercard">#59286</a>)</li>
<li><code>nn.Softmax</code>: Vectorized softmax calculation for the non-last-dimension case (<a href="https://github.com/pytorch/pytorch/pull/59195" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59195/hovercard">#59195</a>, <a href="https://github.com/pytorch/pytorch/pull/60371" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60371/hovercard">#60371</a>)</li>
<li><code>nn.Transformer</code>: Faster <code>generate_square_subsequent_mask</code> (<a href="https://github.com/pytorch/pytorch/pull/60631" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60631/hovercard">#60631</a>)</li>
</ul>
<h2>CUDA</h2>
<ul>
<li>Updated launch bounds for trilinear 3d (<a href="https://github.com/pytorch/pytorch/pull/59999" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59999/hovercard">#59999</a>)</li>
<li>Migrated Embedding thrust sort to cub sort (<a href="https://github.com/pytorch/pytorch/pull/62495" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62495/hovercard">#62495</a>)</li>
<li>Make <code>unique</code> call in embedding use cub instead of thrust (<a href="https://github.com/pytorch/pytorch/pull/63042" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63042/hovercard">#63042</a>)</li>
<li>Migrated masked_scatter to use cub instead of thrust (<a href="https://github.com/pytorch/pytorch/pull/56750" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/56750/hovercard">#56750</a>)</li>
<li>Reverted D28547564: [pytorch][PR] masked_scatter thrust‚Üícub (<a href="https://github.com/pytorch/pytorch/commit/9e261de630">9e261de630</a>)</li>
<li>Make sort in EmbeddingBag use cub instead of thrust (<a href="https://github.com/pytorch/pytorch/pull/64498" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64498/hovercard">#64498</a>)</li>
<li>Migrated Embedding thrust sort to cub sort (<a href="https://github.com/pytorch/pytorch/pull/63806" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63806/hovercard">#63806</a>)</li>
<li>Removed cat, equal, and stack from autocast promote list (<a href="https://github.com/pytorch/pytorch/pull/59497" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59497/hovercard">#59497</a>)</li>
<li>Add cublas and cusolver paths for LU solve (<a href="https://github.com/pytorch/pytorch/pull/59148" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59148/hovercard">#59148</a>)</li>
<li>Fixed launch bounds for gathertopk kernel (<a href="https://github.com/pytorch/pytorch/pull/60314" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60314/hovercard">#60314</a>)</li>
<li>Changed launch bounds, unrolled for loop for grid sampler 2d fwd and bwd (<a href="https://github.com/pytorch/pytorch/pull/60405" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60405/hovercard">#60405</a>)</li>
<li>Changed launch bound to fix col2im kernel (<a href="https://github.com/pytorch/pytorch/pull/60315" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60315/hovercard">#60315</a>)</li>
<li>Fixed launch bounds for grid sampler 3d (<a href="https://github.com/pytorch/pytorch/pull/60385" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60385/hovercard">#60385</a>)</li>
<li>CUDA graphs: added change to not sync between replays for CUDA driver version 11.4+ (<a href="https://github.com/pytorch/pytorch/pull/61063" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61063/hovercard">#61063</a>)</li>
<li>Changed launch bounds for upsample_linear1d fwd, bwd from 1024 to 512 (<a href="https://github.com/pytorch/pytorch/pull/61307" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61307/hovercard">#61307</a>)</li>
<li>Added change to reduce max_num_threads for complex double ops in reduce_kernel (<a href="https://github.com/pytorch/pytorch/pull/61438" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61438/hovercard">#61438</a>)</li>
<li>Added change to use <code>fastAtomicAdd</code> in EmbeddingBag (mode "max") backward (<a href="https://github.com/pytorch/pytorch/pull/63298" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63298/hovercard">#63298</a>)</li>
<li>Added change to use multi-dimensional cuFFT transforms to improve FFT performance (<a href="https://github.com/pytorch/pytorch/pull/61203" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61203/hovercard">#61203</a>)</li>
<li><code>F.avg_pool3d</code> CUDA backward: use fast atomic adds (<a href="https://github.com/pytorch/pytorch/pull/63387" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63387/hovercard">#63387</a>)</li>
<li>Add cuSOLVER path for LU factorization in CUDA. (<a href="https://github.com/pytorch/pytorch/pull/56887" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/56887/hovercard">#56887</a>)</li>
<li>Reverted launch bounds change in topK that induced a regression in perf (<a href="https://github.com/pytorch/pytorch/pull/63431" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63431/hovercard">#63431</a>)</li>
<li>Added change to bring back old algorithm for sorting on small number of segments (<a href="https://github.com/pytorch/pytorch/pull/64127" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64127/hovercard">#64127</a>)</li>
</ul>
<h2>Mobile</h2>
<ul>
<li>Added change to use channel-last to transform the weights for Metal (<a href="https://github.com/pytorch/pytorch/pull/59113" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59113/hovercard">#59113</a>)</li>
<li>Implemented RoIAlign in Metal shaders using Sampler (<a href="https://github.com/pytorch/pytorch/pull/56075" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/56075/hovercard">#56075</a>)</li>
<li>Added cache operator lambda during model loading (<a href="https://github.com/pytorch/pytorch/pull/61996" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61996/hovercard">#61996</a>)</li>
<li>Added Operator Call De-dup at TorchScript Serialization Level (<a href="https://github.com/pytorch/pytorch/pull/64269" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64269/hovercard">#64269</a>)</li>
<li>Added change to speed up model loading by 1directly calling the C file API from FileAdapter (<a href="https://github.com/pytorch/pytorch/pull/61997" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61997/hovercard">#61997</a>)</li>
<li>Moved from input ivalues in ByteCodeDeserializer (<a href="https://github.com/pytorch/pytorch/pull/64029" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64029/hovercard">#64029</a>)</li>
<li>Fixed MobileDebugInfo vector copy (<a href="https://github.com/pytorch/pytorch/pull/64030" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64030/hovercard">#64030</a>)</li>
<li>Added change to gate tls_local_dispatch_key_set off on iOS too (<a href="https://github.com/pytorch/pytorch/pull/64753" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64753/hovercard">#64753</a>)</li>
<li>Added change to not store multiple kernels per key on mobile (<a href="https://github.com/pytorch/pytorch/pull/64447" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64447/hovercard">#64447</a>)</li>
<li>Added OpCode cache in ByteCodeDeserializer (<a href="https://github.com/pytorch/pytorch/pull/64110" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64110/hovercard">#64110</a>)</li>
<li>Reduced mobile model size by reusing constant and bump bytecode to v5 (<a href="https://github.com/pytorch/pytorch/pull/59722" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59722/hovercard">#59722</a>)</li>
</ul>
<h2>Distributed</h2>
<ul>
<li><code>torch.distributed:</code> replaced all_gather with more efficient collective api _all_gather_base (<a href="https://github.com/pytorch/pytorch/pull/57769" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/57769/hovercard">#57769</a>)</li>
<li><code>torch.distributed.optim.ZeroRedundancyOptimizer: </code>Sorted params by size (decreasing) (<a href="https://github.com/pytorch/pytorch/pull/59586" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59586/hovercard">#59586</a>)</li>
</ul>
<h2>Vulkan</h2>
<ul>
<li>Improved the performance of pointwise convolutions by having each shader invocation calculate a 4x4 output tile  (<a href="https://github.com/pytorch/pytorch/pull/60760" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60760/hovercard">#60760</a>)</li>
<li>Implemented a simple scheme to set the local work group size adaptively (<a href="https://github.com/pytorch/pytorch/pull/61170" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61170/hovercard">#61170</a>)</li>
</ul>
<h2>Performance_as_a_product</h2>
<ul>
<li>TensorIterator: added change to reduce serial_for_each static overhead (<a href="https://github.com/pytorch/pytorch/pull/58909" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58909/hovercard">#58909</a>)</li>
<li>Added change to avoid using <code>std::regex</code> for device string parsing (<a href="https://github.com/pytorch/pytorch/pull/63204" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63204/hovercard">#63204</a>)</li>
</ul>
<h2>Composability</h2>
<ul>
<li>Introduced some perf improvements for reduction ops (<a href="https://github.com/pytorch/pytorch/pull/58655" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58655/hovercard">#58655</a>)</li>
<li>Added optimization to some internal representations of sizes (<a href="https://github.com/pytorch/pytorch/pull/59333" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59333/hovercard">#59333</a>)</li>
<li>Reduced the number of tensor refcount bumps in many existing kernels (<a href="https://github.com/pytorch/pytorch/pull/58303" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58303/hovercard">#58303</a>, <a href="https://github.com/pytorch/pytorch/pull/59827" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59827/hovercard">#59827</a>, <a href="https://github.com/pytorch/pytorch/pull/58273" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58273/hovercard">#58273</a>, <a href="https://github.com/pytorch/pytorch/pull/58272" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58272/hovercard">#58272</a>, <a href="https://github.com/pytorch/pytorch/pull/58276" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58276/hovercard">#58276</a>, <a href="https://github.com/pytorch/pytorch/pull/58277" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58277/hovercard">#58277</a>, <a href="https://github.com/pytorch/pytorch/pull/58279" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58279/hovercard">#58279</a>, <a href="https://github.com/pytorch/pytorch/pull/60546" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60546/hovercard">#60546</a>, <a href="https://github.com/pytorch/pytorch/pull/58280" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58280/hovercard">#58280</a>)</li>
<li>Added micro-optimizations to improve the time it takes to load pytorch (<a href="https://github.com/pytorch/pytorch/pull/64784" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64784/hovercard">#64784</a>, <a href="https://github.com/pytorch/pytorch/pull/64820" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64820/hovercard">#64820</a>, <a href="https://github.com/pytorch/pytorch/pull/64821" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64821/hovercard">#64821</a>, <a href="https://github.com/pytorch/pytorch/pull/64822" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64822/hovercard">#64822</a>, <a href="https://github.com/pytorch/pytorch/pull/64838" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64838/hovercard">#64838</a>, <a href="https://github.com/pytorch/pytorch/pull/64678" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64678/hovercard">#64678</a>, <a href="https://github.com/pytorch/pytorch/pull/64682" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64682/hovercard">#64682</a>, <a href="https://github.com/pytorch/pytorch/pull/64670" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64670/hovercard">#64670</a>)</li>
</ul>
<h2>Build_Frontend</h2>
<ul>
<li>Compiled BatchLinearAlgebra CUDA integration routines with host compiler (<a href="https://github.com/pytorch/pytorch/pull/64146" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64146/hovercard">#64146</a>)</li>
<li>Sped-up compilation by splitting autogenerated files into smaller ones (<a href="https://github.com/pytorch/pytorch/pull/62186" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/62186/hovercard">#62186</a>)</li>
<li>Allowed <a href="https://ninja-build.org/" rel="nofollow">ninja-build</a> to dynamically pick best parallel build option (<a href="https://github.com/pytorch/pytorch/pull/64733" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64733/hovercard">#64733</a>, <a href="https://github.com/pytorch/pytorch/pull/65162" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/65162/hovercard">#65162</a>)</li>
</ul>
<h2>Infra (Releng)</h2>
<ul>
<li>.github: upload /download large artifacts to s3 (<a href="https://github.com/pytorch/pytorch/pull/58506" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/58506/hovercard">#58506</a>)</li>
<li>Made change to only run mem leak check on master (<a href="https://github.com/pytorch/pytorch/pull/60023" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60023/hovercard">#60023</a>)</li>
<li>Enabled parallel clang-tidy on ec2 runner (<a href="https://github.com/pytorch/pytorch/pull/60870" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60870/hovercard">#60870</a>)</li>
<li>Made change to skip magma library installation for Windows CPU builds (<a href="https://github.com/pytorch/pytorch/pull/59619" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59619/hovercard">#59619</a>)</li>
</ul>
<h2>Sparse_Frontend</h2>
<ul>
<li>Sped up conversion of COO to CSR Tensor <code>to_sparse_csr</code> by writing custom CPU/GPU kernels (<a href="https://github.com/pytorch/pytorch/pull/61340" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61340/hovercard">#61340</a>, <a href="https://github.com/pytorch/pytorch/pull/61838" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61838/hovercard">#61838</a>)</li>
<li>Slightly sped up calculation of number of dense entries for sparse softmax via <code>c10::multiply_integers</code>  for COO Tensors (<a href="https://github.com/pytorch/pytorch/pull/60872" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60872/hovercard">#60872</a>)</li>
<li>Slightly sped up sparse softmax for COO Tensors by improve usage of <code>std::vector</code> (<a href="https://github.com/pytorch/pytorch/pull/60873" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60873/hovercard">#60873</a>)</li>
<li>Sped up index_select for sparse COO Tensor (<a href="https://github.com/pytorch/pytorch/pull/63008" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63008/hovercard">#63008</a>)</li>
</ul>
<h2>Misc</h2>
<ul>
<li>Greatly reduced the post-processing time of the profiler (<a href="https://github.com/pytorch/pytorch/pull/60432" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/60432/hovercard">#60432</a>)</li>
<li>Saved some little memory in <code>default_collate</code> (<a href="https://github.com/pytorch/pytorch/pull/61424" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61424/hovercard">#61424</a>)</li>
<li>Added new ops to the operator microbenchmark: <code>gelu</code>, <code>bmm</code>, <code>mm</code>, <code>einsum</code>, <code>log1p</code> (<a href="https://github.com/pytorch/pytorch/pull/59334" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59334/hovercard">#59334</a>, <a href="https://github.com/pytorch/pytorch/pull/59595" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/59595/hovercard">#59595</a>, <a href="https://github.com/pytorch/pytorch/pull/63654" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/63654/hovercard">#63654</a>, <a href="https://github.com/pytorch/pytorch/pull/64647" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64647/hovercard">#64647</a>, <a href="https://github.com/pytorch/pytorch/pull/64032" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64032/hovercard">#64032</a>, <a href="https://github.com/pytorch/pytorch/pull/64205" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/64205/hovercard">#64205</a>)</li>
<li>Added AVX512 support in ATen &amp; remove AVX support (<a href="https://github.com/pytorch/pytorch/pull/61903" data-hovercard-type="pull_request" data-hovercard-url="/pytorch/pytorch/pull/61903/hovercard">#61903</a>)</li>
</ul>
<p>You can also find the dev specific and documentation related changes in the forum post <a href="https://dev-discuss.pytorch.org/t/pytorch-1-10-dev-release-notes/379" rel="nofollow">here</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from deno: v1.15.3]]></title>
            <link>https://github.com/denoland/deno/releases/tag/v1.15.3</link>
            <guid>https://github.com/denoland/deno/releases/tag/v1.15.3</guid>
            <pubDate>Mon, 25 Oct 2021 11:47:49 GMT</pubDate>
            <content:encoded><![CDATA[<h3>1.15.3 / 2021.10.25</h3>
<ul>
<li>feat(serde_v8): StringOrBuffer (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1031089163" data-permission-text="Title is private" data-url="https://github.com/denoland/deno/issues/12503" data-hovercard-type="pull_request" data-hovercard-url="/denoland/deno/pull/12503/hovercard" href="https://github.com/denoland/deno/pull/12503">#12503</a>)</li>
<li>feat(serde_v8): allow all values to deserialize to unit type (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1031095367" data-permission-text="Title is private" data-url="https://github.com/denoland/deno/issues/12504" data-hovercard-type="pull_request" data-hovercard-url="/denoland/deno/pull/12504/hovercard" href="https://github.com/denoland/deno/pull/12504">#12504</a>)</li>
<li>fix(cli/dts): update std links for deprecations (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1030542454" data-permission-text="Title is private" data-url="https://github.com/denoland/deno/issues/12496" data-hovercard-type="pull_request" data-hovercard-url="/denoland/deno/pull/12496/hovercard" href="https://github.com/denoland/deno/pull/12496">#12496</a>)</li>
<li>fix(cli/tests): flaky Deno.watchFs() tests (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1029609913" data-permission-text="Title is private" data-url="https://github.com/denoland/deno/issues/12485" data-hovercard-type="pull_request" data-hovercard-url="/denoland/deno/pull/12485/hovercard" href="https://github.com/denoland/deno/pull/12485">#12485</a>)</li>
<li>fix(core): avoid op_state.borrow_mut() for OpsTracker (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1034434338" data-permission-text="Title is private" data-url="https://github.com/denoland/deno/issues/12525" data-hovercard-type="pull_request" data-hovercard-url="/denoland/deno/pull/12525/hovercard" href="https://github.com/denoland/deno/pull/12525">#12525</a>)</li>
<li>fix(core/bindings): use is_instance_of_error() instead of is_native_error()<br>
(<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1029416394" data-permission-text="Title is private" data-url="https://github.com/denoland/deno/issues/12479" data-hovercard-type="pull_request" data-hovercard-url="/denoland/deno/pull/12479/hovercard" href="https://github.com/denoland/deno/pull/12479">#12479</a>)</li>
<li>fix(ext/net): fix TLS bugs and add 'op_tls_handshake' (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1030751318" data-permission-text="Title is private" data-url="https://github.com/denoland/deno/issues/12501" data-hovercard-type="pull_request" data-hovercard-url="/denoland/deno/pull/12501/hovercard" href="https://github.com/denoland/deno/pull/12501">#12501</a>)</li>
<li>fix(ext/websocket): prevent 'closed normally' panic (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1025787888" data-permission-text="Title is private" data-url="https://github.com/denoland/deno/issues/12437" data-hovercard-type="pull_request" data-hovercard-url="/denoland/deno/pull/12437/hovercard" href="https://github.com/denoland/deno/pull/12437">#12437</a>)</li>
<li>fix(lsp): formatting should error on certain additional swc diagnostics<br>
(<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1029846755" data-permission-text="Title is private" data-url="https://github.com/denoland/deno/issues/12491" data-hovercard-type="pull_request" data-hovercard-url="/denoland/deno/pull/12491/hovercard" href="https://github.com/denoland/deno/pull/12491">#12491</a>)</li>
<li>fix: declare web types as global (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1030582784" data-permission-text="Title is private" data-url="https://github.com/denoland/deno/issues/12497" data-hovercard-type="pull_request" data-hovercard-url="/denoland/deno/pull/12497/hovercard" href="https://github.com/denoland/deno/pull/12497">#12497</a>)</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from scikit-learn: scikit-learn 1.0.1]]></title>
            <link>https://github.com/scikit-learn/scikit-learn/releases/tag/1.0.1</link>
            <guid>https://github.com/scikit-learn/scikit-learn/releases/tag/1.0.1</guid>
            <pubDate>Mon, 25 Oct 2021 11:14:11 GMT</pubDate>
            <content:encoded><![CDATA[<p>We're happy to announce the 1.0.1 release with several bugfixes:</p>
<p>You can see the changelog here: <a href="https://scikit-learn.org/dev/whats_new/v1.0.html#version-1-0-1" rel="nofollow">https://scikit-learn.org/dev/whats_new/v1.0.html#version-1-0-1</a></p>
<p>You can upgrade with pip as usual:</p>
<div class="snippet-clipboard-content position-relative overflow-auto" data-snippet-clipboard-copy-content="pip install -U scikit-learn
"><pre><code>pip install -U scikit-learn
</code></pre></div>
<p>The conda-forge builds will be available shortly, which you can then install using:</p>
<div class="snippet-clipboard-content position-relative overflow-auto" data-snippet-clipboard-copy-content="conda install -c conda-forge scikit-learn
"><pre><code>conda install -c conda-forge scikit-learn
</code></pre></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from ant-design: 4.17.0-alpha.8]]></title>
            <link>https://github.com/ant-design/ant-design/releases/tag/4.17.0-alpha.8</link>
            <guid>https://github.com/ant-design/ant-design/releases/tag/4.17.0-alpha.8</guid>
            <pubDate>Mon, 25 Oct 2021 10:27:07 GMT</pubDate>
            <content:encoded><![CDATA[<ul>
<li><g-emoji class="g-emoji" alias="lady_beetle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f41e.png">üêû</g-emoji> Fix the text overflow when page zoomed in Typography with prop <code>ellipsis</code>. <a href="https://github.com/ant-design/ant-design/pull/32496" data-hovercard-type="pull_request" data-hovercard-url="/ant-design/ant-design/pull/32496/hovercard">#32496</a> <a href="https://github.com/hydraZty">@hydraZty</a></li>
<li><g-emoji class="g-emoji" alias="lady_beetle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f41e.png">üêû</g-emoji> Fix Transfer throws <code>MenuItem should not leave undefined key</code> warning when opening selection dropdown menu. <a href="https://github.com/ant-design/ant-design/pull/32578" data-hovercard-type="pull_request" data-hovercard-url="/ant-design/ant-design/pull/32578/hovercard">#32578</a></li>
<li><g-emoji class="g-emoji" alias="lady_beetle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f41e.png">üêû</g-emoji> Fix Tree.DirectoryTree throws <code>TypeError:nativeEvent is undefined</code>. <a href="https://github.com/ant-design/ant-design/pull/32551" data-hovercard-type="pull_request" data-hovercard-url="/ant-design/ant-design/pull/32551/hovercard">#32551</a> <a href="https://github.com/D-to-the-K">@D-to-the-K</a></li>
<li><g-emoji class="g-emoji" alias="lipstick" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f484.png">üíÑ</g-emoji> Add box-shadow for jumper input in Pagination with <code>simple</code> props. <a href="https://github.com/ant-design/ant-design/pull/32528" data-hovercard-type="pull_request" data-hovercard-url="/ant-design/ant-design/pull/32528/hovercard">#32528</a> <a href="https://github.com/chen-jingjie">@chen-jingjie</a></li>
<li><g-emoji class="g-emoji" alias="lipstick" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f484.png">üíÑ</g-emoji> Table hover <code>rowSpan</code> row will highlight all the rows now. <a href="https://github.com/ant-design/ant-design/pull/32557" data-hovercard-type="pull_request" data-hovercard-url="/ant-design/ant-design/pull/32557/hovercard">#32557</a></li>
</ul>
<hr>
<ul>
<li><g-emoji class="g-emoji" alias="lady_beetle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f41e.png">üêû</g-emoji> ‰øÆÂ§ç Typography ËÆæÁΩÆ <code>ellipsis</code> ÂêéÂú®Áº©Êîæ‰∏ãÁöÑÊñáÊú¨Ê∫¢Âá∫„ÄÇ<a href="https://github.com/ant-design/ant-design/pull/32496" data-hovercard-type="pull_request" data-hovercard-url="/ant-design/ant-design/pull/32496/hovercard">#32496</a> <a href="https://github.com/hydraZty">@hydraZty</a></li>
<li><g-emoji class="g-emoji" alias="lady_beetle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f41e.png">üêû</g-emoji> ‰øÆÂ§ç Transfer ÊâìÂºÄÈÄâÊã©ËèúÂçïÊó∂ÊäõÂá∫ <code>MenuItem should not leave undefined key</code> Ë≠¶Âëä„ÄÇ<a href="https://github.com/ant-design/ant-design/pull/32578" data-hovercard-type="pull_request" data-hovercard-url="/ant-design/ant-design/pull/32578/hovercard">#32578</a></li>
<li><g-emoji class="g-emoji" alias="lady_beetle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f41e.png">üêû</g-emoji> ‰øÆÂ§ç Tree.DirectoryTree ÈîÆÁõòÊìç‰ΩúÊó∂ÊäõÂá∫ <code>TypeError:nativeEvent is undefined</code>„ÄÇ<a href="https://github.com/ant-design/ant-design/pull/32551" data-hovercard-type="pull_request" data-hovercard-url="/ant-design/ant-design/pull/32551/hovercard">#32551</a> <a href="https://github.com/D-to-the-K">@D-to-the-K</a></li>
<li><g-emoji class="g-emoji" alias="lipstick" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f484.png">üíÑ</g-emoji> Pagination <code>simple</code> Â±ûÊÄß‰∏ã‰∏≠ÁøªÈ°µ input Â¢ûÂä† box-shadow„ÄÇ<a href="https://github.com/ant-design/ant-design/pull/32528" data-hovercard-type="pull_request" data-hovercard-url="/ant-design/ant-design/pull/32528/hovercard">#32528</a> <a href="https://github.com/chen-jingjie">@chen-jingjie</a></li>
<li><g-emoji class="g-emoji" alias="lipstick" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f484.png">üíÑ</g-emoji> Table Èº†Ê†áÊÇ¨ÊµÆ <code>rowSpan</code> Ë°åÊó∂‰ºöÈ´ò‰∫ÆÊâÄÊúâÁõ∏ÂÖ≥Ë°å„ÄÇ<a href="https://github.com/ant-design/ant-design/pull/32557" data-hovercard-type="pull_request" data-hovercard-url="/ant-design/ant-design/pull/32557/hovercard">#32557</a></li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from Ghost: 4.20.3]]></title>
            <link>https://github.com/TryGhost/Ghost/releases/tag/v4.20.3</link>
            <guid>https://github.com/TryGhost/Ghost/releases/tag/v4.20.3</guid>
            <pubDate>Mon, 25 Oct 2021 09:33:40 GMT</pubDate>
            <content:encoded><![CDATA[<ul>
<li><g-emoji class="g-emoji" alias="bug" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f41b.png">üêõ</g-emoji> Fixed error when a theme does not have a <code>"config"</code> object in it's package.json - Kevin Ansfield</li>
</ul>
<hr>
<p>View the changelogs for full details:</p>
<ul>
<li>Ghost - <a class="commit-link" href="https://github.com/TryGhost/Ghost/compare/v4.20.2...v4.20.3"><tt>v4.20.2...v4.20.3</tt></a></li>
<li>Admin - <a class="commit-link" href="https://github.com/TryGhost/Admin/compare/v4.20.2...v4.20.3">TryGhost/Admin@<tt>v4.20.2...v4.20.3</tt></a></li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from curl: 7.79.1]]></title>
            <link>https://github.com/curl/curl/releases/tag/curl-7_79_1</link>
            <guid>https://github.com/curl/curl/releases/tag/curl-7_79_1</guid>
            <pubDate>Mon, 25 Oct 2021 09:23:47 GMT</pubDate>
            <content:encoded><![CDATA[<p><a href="https://curl.se/changes.html#7_79_1" rel="nofollow">changelog</a></p>
<p><a href="https://youtu.be/h-m2Vv57SOY" rel="nofollow">release video</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from Ghost: 4.20.2]]></title>
            <link>https://github.com/TryGhost/Ghost/releases/tag/v4.20.2</link>
            <guid>https://github.com/TryGhost/Ghost/releases/tag/v4.20.2</guid>
            <pubDate>Mon, 25 Oct 2021 07:24:41 GMT</pubDate>
            <content:encoded><![CDATA[<ul>
<li><g-emoji class="g-emoji" alias="bug" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f41b.png">üêõ</g-emoji> Fixed offers and custom theme setting features not appearing in Admin - Kevin Ansfield</li>
</ul>
<hr>
<p>View the changelogs for full details:</p>
<ul>
<li>Ghost - <a class="commit-link" href="https://github.com/TryGhost/Ghost/compare/v4.20.1...v4.20.2"><tt>v4.20.1...v4.20.2</tt></a></li>
<li>Admin - <a class="commit-link" href="https://github.com/TryGhost/Admin/compare/v4.20.1...v4.20.2">TryGhost/Admin@<tt>v4.20.1...v4.20.2</tt></a></li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from gatsby: v4.0.0]]></title>
            <link>https://github.com/gatsbyjs/gatsby/releases/tag/gatsby%404.0.0</link>
            <guid>https://github.com/gatsbyjs/gatsby/releases/tag/gatsby%404.0.0</guid>
            <pubDate>Mon, 25 Oct 2021 06:32:15 GMT</pubDate>
            <content:encoded><![CDATA[<p>Welcome to <code>gatsby@4.0.0</code> release (October 2021 #<span></span>1).</p>
<p>We've released Gatsby 3 in <a href="https://www.gatsbyjs.com/docs/reference/release-notes/v3.0" rel="nofollow">March 2021</a> and now have a lot of exciting new features for Gatsby 4!<br>
We‚Äôve tried to make migration smooth. Please refer to the <a href="https://www.gatsbyjs.com/docs/reference/release-notes/migrating-from-v3-to-v4/" rel="nofollow">migration guide</a><br>
and <a href="https://github.com/gatsbyjs/gatsby/issues/new/choose">let us know</a> if you encounter any issues when migrating.</p>
<p>Key highlights of this release:</p>
<ul>
<li><a href="https://www.gatsbyjs.com/docs/reference/release-notes/v4.0/#parallel-query-running" rel="nofollow">Parallel Query Running</a> - up to 40% reduction in build times</li>
<li><a href="https://www.gatsbyjs.com/docs/reference/release-notes/v4.0/#deferred-static-generation-dsg" rel="nofollow">Deferred Static Generation (DSG)</a> - defer page generation to user request, speeding up build times</li>
<li><a href="https://www.gatsbyjs.com/docs/reference/release-notes/v4.0/#server-side-rendering-ssr" rel="nofollow">Server-Side Rendering (SSR)</a> - pre-render a page with data that is fetched when a user visits the page</li>
</ul>
<p>Also check out <a href="https://www.gatsbyjs.com/docs/reference/release-notes/v4.0/#notable-bugfixes-and-improvements" rel="nofollow">notable bugfixes and improvements</a>.</p>
<p><strong>Bleeding Edge:</strong> Want to try new features as soon as possible? Install <code>gatsby@next</code> and let us know<br>
if you have any <a href="https://github.com/gatsbyjs/gatsby/issues">issues</a>.</p>
<p><a href="https://www.gatsbyjs.com/docs/reference/release-notes/v3.14" rel="nofollow">Previous release notes for 3.14</a></p>
<p><a href="https://github.com/gatsbyjs/gatsby/compare/gatsby@3.14.0-next.0...gatsby@4.0.0">Full changelog</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from swc: v1.2.103: fix(es/transforms/compat): Fix `async_to_generator` (#2526)]]></title>
            <link>https://github.com/swc-project/swc/releases/tag/v1.2.103</link>
            <guid>https://github.com/swc-project/swc/releases/tag/v1.2.103</guid>
            <pubDate>Mon, 25 Oct 2021 06:30:26 GMT</pubDate>
            <content:encoded><![CDATA[<p>fix(es/transforms/compat): Fix `async_to_generator` (<a class="issue-link js-issue-link" href="https://github.com/swc-project/swc/pull/2526">#2526</a>)</p>

<p>swc_ecma_transforms_compat:
<br /> - `async_to_generator`: Handle `for-await` correctly. (<a class="issue-link js-issue-link" href="https://github.com/swc-project/swc/issues/2306">#2306</a>)</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from rxdb: 10.2.2]]></title>
            <link>https://github.com/pubkey/rxdb/releases/tag/10.2.2</link>
            <guid>https://github.com/pubkey/rxdb/releases/tag/10.2.2</guid>
            <pubDate>Mon, 25 Oct 2021 01:24:28 GMT</pubDate>
            <content:encoded><![CDATA[<p>Bugfixes:</p>
<ul>
<li>Migration with attachments removes attachment mime types <a href="https://github.com/pubkey/rxdb/issues/3460" data-hovercard-type="issue" data-hovercard-url="/pubkey/rxdb/issues/3460/hovercard">#3460</a> Thanks <a href="https://github.com/swnf">@swnf</a></li>
</ul>
<p>Other:</p>
<ul>
<li>Improved performance when many queries are created in a short timespan.</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from httpie: HTTPie 2.6.0]]></title>
            <link>https://github.com/httpie/httpie/releases/tag/2.6.0</link>
            <guid>https://github.com/httpie/httpie/releases/tag/2.6.0</guid>
            <pubDate>Sun, 24 Oct 2021 14:26:51 GMT</pubDate>
            <content:encoded><![CDATA[<p>Blog post: <strong><a href="https://httpie.io/blog/httpie-2.6.0" rel="nofollow">What‚Äôs new in HTTPie 2.6.0</a></strong></p>
<ul>
<li>Added support for formatting &amp; coloring of JSON bodies preceded by non-JSON data (e.g., an XXSI prefix). (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="973778576" data-permission-text="Title is private" data-url="https://github.com/httpie/httpie/issues/1130" data-hovercard-type="pull_request" data-hovercard-url="/httpie/httpie/pull/1130/hovercard" href="https://github.com/httpie/httpie/pull/1130">#1130</a>)</li>
<li>Added charset auto-detection when <code>Content-Type</code> doesn‚Äôt include it. (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="946367098" data-permission-text="Title is private" data-url="https://github.com/httpie/httpie/issues/1110" data-hovercard-type="pull_request" data-hovercard-url="/httpie/httpie/pull/1110/hovercard" href="https://github.com/httpie/httpie/pull/1110">#1110</a>, <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1012155716" data-permission-text="Title is private" data-url="https://github.com/httpie/httpie/issues/1168" data-hovercard-type="pull_request" data-hovercard-url="/httpie/httpie/pull/1168/hovercard" href="https://github.com/httpie/httpie/pull/1168">#1168</a>)</li>
<li>Added <code>--response-charset</code> to allow overriding the response encoding for terminal display purposes. (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1012155716" data-permission-text="Title is private" data-url="https://github.com/httpie/httpie/issues/1168" data-hovercard-type="pull_request" data-hovercard-url="/httpie/httpie/pull/1168/hovercard" href="https://github.com/httpie/httpie/pull/1168">#1168</a>)</li>
<li>Added <code>--response-mime</code> to allow overriding the response mime type for coloring and formatting for the terminal. (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1012155716" data-permission-text="Title is private" data-url="https://github.com/httpie/httpie/issues/1168" data-hovercard-type="pull_request" data-hovercard-url="/httpie/httpie/pull/1168/hovercard" href="https://github.com/httpie/httpie/pull/1168">#1168</a>)</li>
<li>Added the ability to silence warnings through using <code>-q</code> or <code>--quiet twice</code> (e.g. <code>-qq</code>) (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1020487718" data-permission-text="Title is private" data-url="https://github.com/httpie/httpie/issues/1175" data-hovercard-type="pull_request" data-hovercard-url="/httpie/httpie/pull/1175/hovercard" href="https://github.com/httpie/httpie/pull/1175">#1175</a>)</li>
<li>Added installed plugin list to <code>--debug</code> output. (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1005519901" data-permission-text="Title is private" data-url="https://github.com/httpie/httpie/issues/1165" data-hovercard-type="pull_request" data-hovercard-url="/httpie/httpie/pull/1165/hovercard" href="https://github.com/httpie/httpie/pull/1165">#1165</a>)</li>
<li>Fixed duplicate keys preservation in JSON data. (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1002584642" data-permission-text="Title is private" data-url="https://github.com/httpie/httpie/issues/1163" data-hovercard-type="pull_request" data-hovercard-url="/httpie/httpie/pull/1163/hovercard" href="https://github.com/httpie/httpie/pull/1163">#1163</a>)</li>
</ul>
<hr>
<p>‚Üí Join our Discord community: <a href="https://httpie.io/discord" rel="nofollow">https://httpie.io/discord</a><br>
‚Üí Install HTTPie: <a href="https://httpie.io/docs#installation" rel="nofollow">https://httpie.io/docs#installation</a><br>
‚Üí Learn more: <a href="https://httpie.io" rel="nofollow">https://httpie.io</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from httpie: HTTPie 2.5.0]]></title>
            <link>https://github.com/httpie/httpie/releases/tag/2.5.0</link>
            <guid>https://github.com/httpie/httpie/releases/tag/2.5.0</guid>
            <pubDate>Sun, 24 Oct 2021 14:26:33 GMT</pubDate>
            <content:encoded><![CDATA[<p>Blog post: <strong><a href="https://httpie.io/blog/httpie-2.5.0" rel="nofollow">What‚Äôs new in HTTPie 2.5.0</a></strong></p>
<ul>
<li>Added <code>--raw</code> to allow specifying the raw request body without extra processing as<br>
an alternative to <code>stdin</code>. (<a href="https://github.com/httpie/httpie/issues/534" data-hovercard-type="issue" data-hovercard-url="/httpie/httpie/issues/534/hovercard">#534</a>)</li>
<li>Added support for XML formatting. (<a href="https://github.com/httpie/httpie/issues/1129" data-hovercard-type="pull_request" data-hovercard-url="/httpie/httpie/pull/1129/hovercard">#1129</a>)</li>
<li>Added internal support for file-like object responses to improve adapter plugin support. (<a href="https://github.com/httpie/httpie/issues/1094" data-hovercard-type="pull_request" data-hovercard-url="/httpie/httpie/pull/1094/hovercard">#1094</a>)</li>
<li>Fixed <code>--continue --download</code> with a single byte to be downloaded left. (<a href="https://github.com/httpie/httpie/issues/1032" data-hovercard-type="pull_request" data-hovercard-url="/httpie/httpie/pull/1032/hovercard">#1032</a>)</li>
<li>Fixed <code>--verbose</code> HTTP 307 redirects with streamed request body. (<a href="https://github.com/httpie/httpie/issues/1088" data-hovercard-type="pull_request" data-hovercard-url="/httpie/httpie/pull/1088/hovercard">#1088</a>)</li>
<li>Fixed handling of session files with <code>Cookie:</code> followed by other headers. (<a href="https://github.com/httpie/httpie/issues/1126" data-hovercard-type="issue" data-hovercard-url="/httpie/httpie/issues/1126/hovercard">#1126</a>)</li>
</ul>
<hr>
<p>‚Üí Join our Discord community: <a href="https://httpie.io/chat" rel="nofollow">https://httpie.io/chat</a><br>
‚Üí Install HTTPie: <a href="https://httpie.io/docs#installation" rel="nofollow">https://httpie.io/docs#installation</a><br>
‚Üí Learn more: <a href="https://httpie.io" rel="nofollow">https://httpie.io</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from sequelize: v6.8.0]]></title>
            <link>https://github.com/sequelize/sequelize/releases/tag/v6.8.0</link>
            <guid>https://github.com/sequelize/sequelize/releases/tag/v6.8.0</guid>
            <pubDate>Sun, 24 Oct 2021 11:54:49 GMT</pubDate>
            <content:encoded><![CDATA[<h1><a href="https://github.com/sequelize/sequelize/compare/v6.7.0...v6.8.0">6.8.0</a> (2021-10-24)</h1>
<h3>Bug Fixes</h3>
<ul>
<li><strong>types:</strong> allow any values in <code>isIn</code> validator (<a href="https://github.com/sequelize/sequelize/issues/12962" data-hovercard-type="pull_request" data-hovercard-url="/sequelize/sequelize/pull/12962/hovercard">#12962</a>) (<a href="https://github.com/sequelize/sequelize/commit/d511d9164e0f469ccba40d94b4865b73466f64f5">d511d91</a>)</li>
<li>allows insert primary key with zero (<a href="https://github.com/sequelize/sequelize/issues/13458" data-hovercard-type="pull_request" data-hovercard-url="/sequelize/sequelize/pull/13458/hovercard">#13458</a>) (<a href="https://github.com/sequelize/sequelize/commit/e4aff2f6270bc52fbdc90bed6269537e2f9714e0">e4aff2f</a>)</li>
<li><strong>model:</strong> Convert number values only if they aren't null to avoid NaN (<a href="https://github.com/sequelize/sequelize/commit/199b632b021830f9d09210fd7430045710638631">199b632</a>)</li>
<li><strong>model.d:</strong> accept [Op.is] in where (broken in TypeScript 4.4) (<a href="https://github.com/sequelize/sequelize/issues/13499" data-hovercard-type="pull_request" data-hovercard-url="/sequelize/sequelize/pull/13499/hovercard">#13499</a>) (<a href="https://github.com/sequelize/sequelize/commit/d685a9a76ad353aef6df61c19e4385aa9ba79368">d685a9a</a>)</li>
<li><strong>postgres:</strong> fix <code>findCreateFind</code> to work with postgres transactions (<a href="https://github.com/sequelize/sequelize/issues/13482" data-hovercard-type="pull_request" data-hovercard-url="/sequelize/sequelize/pull/13482/hovercard">#13482</a>) (<a href="https://github.com/sequelize/sequelize/commit/84421d7d738176ee6d0de705c493b145b9488532">84421d7</a>)</li>
<li><strong>select:</strong> do not force set <code>subQuery</code> to <code>false</code> (<a href="https://github.com/sequelize/sequelize/issues/13490" data-hovercard-type="pull_request" data-hovercard-url="/sequelize/sequelize/pull/13490/hovercard">#13490</a>) (<a href="https://github.com/sequelize/sequelize/commit/094333910e105bbc363321eb7557a582363a8f6d">0943339</a>)</li>
<li><strong>sqlite:</strong> fix wrongly overwriting storage if empty string (<a href="https://github.com/sequelize/sequelize/issues/13376" data-hovercard-type="pull_request" data-hovercard-url="/sequelize/sequelize/pull/13376/hovercard">#13376</a>) (<a href="https://github.com/sequelize/sequelize/commit/c3e608b95a130b661ca01f9af42beaac5995d986">c3e608b</a>), closes <a href="https://github.com/sequelize/sequelize/issues/13375" data-hovercard-type="issue" data-hovercard-url="/sequelize/sequelize/issues/13375/hovercard">#13375</a></li>
<li><strong>types:</strong> add missing upsert hooks (<a href="https://github.com/sequelize/sequelize/issues/13394" data-hovercard-type="pull_request" data-hovercard-url="/sequelize/sequelize/pull/13394/hovercard">#13394</a>) (<a href="https://github.com/sequelize/sequelize/commit/5e9c209cc8eaa1d38f33bb3ac2de8b8ab33929f2">5e9c209</a>)</li>
<li><strong>types:</strong> extend BulkCreateOptions by SearchPathable (<a href="https://github.com/sequelize/sequelize/issues/13469" data-hovercard-type="pull_request" data-hovercard-url="/sequelize/sequelize/pull/13469/hovercard">#13469</a>) (<a href="https://github.com/sequelize/sequelize/commit/47c2d057f857e1eb197ac317f295798313dcedc0">47c2d05</a>), closes <a href="https://github.com/sequelize/sequelize/issues/13454" data-hovercard-type="issue" data-hovercard-url="/sequelize/sequelize/issues/13454/hovercard">#13454</a></li>
<li><strong>types:</strong> typo in model.d.ts (<a href="https://github.com/sequelize/sequelize/issues/13574" data-hovercard-type="pull_request" data-hovercard-url="/sequelize/sequelize/pull/13574/hovercard">#13574</a>) (<a href="https://github.com/sequelize/sequelize/commit/31d0fbce032073917b4b41f1bdde4fb1fe562f97">31d0fbc</a>)</li>
</ul>
<h3>Features</h3>
<ul>
<li><strong>postgres:</strong> support <code>query_timeout</code> dialect option (<a href="https://github.com/sequelize/sequelize/issues/13258" data-hovercard-type="pull_request" data-hovercard-url="/sequelize/sequelize/pull/13258/hovercard">#13258</a>) (<a href="https://github.com/sequelize/sequelize/commit/3ca085db318201fa59422a2ce191bcf76e5f37dc">3ca085d</a>)</li>
<li><strong>typings:</strong> add UnknownConstraintError (<a href="https://github.com/sequelize/sequelize/issues/13461" data-hovercard-type="pull_request" data-hovercard-url="/sequelize/sequelize/pull/13461/hovercard">#13461</a>) (<a href="https://github.com/sequelize/sequelize/commit/69d899e27b733adb24e4300b48c9bae91455932f">69d899e</a>)</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from pandoc: pandoc 2.15]]></title>
            <link>https://github.com/jgm/pandoc/releases/tag/2.15</link>
            <guid>https://github.com/jgm/pandoc/releases/tag/2.15</guid>
            <pubDate>Sun, 24 Oct 2021 02:35:39 GMT</pubDate>
            <content:encoded><![CDATA[<details>
  <summary>Click to expand changelog</summary>
<ul>
<li>
<p>Add <code>--sandbox</code> option (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="377502885" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/5045" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/5045/hovercard" href="https://github.com/jgm/pandoc/issues/5045">#5045</a>).</p>
<ul>
<li>Add sandbox feature. When this option is used, readers and writers only have access to input files (and other files specified directly on command line). This restriction is enforced in the type system.</li>
<li>Filters, PDF production, custom writers are unaffected. This feature only insulates the actual readers and writers, not the pipeline around them in Text.Pandoc.App.</li>
<li>Note that when <code>--sandboxed</code> is specified, readers won‚Äôt have access to the resource path, nor will anything have access to the user data directory.</li>
</ul>
</li>
<li>
<p><code>--self-contained</code>: Fix bug that caused everything to be made a data URI (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1033164197" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7635" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7635/hovercard" href="https://github.com/jgm/pandoc/issues/7635">#7635</a>, <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="916576672" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7367" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7367/hovercard" href="https://github.com/jgm/pandoc/issues/7367">#7367</a>). We only need to use data URIs in certain cases, but due to a bug they were being used always.</p>
</li>
<li>
<p>Pandoc will now fall back to latin1 encoding for inputs that can‚Äôt be read as UTF-8. This is what it did previously for content fetched from the web and not marked as to content type. It makes sense to do the same for local files. In this case a <code>NotUTF8Encoded</code> warning will be issued, indicating that pandoc is interpreting the input as latin1.</p>
</li>
<li>
<p>Markdown reader:</p>
<ul>
<li>Don‚Äôt parse links or bracketed spans as citations (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1030320106" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7632" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7632/hovercard" href="https://github.com/jgm/pandoc/issues/7632">#7632</a>). Previously pandoc would parse <code>[link to (@a)](url)</code> as a citation; similarly <code>[(@a)]{#ident}</code>. This is undesirable. One should be able to use example references in citations, and even if <code>@a</code> is not defined as an example reference, <code>[@a](url)</code> should be a link containing an author-in-text citation rather than a normal citation followed by literal <code>(url)</code>.</li>
<li>Fix interaction of <code>--strip-comments</code> and list parsing (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="977070330" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7521" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7521/hovercard" href="https://github.com/jgm/pandoc/issues/7521">#7521</a>). Use of <code>--strip-comments</code> was causing tight lists to be rendered as loose (as if the comment were a blank line).</li>
<li>Fix parsing bug for math in bracketed spans and links (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1025270065" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7623" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7623/hovercard" href="https://github.com/jgm/pandoc/issues/7623">#7623</a>). This affects math with unbalanced brackets (e.g.¬†<code>$(0,1]$</code>) inside links, images, bracketed spans.</li>
<li>Fix code blocks using <code>--preserve-tabs</code> (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="998666441" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7573" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7573/hovercard" href="https://github.com/jgm/pandoc/issues/7573">#7573</a>). Previously they did not behave as the equivalent input with spaces would.</li>
</ul>
</li>
<li>
<p>DocBook reader:</p>
<ul>
<li>Honor linenumbering attribute (Samuel Tardieu). The attribute DocBook <code>linenumbering="numbered"</code> on code blocks maps to the <code>numberLines</code> class internally.</li>
</ul>
</li>
<li>
<p>LaTeX reader:</p>
<ul>
<li>Implement siunitx v3 commands (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1020458870" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7614" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7614/hovercard" href="https://github.com/jgm/pandoc/issues/7614">#7614</a>). We support <code>\unit</code>, <code>\qty</code>, <code>\qtyrange</code>, and <code>\qtylist</code> as synonynms of <code>\si</code>, <code>\SI</code>, <code>\SIrange</code>, and <code>\SIlist</code>.</li>
<li>Properly handle <code>\^</code> followed by group closing (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1020878965" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7615" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7615/hovercard" href="https://github.com/jgm/pandoc/issues/7615">#7615</a>).</li>
<li>Recognize that <code>\vadjust</code> sometimes takes ‚Äúpre‚Äù (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="982649096" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7531" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7531/hovercard" href="https://github.com/jgm/pandoc/issues/7531">#7531</a>).</li>
<li>Ignore (and gobble parameters of) CSLReferences environment (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="982649096" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7531" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7531/hovercard" href="https://github.com/jgm/pandoc/issues/7531">#7531</a>). Otherwise we get the parameters as numbers in the output.</li>
<li>Restrict <code>\endinput</code> to current file (Simun Schuster).</li>
</ul>
</li>
<li>
<p>RST reader: handle escaped colons in reference definitions (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="995500024" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7568" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7568/hovercard" href="https://github.com/jgm/pandoc/issues/7568">#7568</a>).</p>
</li>
<li>
<p>HTML reader:</p>
<ul>
<li>Handle empty tbody element in table (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1005122964" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7589" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7589/hovercard" href="https://github.com/jgm/pandoc/issues/7589">#7589</a>).</li>
</ul>
</li>
<li>
<p>Ipynb reader (Kolen Cheung):</p>
<ul>
<li>Get cell output mime from <code>raw_mimetype</code> in addition to <code>format</code>. (<code>format</code> is what the spec calls for, but <code>raw_mimetype</code> is often used in practice; see <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="991738848" data-permission-text="Title is private" data-url="https://github.com/jupyter/nbformat/issues/229" data-hovercard-type="issue" data-hovercard-url="/jupyter/nbformat/issues/229/hovercard" href="https://github.com/jupyter/nbformat/issues/229">jupyter/nbformat#229</a>).</li>
<li>Add more formats that can be handled as ‚Äúraw‚Äù cells.</li>
<li>Fix mime type for <code>rst</code>.</li>
<li>Support <code>text/markdown</code>, which is now a supported mime type for raw output (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="992710724" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7561" data-hovercard-type="pull_request" data-hovercard-url="/jgm/pandoc/pull/7561/hovercard" href="https://github.com/jgm/pandoc/pull/7561">#7561</a>).</li>
</ul>
</li>
<li>
<p>RTF reader:</p>
<ul>
<li>Support <code>\binN</code> for binary image data.</li>
<li>If doc begins with { ‚Ä¶ } only parse its contents. Some documents seem to have non-RTF (e.g.¬†XML) material after the <code>{\rtf1 ... }</code> group.</li>
<li>Ignore <code>\pgdsc</code> group. Otherwise we get style names treated as test.</li>
<li>Better handling of <code>\*</code> and bookmarks. We now ensure that groups starting with <code>\*</code> never cause text to be added to the document. In addition, bookmarks now create a span between the start and end of the bookmark, rather than an empty span.</li>
</ul>
</li>
<li>
<p>Docx reader:</p>
<ul>
<li>Avoid blockquote when parent style has more indent (Milan Bracke). When a paragraph has an indentation different from the parent (named) style, it used to be considered a blockquote. But this only makes sense when the paragraph has more indentation. So this commit adds a check for the indentation of the parent style.</li>
<li>Fix handling of empty fields (Milan Bracke). Some fields only have an <code>instrText</code> and no content, Pandoc didn‚Äôt understand these, causing other fields to be misunderstood because it seemed like a field was still open when it wasn‚Äôt.</li>
<li>Implement PAGEREF fields (Milan Bracke). These fields, often used in tables of contents, can be a hyperlink.</li>
<li>Fix handling of nested fields (Milan Bracke). Fields delimited by <code>fldChar</code> elements can contain other fields. Before, the nested fields would be ignored, except for the end, which would be considered the end of the parent field.</li>
<li>Add placeholder for word diagram instead of just omitting it (Ezwal).</li>
</ul>
</li>
<li>
<p>Org reader:</p>
<ul>
<li>Don‚Äôt parse a list as first item in a list item (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="991987992" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7557" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7557/hovercard" href="https://github.com/jgm/pandoc/issues/7557">#7557</a>).</li>
<li>Allow an initial <code>:PROPERTIES:</code> drawer to add to metadata (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="976610621" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7520" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7520/hovercard" href="https://github.com/jgm/pandoc/issues/7520">#7520</a>).</li>
</ul>
</li>
<li>
<p>Docx writer:</p>
<ul>
<li>Make id used in <code>native_numbering</code> predictable (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="989836155" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7551" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7551/hovercard" href="https://github.com/jgm/pandoc/issues/7551">#7551</a>). If the image has the id IMAGEID, then we use the id ref_IMAGEID for the figure number. This allows one to create a filter that adds a figure number with figure name, e.g. <code>&lt;w:fldSimple w:instr=" REF ref_superfig "&gt;&lt;w:r&gt;&lt;w:t&gt;Figure X&lt;/w:t&gt; &lt;/w:r&gt;&lt;/w:fldSimple&gt;</code>. If an image lack an id, an id of the form <code>ref_fig1</code> is used.</li>
</ul>
</li>
<li>
<p>Ensure we have unique ids for <code>wp:docPr</code> and <code>pic:cNvPr</code> elements (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="981134819" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7527" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7527/hovercard" href="https://github.com/jgm/pandoc/issues/7527">#7527</a>, <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="972181901" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7503" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7503/hovercard" href="https://github.com/jgm/pandoc/issues/7503">#7503</a>).</p>
</li>
<li>
<p>Handle SVG images (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="273125162" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/4058" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/4058/hovercard" href="https://github.com/jgm/pandoc/issues/4058">#4058</a>). This change has several parts:</p>
<ul>
<li>In Text.Pandoc.App, if the writer is docx, we fill the media bag and attempt to convert any SVG images to PNG, adding these to the media bag. The PNG backups have the same filenames as the SVG images, but with an added .png extension. If the conversion cannot be done (e.g.¬†because rsvg-convert is not present), a warning is omitted.</li>
<li>In Text.Pandoc.Writers.Docx, we now use Word 2016‚Äôs syntax for including SVG images. If a PNG fallback is present in the media bag, we include a link to that too.</li>
</ul>
</li>
<li>
<p>Powerpoint writer (Emily Bourke):</p>
<ul>
<li>Add support for more layouts (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="383997177" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/5097" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/5097/hovercard" href="https://github.com/jgm/pandoc/issues/5097">#5097</a>). Up til now, four layouts were supported: ‚ÄúTitle Slide‚Äù (used for the automatically generated metadata slide), ‚ÄúSection Header‚Äù (used for headings above slide level), ‚ÄúTwo Column‚Äù (used when there‚Äôs a columns div), ‚ÄúTitle and Content‚Äù (used for all other slides). We now support three additional layouts: ‚ÄúComparison‚Äù, ‚ÄúContent with Caption‚Äù, and ‚ÄúBlank‚Äù. The manual describes the logic that determines which layout is used for a slide. Layouts may be customized in the reference doc.</li>
<li>Support specifying slide background images using a <code>background-image</code> attribute on the slide‚Äôs heading. Only the ‚Äústretch‚Äù mode is supported, and the background image is centred around the slide in the image‚Äôs larger axis, matching the observed default behaviour of PowerPoint.</li>
<li>Add support for incremental lists (through same methods as in other slide writers) (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="481630329" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/5689" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/5689/hovercard" href="https://github.com/jgm/pandoc/issues/5689">#5689</a>).</li>
<li>Copy embedded fonts from reference doc.</li>
<li>Include all themes in output archive.</li>
<li>Fix list level numbering (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="349239887" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/4828" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/4828/hovercard" href="https://github.com/jgm/pandoc/issues/4828">#4828</a>, <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="324691328" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/4663" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/4663/hovercard" href="https://github.com/jgm/pandoc/issues/4663">#4663</a>). In PowerPoint, the content of a top-level list is at the same level as the content of a top-level paragraph: the only difference is that a list style has been applied. Previously, the writer incremented the paragrap h level on each list, turning what should be top-level lists into second-level lists.</li>
<li>Line up list continuation paragraphs. This commit changes the <code>marL</code> and <code>indent</code> values used for plain paragraphs and numbered lists, and changes the spacing defined in the reference doc master for bulleted lists. For paragraphs, there is now a left-indent taken from the <code>otherStyle</code> in the master. For numbered lists, the number is positioned where the text would be if this were a plain paragraph, and the text is indented to the next level. This means that continuation paragraphs line up nicely with numbered lists. Existing reference docs may need to be modified so that <code>otherStyle</code> and <code>bodyStyle</code> indent levels match, for this feature to work with them.</li>
<li>Consolidate text runs when possible (jgm). This slims down the output files by avoiding unnecessary text run elements.</li>
<li>Support footers in the reference doc. There is one behaviour which may not be immediately obvious: if the reference doc specifies a fixed date (i.e.¬†not automatically updating), and there‚Äôs a date specified in the metadata for the document, the footer date is replaced by the metadata date.</li>
<li>Fix presentation rel numbering. Before now, the numbering of <code>rId</code>s was inconsistent when making the presentation XML and when making the presentation relationships XML.</li>
<li>Don‚Äôt add relationships unnecessarily. Before now, for any layouts added to the output from the default reference doc, the relationships were unconditionally added to the output. However, if there was already a layout in slideMaster1 at the same index then that results in duplicate relationships.</li>
<li>If slide level is 0, don‚Äôt insert a slide break between a heading and a following table, ‚Äúcolumns‚Äù div, or paragraph starting with an image.</li>
<li>Fix capitalisation of <code>notesMasterId</code>.</li>
<li>Restructure tests.</li>
</ul>
</li>
<li>
<p>Asciidoc writer:</p>
<ul>
<li>Translate numberLines attribute to <code>linesnum</code> switch (Samuel Tardieu).</li>
<li>Improve escaping for <code>--</code> in URLs (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="982096639" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7529" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7529/hovercard" href="https://github.com/jgm/pandoc/issues/7529">#7529</a>).</li>
</ul>
</li>
<li>
<p>LaTeX writer:</p>
<ul>
<li>Make babel use more idiomatic (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1014594014" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7604" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7604/hovercard" href="https://github.com/jgm/pandoc/issues/7604">#7604</a>, hseg). Use babel‚Äôs bidi implementation. Import babel languages individually instead of as package options. Move <code>header-includes</code> to after <code>babel</code> setup so it can be modified.</li>
<li>Use babel, not polyglossia, with xelatex. Previously polyglossia worked better with xelatex, but that is no longer the case, so we simplify the code so that babel is used with all latex engines. This involves a change to the default LaTeX template.</li>
</ul>
</li>
<li>
<p>Markdown writer:</p>
<ul>
<li>Avoid bad wraps at the Doc Text level. Previously we tried to do this at the Inline list level, but it makes more sense to intervene on breaking spaces at the Doc Text level.</li>
<li>Use <code>underline</code> class rather than <code>ul</code> for underline. This only affects output with <code>bracketed_spans</code> enabled. The markdown reader parses spans with either <code>.ul</code> or <code>.underline</code> as Underline elements, but we‚Äôre moving towards preferring the latter.</li>
</ul>
</li>
<li>
<p>RST writer:</p>
<ul>
<li>
<p>Properly handle anchors to ids with spaces or leading underscore (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1007145325" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7593" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7593/hovercard" href="https://github.com/jgm/pandoc/issues/7593">#7593</a>). In this cases we need the quoted form, e.g.</p>
<div class="snippet-clipboard-content position-relative overflow-auto" data-snippet-clipboard-copy-content=".. _`foo bar`:

.. _`_foo`:
"><pre><code>.. _`foo bar`:

.. _`_foo`:
</code></pre></div>
<p>Side note: rST will ‚Äúnormalize‚Äù these identifiers anyway, ignoring the underscore.</p>
</li>
</ul>
</li>
<li>
<p>HTML writer:</p>
<ul>
<li>Render <code>\ref</code> and <code>\eqref</code> as inline math, not display (see <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1005122964" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7589" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7589/hovercard" href="https://github.com/jgm/pandoc/issues/7589">#7589</a>).</li>
<li>Pass through <code>\ref</code> and <code>\eqref</code> if MathJax is used (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1003832820" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7587" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7587/hovercard" href="https://github.com/jgm/pandoc/issues/7587">#7587</a>).</li>
<li>Pass through inline math environments with KaTeX.</li>
<li>Support <code>--reference-location</code> for HTML output (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="952724358" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7461" data-hovercard-type="pull_request" data-hovercard-url="/jgm/pandoc/pull/7461/hovercard" href="https://github.com/jgm/pandoc/pull/7461">#7461</a>, Francesco Mazzoli).</li>
<li>Set ‚Äúhash‚Äù to True by default (for reveal.js) (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="998751296" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7574" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7574/hovercard" href="https://github.com/jgm/pandoc/issues/7574">#7574</a>). See <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="771603502" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/6968" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/6968/hovercard" href="https://github.com/jgm/pandoc/issues/6968">#6968</a> where the motivation for setting ‚Äúhash‚Äù to True is explained.</li>
</ul>
</li>
<li>
<p>Native writer: Use pretty-show to format native output (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1000375588" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7580" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7580/hovercard" href="https://github.com/jgm/pandoc/issues/7580">#7580</a>). Previously we used our own homespun formatting. But this produces over-long lines that aren‚Äôt ideal for diffs in tests. Performance is slower by about a factor of 10, but this isn‚Äôt really a problem because native isn‚Äôt suitable as a serialization format. (For serialization you should use json, because the reader is so much faster than native.)</p>
</li>
<li>
<p>Org writer:</p>
<ul>
<li>Don‚Äôt indent contents of code blocks. We previously indented them by two spaces, following a common convention. Since the convention is fading, and the indentation is inconvenient for copy/paste, we are discontinuing this practice.</li>
<li>Update list of supported source languages in org writer (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="431319978" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/5440" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/5440/hovercard" href="https://github.com/jgm/pandoc/issues/5440">#5440</a>).</li>
</ul>
</li>
<li>
<p>Ipynb writer (Kolen Cheung):</p>
<ul>
<li>Improve round trip identity for raw cell output. See <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="991738848" data-permission-text="Title is private" data-url="https://github.com/jupyter/nbformat/issues/229" data-hovercard-type="issue" data-hovercard-url="/jupyter/nbformat/issues/229/hovercard" href="https://github.com/jupyter/nbformat/issues/229">jupyter/nbformat#229</a>. The Jupyter ecosystem, including nbconvert, lab and notebook, deviated from their own spec in nbformat, where they used the key <code>raw_mimetype</code> instead of <code>format</code>. Moreover, the mime-type of rst used in Jupyter deviated from that suggested by <a href="https://docutils.sourceforge.io/FAQ.html" rel="nofollow">https://docutils.sourceforge.io/FAQ.html</a> and is defined as <code>text/restructuredtext</code> when chosen from ‚ÄúRaw NBConvert Format‚Äù in Jupyter. The new behavior should matche the real world usage better, hence improving the round-trip ‚Äúidentity‚Äù in raw-cell.</li>
<li>Add more formats that can be handled as ‚Äúraw‚Äù cells.</li>
</ul>
</li>
<li>
<p>EPUB writer:</p>
<ul>
<li>Add EPUB3 subject metadata (authority/term) (nuew). This adds the ability to specify EPUB 3 <code>authority</code> and <code>term</code> specific refinements to the <code>subject</code> tag. Specifying a plain <code>subject</code> tag in metadata will function as before.</li>
<li>Treat epub:type ‚Äúfrontispiece‚Äù as front matter (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1010998178" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7600" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7600/hovercard" href="https://github.com/jgm/pandoc/issues/7600">#7600</a>).</li>
</ul>
</li>
<li>
<p>reveal.js template: Fix line numbers in source code (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1032399509" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7634" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7634/hovercard" href="https://github.com/jgm/pandoc/issues/7634">#7634</a>). We need <code>overflow: visible</code> for these to work, and reveal‚Äôs default css disables this. So we re-enable it in the default template.</p>
</li>
<li>
<p>Text.Pandoc.Writers.Shared:</p>
<ul>
<li>Export <code>splitSentences</code> as a Doc Text transform [API change]. Use this in man/ms. We used to attempt automatic sentence splitting in man and ms output, since sentence-ending periods need to be followed by two spaces or a newline in these formats. But it‚Äôs difficult to do this reliably at the level of <code>[Inline]</code>.</li>
</ul>
</li>
<li>
<p>Text.Pandoc.Translations: small revisions for compatibility with aeson 2.</p>
</li>
<li>
<p>Don‚Äôt prepend <code>file://</code> to <code>--syntax-definition</code> on Windows (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="619702954" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/6374" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/6374/hovercard" href="https://github.com/jgm/pandoc/issues/6374">#6374</a>). This was a fix for a problem in skylighting, but this problem doesn‚Äôt exist now that we‚Äôve moved from HXT to xml-conduit.</p>
</li>
<li>
<p>Text.Pandoc.Extensions:</p>
<ul>
<li>Add <code>Ext_footnotes</code> to default <code>gfm</code> etxensions. Now <code>gfm</code> supports footnotes.</li>
<li>Alphabetize Extension constructors (also affects <code>--list-extensions</code>).</li>
</ul>
</li>
<li>
<p>Text.Pandoc.Citeproc.Util: Better implementation of <code>splitStrWhen</code>. Previously the citeproc code had two less efficient implementations.</p>
</li>
<li>
<p>Update documentation for definition_list extension (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1007322290" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7594" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7594/hovercard" href="https://github.com/jgm/pandoc/issues/7594">#7594</a>). In 2015, we relaxed indentation requirements for the first line of a definition (see commit <a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/jgm/pandoc/commit/d3544dc6f7a2386c4a68a85110f322b50332cfbe/hovercard" href="https://github.com/jgm/pandoc/commit/d3544dc6f7a2386c4a68a85110f322b50332cfbe"><tt>d3544dc</tt></a> and issue <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="68894810" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/2087" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/2087/hovercard" href="https://github.com/jgm/pandoc/issues/2087">#2087</a>), but the documnentation wasn‚Äôt updated to reflect the change.</p>
</li>
<li>
<p>Text.Pandoc.Citeproc.BibTeX: Fix expansion of special strings in series e.g.¬†<code>newseries</code> or <code>library</code> (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1005816613" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7591" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7591/hovercard" href="https://github.com/jgm/pandoc/issues/7591">#7591</a>). Expansion should not happen when these strings are protected in braces, or when they‚Äôre capitalized.</p>
</li>
<li>
<p>Text.Pandoc.Logging: add <code>NotUTF8Encoded</code> constructor to <code>LogMessage</code> [API change].</p>
</li>
<li>
<p>Text.Pandoc.App.FormatHeuristics: remove <code>.tei.xml</code> extension for TEI (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1030081187" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7630" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7630/hovercard" href="https://github.com/jgm/pandoc/issues/7630">#7630</a>). This never worked, because <code>takeExtension</code> only returns <code>.xml</code>. So it won‚Äôt be missed if we remove it.</p>
</li>
<li>
<p>Text.Pandoc.Image:</p>
<ul>
<li>Generalize <code>svgToPng</code> to MonadIO.</li>
<li><code>svgToPng</code>, change first parameter from WriterOptions to Int.</li>
</ul>
</li>
<li>
<p>Text.Pandoc.Class:</p>
<ul>
<li>Add <code>readStdinStrict</code> method to PandocMonad [API change].</li>
<li>Generalize type of <code>extractMedia</code> [API change]. It was uselessly restricted to PandocIO, instead of any instance of PandocMonad and MonadIO.</li>
</ul>
</li>
<li>
<p>Text.Pandoc.Class.PandocIO: derive MonadCatch, MonadThrow, MonadMask. This allows us to use <code>withTempDir</code> [API change].</p>
</li>
<li>
<p>Add module Text.Pandoc.Class.Sandbox, defining <code>sandbox</code>. Exported via Text.Pandoc.Class. [API change]</p>
</li>
<li>
<p>Text.Pandoc.Filter: Generalize type of <code>applyFilters</code> from PandocIO to any instance of MonadIO and PandocMonad [API change].</p>
</li>
<li>
<p>Text.Pandoc.PDF: generalize type of <code>makePDF</code>: instead of PandocIO, it can be used in any instance of PandocMonad, MonadIO, and MonadMask [API change].</p>
</li>
<li>
<p>Lua subsystem and custom writers: generalize types from PandocIO to any instance of PandocMonad and MonadIO [API change]. The type of <code>runLua</code> is now</p>
<div class="snippet-clipboard-content position-relative overflow-auto" data-snippet-clipboard-copy-content="(PandocMonad m, MonadIO m) =&gt;
LuaE PandocError a -&gt; m (Either PandocError a)
"><pre><code>(PandocMonad m, MonadIO m) =&gt;
LuaE PandocError a -&gt; m (Either PandocError a)
</code></pre></div>
<p>The change from <code>Lua</code> to <code>LuaE PandocError</code> is due to the switch to hslua-2.0; see next item.</p>
</li>
<li>
<p>Lua modules (Albert Krewinkel):</p>
<ul>
<li>Switch to hslua-2.0. The new HsLua version takes a somewhat different approach to marshalling and unmarshalling, relying less on typeclasses and more on specialized types. This allows for better performance and improved error messages. Furthermore, new abstractions allow to document the code and exposed functions.</li>
<li>Marshal Version values, Inline elements, Attr elements, and Pandoc elements as userdata.</li>
<li>Remove deprecated inline constructors <code>DoubleQuoted</code>, <code>SingleQuoted</code>, <code>DisplayMath</code>, and <code>InlineMath</code>.</li>
<li>Attr values are no longer normalized when assigned to an Inline element property.</li>
<li>It‚Äôs no longer possible to access parts of Inline elements via numerical indexes. E.g., <code>pandoc.Span('test')[2]</code> used to give <code>pandoc.Str 'test'</code>, but yields <code>nil</code> now. This was undocumented behavior not intended to be used in user scripts. Use named properties instead.</li>
<li>Accessing <code>.c</code> to get a JSON-like tuple of all components no longer works. This was undocumented behavior.</li>
<li>Only known properties can be set on an element value. Trying to set a different property will now raise an error.</li>
<li>Adds a new <code>pandoc.AttributeList()</code> constructor, which creates the associative attribute list that is used as the third component of <code>Attr</code> values. Values of this type can often be passed to constructors instead of <code>Attr</code> values.</li>
<li>Convert IOErrors to PandocErrors in <code>pandoc.pipe</code> function (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="978155958" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7523" data-hovercard-type="issue" data-hovercard-url="/jgm/pandoc/issues/7523/hovercard" href="https://github.com/jgm/pandoc/issues/7523">#7523</a>).</li>
</ul>
</li>
<li>
<p>Text.Pandoc.PDF: Previously we had to run <code>runIOorExplode</code> inside <code>withTempDir</code>. Now that PandocIO is an instance of MonadMask, this is no longer necessary.</p>
</li>
<li>
<p>Text.Pandoc.App:</p>
<ul>
<li>Reorganize to make it easier to limit IO in main loop. Previously we used liftIO fairly liberally. The code has been restructured to avoid this.</li>
<li>Move output-file writing out of PandocMonad action.</li>
</ul>
</li>
<li>
<p>Text.Pandoc.App.OutputSettings: Generalize some types so we can run this with any instance of PandocMonad and MonadIO, not just PandocIO.</p>
</li>
<li>
<p>Use <code>simpleFigure</code> builder in readers and <code>SimpleFigure</code> pattern synonym in writers (Aner Lucero).</p>
</li>
<li>
<p>Allow time 1.12.</p>
</li>
<li>
<p>Use skylighting-0.12, skylighting-core-0.12. This fixes highlighting issues with typescript, scala, and other syntaxes that include keyword lists from different syntaxes.</p>
</li>
<li>
<p>Use citeproc 0.6, commonmark 0.2.2.1, commonmark-extensions 0.2.2, texmath 0.12.3.2, ipynb 0.1.0.2. (These changes also allow building with aeson &gt;= 2.)</p>
</li>
<li>
<p>Require doclayout &gt;= 0.3.1.1. This fixes recognition of ‚Äúreal widths‚Äù of emoji characters, which is important for tabular layout.</p>
</li>
<li>
<p>Cut out over 100K of fat in epub test golden files.</p>
</li>
<li>
<p>Make <code>test/epub/wasteland.epub</code> valid.</p>
</li>
<li>
<p>Add missing <code>%</code> on some command tests. This prevented <code>--accept</code> from working properly.</p>
</li>
<li>
<p>Command tests: raise error if command doesn‚Äôt begin with <code>%</code>.</p>
</li>
<li>
<p>OOXML tests: use pretty-printed form to display diffs. Otherwise everything is on one line and the diff is uninformative.</p>
</li>
<li>
<p>Fix compareXML helper in Tests.Writers.OOXML. Given how it is used, we were getting ‚Äúmine‚Äù and ‚Äúgood‚Äù flipped in the test results.</p>
</li>
<li>
<p>MANUAL.txt:</p>
<ul>
<li>Clarify <code>attributes</code> extension support (William Lupton).</li>
<li>Document formats affected by <code>--reference-location</code>.</li>
<li>Document error code 25</li>
<li>Add some more info regarding <code>--slide-level=0</code> (Salim B).</li>
<li>Add more to security section of manual.</li>
<li>Mention support of <code>title-toc</code> (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="837246547" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7171" data-hovercard-type="pull_request" data-hovercard-url="/jgm/pandoc/pull/7171/hovercard" href="https://github.com/jgm/pandoc/pull/7171">#7171</a>, Christophe Dervieux).</li>
</ul>
</li>
<li>
<p>doc/lua-filters.md:</p>
<ul>
<li>Add missing type for Image title (Quinn).</li>
<li>Improve order of Image fields (Quinn).</li>
<li>Rephrase pandoc.path docs (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="988363095" data-permission-text="Title is private" data-url="https://github.com/jgm/pandoc/issues/7548" data-hovercard-type="pull_request" data-hovercard-url="/jgm/pandoc/pull/7548/hovercard" href="https://github.com/jgm/pandoc/pull/7548">#7548</a>, Quinn).</li>
<li>Do not leak working directory in TikZ filter (Jeroen de Haas).</li>
</ul>
</li>
</ul>
</details>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from assemblyscript: v0.19.18]]></title>
            <link>https://github.com/AssemblyScript/assemblyscript/releases/tag/v0.19.18</link>
            <guid>https://github.com/AssemblyScript/assemblyscript/releases/tag/v0.19.18</guid>
            <pubDate>Sat, 23 Oct 2021 14:49:44 GMT</pubDate>
            <content:encoded><![CDATA[<h3>New features</h3>
<ul>
<li>Make timeout and count optional for atomic.wait and atomic.notify (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1019101412" data-permission-text="Title is private" data-url="https://github.com/AssemblyScript/assemblyscript/issues/2093" data-hovercard-type="pull_request" data-hovercard-url="/AssemblyScript/assemblyscript/pull/2093/hovercard" href="https://github.com/AssemblyScript/assemblyscript/pull/2093">#2093</a>)</li>
</ul>
<h3>Bug fixes</h3>
<ul>
<li>Don't assume LHS of binary overload has a valid type (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1029289435" data-permission-text="Title is private" data-url="https://github.com/AssemblyScript/assemblyscript/issues/2098" data-hovercard-type="pull_request" data-hovercard-url="/AssemblyScript/assemblyscript/pull/2098/hovercard" href="https://github.com/AssemblyScript/assemblyscript/pull/2098">#2098</a>)</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from julia: v1.7.0-rc2]]></title>
            <link>https://github.com/JuliaLang/julia/releases/tag/v1.7.0-rc2</link>
            <guid>https://github.com/JuliaLang/julia/releases/tag/v1.7.0-rc2</guid>
            <pubDate>Sat, 23 Oct 2021 13:22:14 GMT</pubDate>
            <content:encoded><![CDATA[<p>This is the second release candidate for Julia v1.7.0.</p>]]></content:encoded>
        </item>
    </channel>
</rss>