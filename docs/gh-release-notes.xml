<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Release Notes</title>
        <link>https://akngs.github.io/feed-bundler/gh-release-notes</link>
        <description>GitHub Release Notes</description>
        <lastBuildDate>Tue, 26 Aug 2025 18:03:35 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <copyright>N/A</copyright>
        <item>
            <title><![CDATA[Release notes from next.js: v15.5.1]]></title>
            <link>https://github.com/vercel/next.js/releases/tag/v15.5.1</link>
            <guid>https://github.com/vercel/next.js/releases/tag/v15.5.1</guid>
            <pubDate>Tue, 26 Aug 2025 17:54:56 GMT</pubDate>
            <content:encoded><![CDATA[<p>v15.5.1</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from monero: Fluorine Fermi, Point Release 4.2]]></title>
            <link>https://github.com/monero-project/monero/releases/tag/v0.18.4.2</link>
            <guid>https://github.com/monero-project/monero/releases/tag/v0.18.4.2</guid>
            <pubDate>Tue, 26 Aug 2025 16:29:45 GMT</pubDate>
            <content:encoded><![CDATA[<h1>Overview</h1>
<p>This is the v0.18.4.2 release of the Monero software. This is a recommended release that fixes a privacy leak when using a malicious remote node.</p>
<p>Some highlights of this release are:</p>
<ul>
<li>Wallet: fix privacy leak with malicious remote node (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3274432326" data-permission-text="Title is private" data-url="https://github.com/monero-project/monero/issues/10015" data-hovercard-type="pull_request" data-hovercard-url="/monero-project/monero/pull/10015/hovercard" href="https://github.com/monero-project/monero/pull/10015">#10015</a>)</li>
<li>Daemon: more accurate connection count (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3335742830" data-permission-text="Title is private" data-url="https://github.com/monero-project/monero/issues/10047" data-hovercard-type="pull_request" data-hovercard-url="/monero-project/monero/pull/10047/hovercard" href="https://github.com/monero-project/monero/pull/10047">#10047</a>)</li>
<li>Minor bug fixes and improvements</li>
</ul>
<h1>Contributors for this Release</h1>
<p>This release was the direct result of 7 people who worked to put out 12 commits containing 39 new lines of code. We'd like to thank them very much for their time and effort. In no particular order, they are:</p>
<ul>
<li>tobtoht</li>
<li>cho-m</li>
<li>vtnerd</li>
<li>woodser</li>
<li>jeffro256</li>
<li>selsta</li>
<li>j-berman</li>
</ul>
<h1>Official Download Links</h1>
<p><a href="https://downloads.getmonero.org/cli/monero-win-x64-v0.18.4.2.zip" rel="nofollow">Windows, 64-bit</a><br>
<a href="https://downloads.getmonero.org/cli/monero-win-x86-v0.18.4.2.zip" rel="nofollow">Windows, 32-bit</a><br>
<a href="https://downloads.getmonero.org/cli/monero-mac-x64-v0.18.4.2.tar.bz2" rel="nofollow">macOS, Intel</a><br>
<a href="https://downloads.getmonero.org/cli/monero-mac-armv8-v0.18.4.2.tar.bz2" rel="nofollow">macOS, ARM</a><br>
<a href="https://downloads.getmonero.org/cli/monero-linux-x64-v0.18.4.2.tar.bz2" rel="nofollow">Linux, 64-bit</a><br>
<a href="https://downloads.getmonero.org/cli/monero-linux-x86-v0.18.4.2.tar.bz2" rel="nofollow">Linux, 32-bit</a><br>
<a href="https://downloads.getmonero.org/cli/monero-linux-armv7-v0.18.4.2.tar.bz2" rel="nofollow">Linux, armv7</a><br>
<a href="https://downloads.getmonero.org/cli/monero-linux-armv8-v0.18.4.2.tar.bz2" rel="nofollow">Linux, armv8</a><br>
<a href="https://downloads.getmonero.org/cli/monero-linux-riscv64-v0.18.4.2.tar.bz2" rel="nofollow">Linux, riscv64</a><br>
<a href="https://downloads.getmonero.org/cli/monero-android-armv7-v0.18.4.2.tar.bz2" rel="nofollow">Android, armv7</a><br>
<a href="https://downloads.getmonero.org/cli/monero-android-armv8-v0.18.4.2.tar.bz2" rel="nofollow">Android, armv8</a><br>
<a href="https://downloads.getmonero.org/cli/monero-freebsd-x64-v0.18.4.2.tar.bz2" rel="nofollow">FreeBSD, 64-bit</a></p>
<h1>Download Hashes</h1>
<p>If you would like to verify that you have downloaded the correct file, please use the following SHA256 hashes:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="monero-win-x64-v0.18.4.2.zip, 14dd5aa11308f106183dd7834aa200e74ce6f3497103973696b556e893a4fef2
monero-win-x86-v0.18.4.2.zip, 934d9dbeb06ff5610d2c96ebe34fa480e74f78eaeb3fa3e47d89b7961c9bc5e0
monero-mac-x64-v0.18.4.2.tar.bz2, b1b1b580320118d3b6eaa5575fdbd73cf4db90fcc025b7abf875c5e5b4e335c1
monero-mac-armv8-v0.18.4.2.tar.bz2, 9b98da6911b4769abef229c20e21f29d919b11db156965d6f139d2e1ad6625c2
monero-linux-x64-v0.18.4.2.tar.bz2, 41d023f2357244ea43ee0a74796f5705ce75ce7373a5865d4959fefa13ecab06
monero-linux-x86-v0.18.4.2.tar.bz2, 03e77a4836861a47430664fa703dd149a355b3b214bc400b04ed38eb064a3ef0
monero-linux-armv8-v0.18.4.2.tar.bz2, a39530054dac348b219f1048a24ca629da26990f72cf9c1f6b6853e3d8c39a79
monero-linux-armv7-v0.18.4.2.tar.bz2, ecb2577499a3b0901d731e11d462d3fadcd70095f3ab0def0c27ee64dc56b061
monero-linux-riscv64-v0.18.4.2.tar.bz2 18492ace80bf8ef2f44aa9a99b4f20adf00fd59c675a6a496211a720088d5d1a
monero-android-armv8-v0.18.4.2.tar.bz2, 3b248c3201f028205915403b4b2f173df0dd8bf47eeb268fd67a4661251469d3
monero-android-armv7-v0.18.4.2.tar.bz2, 6122f0bcaca12d5badd92002338847d16032f6d52d86155c203bcb67d4fe1518
monero-freebsd-x64-v0.18.4.2.tar.bz2, b4e2b7de80107a1b4613b878d8e2114244b3fb16397821d69baa72d9b0f8c8d5"><pre class="notranslate"><code>monero-win-x64-v0.18.4.2.zip, 14dd5aa11308f106183dd7834aa200e74ce6f3497103973696b556e893a4fef2
monero-win-x86-v0.18.4.2.zip, 934d9dbeb06ff5610d2c96ebe34fa480e74f78eaeb3fa3e47d89b7961c9bc5e0
monero-mac-x64-v0.18.4.2.tar.bz2, b1b1b580320118d3b6eaa5575fdbd73cf4db90fcc025b7abf875c5e5b4e335c1
monero-mac-armv8-v0.18.4.2.tar.bz2, 9b98da6911b4769abef229c20e21f29d919b11db156965d6f139d2e1ad6625c2
monero-linux-x64-v0.18.4.2.tar.bz2, 41d023f2357244ea43ee0a74796f5705ce75ce7373a5865d4959fefa13ecab06
monero-linux-x86-v0.18.4.2.tar.bz2, 03e77a4836861a47430664fa703dd149a355b3b214bc400b04ed38eb064a3ef0
monero-linux-armv8-v0.18.4.2.tar.bz2, a39530054dac348b219f1048a24ca629da26990f72cf9c1f6b6853e3d8c39a79
monero-linux-armv7-v0.18.4.2.tar.bz2, ecb2577499a3b0901d731e11d462d3fadcd70095f3ab0def0c27ee64dc56b061
monero-linux-riscv64-v0.18.4.2.tar.bz2 18492ace80bf8ef2f44aa9a99b4f20adf00fd59c675a6a496211a720088d5d1a
monero-android-armv8-v0.18.4.2.tar.bz2, 3b248c3201f028205915403b4b2f173df0dd8bf47eeb268fd67a4661251469d3
monero-android-armv7-v0.18.4.2.tar.bz2, 6122f0bcaca12d5badd92002338847d16032f6d52d86155c203bcb67d4fe1518
monero-freebsd-x64-v0.18.4.2.tar.bz2, b4e2b7de80107a1b4613b878d8e2114244b3fb16397821d69baa72d9b0f8c8d5
</code></pre></div>
<p>A GPG-signed list of the hashes is at <a href="https://getmonero.org/downloads/hashes.txt" rel="nofollow">https://getmonero.org/downloads/hashes.txt</a> and should be treated as canonical, with the signature checked against the appropriate GPG key in the source code (in /utils/gpg_keys). To ensure that the files you download are those originally posted by the maintainers, you should both check that the hashes of your files match those on the signed list, and that the signature on the list is valid.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from zed: collab-staging: thread view: Refine tool call UI (#36937)]]></title>
            <link>https://github.com/zed-industries/zed/releases/tag/collab-staging</link>
            <guid>https://github.com/zed-industries/zed/releases/tag/collab-staging</guid>
            <pubDate>Tue, 26 Aug 2025 15:55:40 GMT</pubDate>
            <content:encoded><![CDATA[<p>Release Notes:</p>
<ul>
<li>N/A</li>
</ul>
<hr>
<p>Co-authored-by: Bennet Bo Fenner <a href="mailto:bennetbo@gmx.de">bennetbo@gmx.de</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from qdrant: v1.15.4]]></title>
            <link>https://github.com/qdrant/qdrant/releases/tag/v1.15.4</link>
            <guid>https://github.com/qdrant/qdrant/releases/tag/v1.15.4</guid>
            <pubDate>Tue, 26 Aug 2025 15:08:05 GMT</pubDate>
            <content:encoded><![CDATA[<p>v1.15.4</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from zed: nightly: Revert "ai: Auto select user model when there's no default" (#36932)]]></title>
            <link>https://github.com/zed-industries/zed/releases/tag/nightly</link>
            <guid>https://github.com/zed-industries/zed/releases/tag/nightly</guid>
            <pubDate>Tue, 26 Aug 2025 13:55:09 GMT</pubDate>
            <content:encoded><![CDATA[<p>Reverts <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3343434468" data-permission-text="Title is private" data-url="https://github.com/zed-industries/zed/issues/36722" data-hovercard-type="pull_request" data-hovercard-url="/zed-industries/zed/pull/36722/hovercard" href="https://github.com/zed-industries/zed/pull/36722">#36722</a></p>
<p>Release Notes:</p>
<ul>
<li>N/A</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from cube: v1.3.59]]></title>
            <link>https://github.com/cube-js/cube/releases/tag/v1.3.59</link>
            <guid>https://github.com/cube-js/cube/releases/tag/v1.3.59</guid>
            <pubDate>Tue, 26 Aug 2025 12:39:35 GMT</pubDate>
            <content:encoded><![CDATA[<h2><a href="https://github.com/cube-js/cube/compare/v1.3.58...v1.3.59">1.3.59</a> (2025-08-26)</h2>
<h3>Bug Fixes</h3>
<ul>
<li><strong>cubesql:</strong> Merge subqueries with SQL push down (<a href="https://github.com/cube-js/cube/issues/9916" data-hovercard-type="pull_request" data-hovercard-url="/cube-js/cube/pull/9916/hovercard">#9916</a>) (<a href="https://github.com/cube-js/cube/commit/9a5597bfb555bc8f81f851b1b6866d159cf4a304">9a5597b</a>)</li>
<li><strong>redshift-driver:</strong> Use proper query for table column types that respects fetchColumnsByOrdinalPosition (<a href="https://github.com/cube-js/cube/issues/9915" data-hovercard-type="pull_request" data-hovercard-url="/cube-js/cube/pull/9915/hovercard">#9915</a>) (<a href="https://github.com/cube-js/cube/commit/2e97019b272ad6d991733e8fa8becdf248256f6c">2e97019</a>)</li>
<li><strong>schema-compiler:</strong> Fix incorrect backAlias members collection for FILTER_PARAMS members (<a href="https://github.com/cube-js/cube/issues/9919" data-hovercard-type="pull_request" data-hovercard-url="/cube-js/cube/pull/9919/hovercard">#9919</a>) (<a href="https://github.com/cube-js/cube/commit/91115d7344920ed13eb9ef1b9f522c9ee67fe8af">91115d7</a>)</li>
</ul>
<h3>Features</h3>
<ul>
<li><strong>cubesql:</strong> Report rewrite start/success events (<a href="https://github.com/cube-js/cube/issues/9917" data-hovercard-type="pull_request" data-hovercard-url="/cube-js/cube/pull/9917/hovercard">#9917</a>) (<a href="https://github.com/cube-js/cube/commit/7cc80b2e2c43ec401e95482fb9d8969ed53f458c">7cc80b2</a>)</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from vitest: v4.0.0-beta.9]]></title>
            <link>https://github.com/vitest-dev/vitest/releases/tag/v4.0.0-beta.9</link>
            <guid>https://github.com/vitest-dev/vitest/releases/tag/v4.0.0-beta.9</guid>
            <pubDate>Tue, 26 Aug 2025 09:56:09 GMT</pubDate>
            <content:encoded><![CDATA[<h3>   🚨 Breaking Changes</h3>
<ul>
<li>Remove <code>minWorkers</code> and set it automatically to 0 in non watch mode  -  by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/sheremet-va/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/sheremet-va">@sheremet-va</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3334450833" data-permission-text="Title is private" data-url="https://github.com/vitest-dev/vitest/issues/8454" data-hovercard-type="pull_request" data-hovercard-url="/vitest-dev/vitest/pull/8454/hovercard" href="https://github.com/vitest-dev/vitest/pull/8454">#8454</a> <a href="https://github.com/vitest-dev/vitest/commit/2c2d1d4ce"><samp>(2c2d1)</samp></a></li>
</ul>
<h3>   🚀 Features</h3>
<ul>
<li><strong>api</strong>: Add <code>getGlobalTestNamePattern</code> method  -  by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/sheremet-va/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/sheremet-va">@sheremet-va</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3324881675" data-permission-text="Title is private" data-url="https://github.com/vitest-dev/vitest/issues/8438" data-hovercard-type="pull_request" data-hovercard-url="/vitest-dev/vitest/pull/8438/hovercard" href="https://github.com/vitest-dev/vitest/pull/8438">#8438</a> <a href="https://github.com/vitest-dev/vitest/commit/bdb7067f1"><samp>(bdb70)</samp></a></li>
</ul>
<h3>   🐞 Bug Fixes</h3>
<ul>
<li><strong>browser</strong>:
<ul>
<li><code>locator.element()</code> returns <code>HTMLElement</code> or <code>SVGElement</code>  -  by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/sheremet-va/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/sheremet-va">@sheremet-va</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3325609691" data-permission-text="Title is private" data-url="https://github.com/vitest-dev/vitest/issues/8440" data-hovercard-type="pull_request" data-hovercard-url="/vitest-dev/vitest/pull/8440/hovercard" href="https://github.com/vitest-dev/vitest/pull/8440">#8440</a> <a href="https://github.com/vitest-dev/vitest/commit/c1ac15c6b"><samp>(c1ac1)</samp></a></li>
</ul>
</li>
<li><strong>coverage</strong>:
<ul>
<li>Handle query param based transforms correctly  -  by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/AriPerkkio/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/AriPerkkio">@AriPerkkio</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3307296572" data-permission-text="Title is private" data-url="https://github.com/vitest-dev/vitest/issues/8418" data-hovercard-type="pull_request" data-hovercard-url="/vitest-dev/vitest/pull/8418/hovercard" href="https://github.com/vitest-dev/vitest/pull/8418">#8418</a> <a href="https://github.com/vitest-dev/vitest/commit/a400a9d2a"><samp>(a400a)</samp></a></li>
<li>Enforce order of <code>vitest:coverage-transform</code> plugin  -  by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/AriPerkkio/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/AriPerkkio">@AriPerkkio</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3352470545" data-permission-text="Title is private" data-url="https://github.com/vitest-dev/vitest/issues/8477" data-hovercard-type="pull_request" data-hovercard-url="/vitest-dev/vitest/pull/8477/hovercard" href="https://github.com/vitest-dev/vitest/pull/8477">#8477</a> <a href="https://github.com/vitest-dev/vitest/commit/ff5170cff"><samp>(ff517)</samp></a></li>
</ul>
</li>
<li><strong>utils</strong>:
<ul>
<li>Remove ast export  -  by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/bluwy/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/bluwy">@bluwy</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3324195484" data-permission-text="Title is private" data-url="https://github.com/vitest-dev/vitest/issues/8435" data-hovercard-type="pull_request" data-hovercard-url="/vitest-dev/vitest/pull/8435/hovercard" href="https://github.com/vitest-dev/vitest/pull/8435">#8435</a> <a href="https://github.com/vitest-dev/vitest/commit/21622b5ae"><samp>(21622)</samp></a></li>
</ul>
</li>
</ul>
<h3>   🏎 Performance</h3>
<ul>
<li>Avoid spawning extra workers if no tests will run there  -  by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/sheremet-va/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/sheremet-va">@sheremet-va</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3330507470" data-permission-text="Title is private" data-url="https://github.com/vitest-dev/vitest/issues/8446" data-hovercard-type="pull_request" data-hovercard-url="/vitest-dev/vitest/pull/8446/hovercard" href="https://github.com/vitest-dev/vitest/pull/8446">#8446</a> <a href="https://github.com/vitest-dev/vitest/commit/3fb3e8036"><samp>(3fb3e)</samp></a></li>
<li>Don't set <code>process.title</code>  -  by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/sheremet-va/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/sheremet-va">@sheremet-va</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3333443487" data-permission-text="Title is private" data-url="https://github.com/vitest-dev/vitest/issues/8453" data-hovercard-type="pull_request" data-hovercard-url="/vitest-dev/vitest/pull/8453/hovercard" href="https://github.com/vitest-dev/vitest/pull/8453">#8453</a> <a href="https://github.com/vitest-dev/vitest/commit/0a7666323"><samp>(0a766)</samp></a></li>
<li>Remove chai as a direct dependency, keep it in <code>@vitest/expect</code>  -  by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/sheremet-va/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/sheremet-va">@sheremet-va</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3338364059" data-permission-text="Title is private" data-url="https://github.com/vitest-dev/vitest/issues/8461" data-hovercard-type="pull_request" data-hovercard-url="/vitest-dev/vitest/pull/8461/hovercard" href="https://github.com/vitest-dev/vitest/pull/8461">#8461</a> <a href="https://github.com/vitest-dev/vitest/commit/cc98c611f"><samp>(cc98c)</samp></a></li>
<li>Reduce the amount of dynamic imports  -  by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/sheremet-va/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/sheremet-va">@sheremet-va</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3338722061" data-permission-text="Title is private" data-url="https://github.com/vitest-dev/vitest/issues/8465" data-hovercard-type="pull_request" data-hovercard-url="/vitest-dev/vitest/pull/8465/hovercard" href="https://github.com/vitest-dev/vitest/pull/8465">#8465</a> <a href="https://github.com/vitest-dev/vitest/commit/db6cd73ba"><samp>(db6cd)</samp></a></li>
</ul>
<h5>    <a href="https://github.com/vitest-dev/vitest/compare/v4.0.0-beta.8...v4.0.0-beta.9">View changes on GitHub</a></h5>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from rxdb: 16.18.0]]></title>
            <link>https://github.com/pubkey/rxdb/releases/tag/16.18.0</link>
            <guid>https://github.com/pubkey/rxdb/releases/tag/16.18.0</guid>
            <pubDate>Tue, 26 Aug 2025 08:54:29 GMT</pubDate>
            <content:encoded><![CDATA[<p align="center">
            <a href="https://rxdb.info/" rel="nofollow">
                <img src="https://camo.githubusercontent.com/0a13927e97a70036284bed1ed0d6bef75b93afbe79ae8d0cb179b2179e27ea35/68747470733a2f2f727864622e696e666f2f66696c65732f6c6f676f2f727864625f6a6176617363726970745f64617461626173652e737667" width="380px" alt="JavaScript Database" data-canonical-src="https://rxdb.info/files/logo/rxdb_javascript_database.svg" style="max-width: 100%;">
            </a>
        </p>
<ul>
<li>FIX "when a push handler is interrupted mid-way by a reload, after the reload retry doesn't happen" <a href="https://discord.com/channels/969553741705539624/1059149217718861935/threads/1407063219062702111" rel="nofollow">via discord</a></li>
<li>FIX query hanging after local document inserted <a href="https://github.com/pubkey/rxdb/pull/7349" data-hovercard-type="pull_request" data-hovercard-url="/pubkey/rxdb/pull/7349/hovercard">#7349</a></li>
<li>FIX(sqlite-storage) query $or with null returns wrong results <a href="https://github.com/pubkey/rxdb/issues/7356" data-hovercard-type="issue" data-hovercard-url="/pubkey/rxdb/issues/7356/hovercard">#7356</a></li>
</ul>
<p><strong>NOTICE:</strong> An overview about all releases can be found <a href="https://github.com/pubkey/rxdb/blob/master/CHANGELOG.md">at the changelog</a></p>
<h3>Join RxDB:</h3>
<ul>
<li>💬 <a href="https://rxdb.info/chat" rel="nofollow">Join the RxDB Chat</a></li>
<li>⭐ <a href="https://github.com/pubkey/rxdb">Star the RxDB Repo</a></li>
<li>📰 <a href="https://rxdb.info/newsletter" rel="nofollow">Subscribe to the newsletter</a></li>
<li>🐦 <a href="https://twitter.com/intent/user?screen_name=rxdbjs" rel="nofollow">Follow at Twitter</a></li>
<li>🔗 <a href="https://www.linkedin.com/company/rxdb" rel="nofollow">Follow at LinkedIn</a></li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from neovim: Nvim development (prerelease) build]]></title>
            <link>https://github.com/neovim/neovim/releases/tag/nightly</link>
            <guid>https://github.com/neovim/neovim/releases/tag/nightly</guid>
            <pubDate>Tue, 26 Aug 2025 05:16:35 GMT</pubDate>
            <content:encoded><![CDATA[<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="NVIM v0.12.0-dev-1078+g088ba835ed
Build type: RelWithDebInfo
LuaJIT 2.1.1753364724"><pre class="notranslate"><code>NVIM v0.12.0-dev-1078+g088ba835ed
Build type: RelWithDebInfo
LuaJIT 2.1.1753364724
</code></pre></div>
<h2>Install</h2>
<h3>Windows</h3>
<h4>Zip</h4>
<ol>
<li>Download <strong>nvim-win64.zip</strong></li>
<li>Extract the zip</li>
<li>Run <code>nvim.exe</code> on your CLI of choice</li>
</ol>
<h4>MSI</h4>
<ol>
<li>Download <strong>nvim-win64.msi</strong></li>
<li>Run the MSI</li>
<li>Run <code>nvim.exe</code> on your CLI of choice</li>
</ol>
<p>Note: On Windows "Server" you may need to <a href="https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist?view=msvc-170" rel="nofollow">install vcruntime140.dll</a>.</p>
<h3>macOS (x86_64)</h3>
<ol>
<li>Download <strong>nvim-macos-x86_64.tar.gz</strong></li>
<li>Run <code>xattr -c ./nvim-macos-x86_64.tar.gz</code> (to avoid "unknown developer" warning)</li>
<li>Extract: <code>tar xzvf nvim-macos-x86_64.tar.gz</code></li>
<li>Run <code>./nvim-macos-x86_64/bin/nvim</code></li>
</ol>
<h3>macOS (arm64)</h3>
<ol>
<li>Download <strong>nvim-macos-arm64.tar.gz</strong></li>
<li>Run <code>xattr -c ./nvim-macos-arm64.tar.gz</code> (to avoid "unknown developer" warning)</li>
<li>Extract: <code>tar xzvf nvim-macos-arm64.tar.gz</code></li>
<li>Run <code>./nvim-macos-arm64/bin/nvim</code></li>
</ol>
<h3>Linux (x86_64)</h3>
<p>If your system does not have the required glibc version, try the (unsupported) <a href="https://github.com/neovim/neovim-releases">builds for older glibc</a>.</p>
<h4>AppImage</h4>
<ol>
<li>Download <strong>nvim-linux-x86_64.appimage</strong></li>
<li>Run <code>chmod u+x nvim-linux-x86_64.appimage &amp;&amp; ./nvim-linux-x86_64.appimage</code>
<ul>
<li>If your system does not have FUSE you can <a href="https://github.com/AppImage/AppImageKit/wiki/FUSE#type-2-appimage">extract the appimage</a>:
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="./nvim-linux-x86_64.appimage --appimage-extract
./squashfs-root/usr/bin/nvim"><pre class="notranslate"><code>./nvim-linux-x86_64.appimage --appimage-extract
./squashfs-root/usr/bin/nvim
</code></pre></div>
</li>
</ul>
</li>
</ol>
<h4>Tarball</h4>
<ol>
<li>Download <strong>nvim-linux-x86_64.tar.gz</strong></li>
<li>Extract: <code>tar xzvf nvim-linux-x86_64.tar.gz</code></li>
<li>Run <code>./nvim-linux-x86_64/bin/nvim</code></li>
</ol>
<h3>Linux (arm64)</h3>
<h4>AppImage</h4>
<ol>
<li>Download <strong>nvim-linux-arm64.appimage</strong></li>
<li>Run <code>chmod u+x nvim-linux-arm64.appimage &amp;&amp; ./nvim-linux-arm64.appimage</code>
<ul>
<li>If your system does not have FUSE you can <a href="https://github.com/AppImage/AppImageKit/wiki/FUSE#type-2-appimage">extract the appimage</a>:
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="./nvim-linux-arm64.appimage --appimage-extract
./squashfs-root/usr/bin/nvim"><pre class="notranslate"><code>./nvim-linux-arm64.appimage --appimage-extract
./squashfs-root/usr/bin/nvim
</code></pre></div>
</li>
</ul>
</li>
</ol>
<h4>Tarball</h4>
<ol>
<li>Download <strong>nvim-linux-arm64.tar.gz</strong></li>
<li>Extract: <code>tar xzvf nvim-linux-arm64.tar.gz</code></li>
<li>Run <code>./nvim-linux-arm64/bin/nvim</code></li>
</ol>
<h3>Other</h3>
<ul>
<li>Install by <a href="https://github.com/neovim/neovim/blob/master/INSTALL.md#install-from-package">package manager</a></li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from bootstrap: v5.3.8]]></title>
            <link>https://github.com/twbs/bootstrap/releases/tag/v5.3.8</link>
            <guid>https://github.com/twbs/bootstrap/releases/tag/v5.3.8</guid>
            <pubDate>Tue, 26 Aug 2025 02:04:48 GMT</pubDate>
            <content:encoded><![CDATA[<h2>What's Changed</h2>
<ul>
<li>Streamline release prep script by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/mdo/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/mdo">@mdo</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3138731798" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41539" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41539/hovercard" href="https://github.com/twbs/bootstrap/pull/41539">#41539</a></li>
<li>Docs: restore local dev port to 9001 by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/chalin/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/chalin">@chalin</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3144749441" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41545" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41545/hovercard" href="https://github.com/twbs/bootstrap/pull/41545">#41545</a></li>
<li>Docs: use Example shortcode instead of divs with only <code>.bd-example</code> class by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/julien-deramond/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/julien-deramond">@julien-deramond</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3158124065" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41556" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41556/hovercard" href="https://github.com/twbs/bootstrap/pull/41556">#41556</a></li>
<li>Docs: fix scss autorecompile in dev mode by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/MaxLardenois/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/MaxLardenois">@MaxLardenois</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3182767959" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41574" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41574/hovercard" href="https://github.com/twbs/bootstrap/pull/41574">#41574</a></li>
<li>Fix <code>color-contrast()</code> function for WCAG 2.1 compliance by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/julien-deramond/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/julien-deramond">@julien-deramond</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3197018570" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41585" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41585/hovercard" href="https://github.com/twbs/bootstrap/pull/41585">#41585</a></li>
<li>OSSF Scorecard by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/mdo/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/mdo">@mdo</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3179734523" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41571" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41571/hovercard" href="https://github.com/twbs/bootstrap/pull/41571">#41571</a></li>
<li>Workflows: Use SHA-1 for third-party actions by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/julien-deramond/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/julien-deramond">@julien-deramond</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3233291657" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41595" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41595/hovercard" href="https://github.com/twbs/bootstrap/pull/41595">#41595</a></li>
<li>Docs: unminify downloadable example HTML files by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/julien-deramond/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/julien-deramond">@julien-deramond</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3290503763" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41637" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41637/hovercard" href="https://github.com/twbs/bootstrap/pull/41637">#41637</a></li>
<li>Docs: Add tooltips to buttons when <code>&lt;Example&gt;</code> is used, not just <code>&lt;Code&gt;</code> by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/louismaximepiton/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/louismaximepiton">@louismaximepiton</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3191774584" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41582" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41582/hovercard" href="https://github.com/twbs/bootstrap/pull/41582">#41582</a></li>
<li>Set cursor pointer on input search cancel button by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/mdo/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/mdo">@mdo</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3292293676" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41639" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41639/hovercard" href="https://github.com/twbs/bootstrap/pull/41639">#41639</a></li>
<li>CSS: Prevent spinner distortion in flex containers with multiline content by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/julien-deramond/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/julien-deramond">@julien-deramond</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3307926216" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41654" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41654/hovercard" href="https://github.com/twbs/bootstrap/pull/41654">#41654</a></li>
<li>Migrate MyGet script to GH actions by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/supergibbs/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/supergibbs">@supergibbs</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3193903208" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41583" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41583/hovercard" href="https://github.com/twbs/bootstrap/pull/41583">#41583</a></li>
<li>Revert "Attempt to return focus explicitly to dropdown trigger" by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/mdo/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/mdo">@mdo</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3346930061" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41668" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41668/hovercard" href="https://github.com/twbs/bootstrap/pull/41668">#41668</a></li>
<li>docs: Minor range example code optimization by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/coliff/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/coliff">@coliff</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3341044343" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41665" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41665/hovercard" href="https://github.com/twbs/bootstrap/pull/41665">#41665</a></li>
<li>Remove Themes from docs by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/mdo/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/mdo">@mdo</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3353446567" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41671" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41671/hovercard" href="https://github.com/twbs/bootstrap/pull/41671">#41671</a></li>
<li>Release v5.3.8 by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/mdo/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/mdo">@mdo</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3352778102" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41669" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41669/hovercard" href="https://github.com/twbs/bootstrap/pull/41669">#41669</a></li>
</ul>
<h2>Dependencies</h2>
<ul>
<li>Build(deps-dev): Bump the development-dependencies group with 3 updates by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/julien-deramond/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/julien-deramond">@julien-deramond</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3138877412" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41540" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41540/hovercard" href="https://github.com/twbs/bootstrap/pull/41540">#41540</a></li>
<li>Build(deps-dev): Bump the development-dependencies group with 2 updates by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/julien-deramond/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/julien-deramond">@julien-deramond</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3143309550" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41544" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41544/hovercard" href="https://github.com/twbs/bootstrap/pull/41544">#41544</a></li>
<li>Build(deps-dev): Bump stylelint-config-twbs-bootstrap from 16.0.0 to 16.1.0 by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/julien-deramond/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/julien-deramond">@julien-deramond</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3145637146" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41546" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41546/hovercard" href="https://github.com/twbs/bootstrap/pull/41546">#41546</a></li>
<li>Build(deps-dev): Bump the development-dependencies group with 5 updates by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/julien-deramond/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/julien-deramond">@julien-deramond</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3153873014" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41552" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41552/hovercard" href="https://github.com/twbs/bootstrap/pull/41552">#41552</a></li>
<li>Build(deps-dev): Bump the development-dependencies group with 4 updates by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/julien-deramond/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/julien-deramond">@julien-deramond</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3160623675" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41560" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41560/hovercard" href="https://github.com/twbs/bootstrap/pull/41560">#41560</a></li>
<li>Build(deps-dev): Bump the development-dependencies group with 3 updates by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/julien-deramond/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/julien-deramond">@julien-deramond</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3169177937" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41566" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41566/hovercard" href="https://github.com/twbs/bootstrap/pull/41566">#41566</a></li>
<li>Build(deps): Bump actions/upload-artifact from 4.6.1 to 4.6.2 by <a class="user-mention notranslate" data-hovercard-type="organization" data-hovercard-url="/orgs/dependabot/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dependabot">@dependabot</a>[bot] in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3231488375" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41594" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41594/hovercard" href="https://github.com/twbs/bootstrap/pull/41594">#41594</a></li>
<li>Build(deps-dev): Bump the development-dependencies group with 4 updates by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/julien-deramond/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/julien-deramond">@julien-deramond</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3244112799" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41599" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41599/hovercard" href="https://github.com/twbs/bootstrap/pull/41599">#41599</a></li>
<li>Build(deps-dev): Bump the development-dependencies group with 2 updates by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/julien-deramond/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/julien-deramond">@julien-deramond</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3251292290" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41609" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41609/hovercard" href="https://github.com/twbs/bootstrap/pull/41609">#41609</a></li>
<li>Build(deps): Bump github/codeql-action from 3.29.2 to 3.29.3 by <a class="user-mention notranslate" data-hovercard-type="organization" data-hovercard-url="/orgs/dependabot/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dependabot">@dependabot</a>[bot] in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3251952496" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41611" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41611/hovercard" href="https://github.com/twbs/bootstrap/pull/41611">#41611</a></li>
<li>Build(deps): Bump streetsidesoftware/cspell-action from 7.1.1 to 7.1.2 by <a class="user-mention notranslate" data-hovercard-type="organization" data-hovercard-url="/orgs/dependabot/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dependabot">@dependabot</a>[bot] in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3251951815" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41610" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41610/hovercard" href="https://github.com/twbs/bootstrap/pull/41610">#41610</a></li>
<li>Build(deps-dev): Bump the development-dependencies group with 4 updates by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/julien-deramond/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/julien-deramond">@julien-deramond</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3270961445" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41621" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41621/hovercard" href="https://github.com/twbs/bootstrap/pull/41621">#41621</a></li>
<li>Build(deps): Bump streetsidesoftware/cspell-action from 7.1.2 to 7.2.0 by <a class="user-mention notranslate" data-hovercard-type="organization" data-hovercard-url="/orgs/dependabot/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dependabot">@dependabot</a>[bot] in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3272909553" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41625" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41625/hovercard" href="https://github.com/twbs/bootstrap/pull/41625">#41625</a></li>
<li>Build(deps): Bump actions-cool/issues-helper from 3.6.0 to 3.6.2 by <a class="user-mention notranslate" data-hovercard-type="organization" data-hovercard-url="/orgs/dependabot/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dependabot">@dependabot</a>[bot] in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3272908563" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41623" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41623/hovercard" href="https://github.com/twbs/bootstrap/pull/41623">#41623</a></li>
<li>Build(deps): Bump github/codeql-action from 3.29.3 to 3.29.4 by <a class="user-mention notranslate" data-hovercard-type="organization" data-hovercard-url="/orgs/dependabot/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dependabot">@dependabot</a>[bot] in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3272909265" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41624" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41624/hovercard" href="https://github.com/twbs/bootstrap/pull/41624">#41624</a></li>
<li>Build(deps-dev): Bump the development-dependencies group across 1 directory with 3 updates by <a class="user-mention notranslate" data-hovercard-type="organization" data-hovercard-url="/orgs/dependabot/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dependabot">@dependabot</a>[bot] in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3274261266" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41626" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41626/hovercard" href="https://github.com/twbs/bootstrap/pull/41626">#41626</a></li>
<li>Build(deps): Bump github/codeql-action from 3.29.4 to 3.29.5 by <a class="user-mention notranslate" data-hovercard-type="organization" data-hovercard-url="/orgs/dependabot/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dependabot">@dependabot</a>[bot] in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3292873590" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41640" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41640/hovercard" href="https://github.com/twbs/bootstrap/pull/41640">#41640</a></li>
<li>Build(deps): Bump tmp from 0.2.3 to 0.2.4 by <a class="user-mention notranslate" data-hovercard-type="organization" data-hovercard-url="/orgs/dependabot/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dependabot">@dependabot</a>[bot] in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3297429168" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41649" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41649/hovercard" href="https://github.com/twbs/bootstrap/pull/41649">#41649</a></li>
<li>Build(deps): Bump github/codeql-action from 3.29.7 to 3.29.8 by <a class="user-mention notranslate" data-hovercard-type="organization" data-hovercard-url="/orgs/dependabot/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dependabot">@dependabot</a>[bot] in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3315633536" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41657" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41657/hovercard" href="https://github.com/twbs/bootstrap/pull/41657">#41657</a></li>
<li>Build(deps): Bump actions/checkout from 4.2.2 to 5.0.0 by <a class="user-mention notranslate" data-hovercard-type="organization" data-hovercard-url="/orgs/dependabot/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dependabot">@dependabot</a>[bot] in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3315148227" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41655" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41655/hovercard" href="https://github.com/twbs/bootstrap/pull/41655">#41655</a></li>
<li>Build(deps): Bump github/codeql-action from 3.29.8 to 3.29.10 by <a class="user-mention notranslate" data-hovercard-type="organization" data-hovercard-url="/orgs/dependabot/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dependabot">@dependabot</a>[bot] in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3335049685" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41664" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41664/hovercard" href="https://github.com/twbs/bootstrap/pull/41664">#41664</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/chalin/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/chalin">@chalin</a> made their first contribution in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3144749441" data-permission-text="Title is private" data-url="https://github.com/twbs/bootstrap/issues/41545" data-hovercard-type="pull_request" data-hovercard-url="/twbs/bootstrap/pull/41545/hovercard" href="https://github.com/twbs/bootstrap/pull/41545">#41545</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a class="commit-link" href="https://github.com/twbs/bootstrap/compare/v5.3.7...v5.3.8"><tt>v5.3.7...v5.3.8</tt></a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from next.js: v15.5.1-canary.9]]></title>
            <link>https://github.com/vercel/next.js/releases/tag/v15.5.1-canary.9</link>
            <guid>https://github.com/vercel/next.js/releases/tag/v15.5.1-canary.9</guid>
            <pubDate>Tue, 26 Aug 2025 00:20:18 GMT</pubDate>
            <content:encoded><![CDATA[<h3>Core Changes</h3>
<ul>
<li>feat(build): add client param parsing support for PPR routes: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3319466146" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82621" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82621/hovercard" href="https://github.com/vercel/next.js/pull/82621">#82621</a></li>
</ul>
<h3>Credits</h3>
<p>Huge thanks to <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/wyattjoh/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/wyattjoh">@wyattjoh</a> for helping!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from selenium: Nightly]]></title>
            <link>https://github.com/SeleniumHQ/selenium/releases/tag/nightly</link>
            <guid>https://github.com/SeleniumHQ/selenium/releases/tag/nightly</guid>
            <pubDate>Tue, 26 Aug 2025 00:17:59 GMT</pubDate>
            <content:encoded><![CDATA[<h2>Commits</h2>
<ul>
<li><a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/SeleniumHQ/selenium/commit/ca3b7cf7b26fcc1a7ed69c2a9460add951922196/hovercard" href="https://github.com/SeleniumHQ/selenium/commit/ca3b7cf7b26fcc1a7ed69c2a9460add951922196"><tt>ca3b7cf</tt></a>: [py][bidi]: enable <code>history_updated</code> event test (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3344352349" data-permission-text="Title is private" data-url="https://github.com/SeleniumHQ/selenium/issues/16236" data-hovercard-type="pull_request" data-hovercard-url="/SeleniumHQ/selenium/pull/16236/hovercard" href="https://github.com/SeleniumHQ/selenium/pull/16236">#16236</a>) (Navin Chandra) <a href="https://github.com/SeleniumHQ/selenium/pull/16236" data-hovercard-type="pull_request" data-hovercard-url="/SeleniumHQ/selenium/pull/16236/hovercard">#16236</a></li>
<li><a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/SeleniumHQ/selenium/commit/58f2268a996f6bfd4f9916e4338fa8085db68cc5/hovercard" href="https://github.com/SeleniumHQ/selenium/commit/58f2268a996f6bfd4f9916e4338fa8085db68cc5"><tt>58f2268</tt></a>: [py] Bump ruff version for linting/formatting (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3352015973" data-permission-text="Title is private" data-url="https://github.com/SeleniumHQ/selenium/issues/16254" data-hovercard-type="pull_request" data-hovercard-url="/SeleniumHQ/selenium/pull/16254/hovercard" href="https://github.com/SeleniumHQ/selenium/pull/16254">#16254</a>) (Corey Goldberg) <a href="https://github.com/SeleniumHQ/selenium/pull/16254" data-hovercard-type="pull_request" data-hovercard-url="/SeleniumHQ/selenium/pull/16254/hovercard">#16254</a></li>
<li><a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/SeleniumHQ/selenium/commit/5d281ef05306e449774fca55a91dfffe95219075/hovercard" href="https://github.com/SeleniumHQ/selenium/commit/5d281ef05306e449774fca55a91dfffe95219075"><tt>5d281ef</tt></a>: [grid] Simplify node status response handling in Router (Viet Nguyen Duc)</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from next.js: v15.5.1-canary.8]]></title>
            <link>https://github.com/vercel/next.js/releases/tag/v15.5.1-canary.8</link>
            <guid>https://github.com/vercel/next.js/releases/tag/v15.5.1-canary.8</guid>
            <pubDate>Mon, 25 Aug 2025 23:36:23 GMT</pubDate>
            <content:encoded><![CDATA[<h3>Core Changes</h3>
<ul>
<li>Unhook WebSocket: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3344941199" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82931" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82931/hovercard" href="https://github.com/vercel/next.js/pull/82931">#82931</a></li>
<li>Destructure loadComponents where possible: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3350800404" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82986" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82986/hovercard" href="https://github.com/vercel/next.js/pull/82986">#82986</a></li>
<li>optimize server action refresh logic: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3324016423" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82674" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82674/hovercard" href="https://github.com/vercel/next.js/pull/82674">#82674</a></li>
</ul>
<h3>Misc Changes</h3>
<ul>
<li>Turbopack: more incremental all_server_paths: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3341958997" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82892" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82892/hovercard" href="https://github.com/vercel/next.js/pull/82892">#82892</a></li>
<li>Turbopack: throw large static metadata error earlier: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3345689066" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82939" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82939/hovercard" href="https://github.com/vercel/next.js/pull/82939">#82939</a></li>
<li>Turbopack: don't treat metadata routes as RSC: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3343235037" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82911" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82911/hovercard" href="https://github.com/vercel/next.js/pull/82911">#82911</a></li>
<li>Turbopack: remove blocking thread limit to avoid deadlocks: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3348132573" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82961" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82961/hovercard" href="https://github.com/vercel/next.js/pull/82961">#82961</a></li>
<li>Update 07-fetching-data.mdx: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3339970824" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82862" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82862/hovercard" href="https://github.com/vercel/next.js/pull/82862">#82862</a></li>
<li>Turbopack: fix race condition in unit test: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3350976247" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82989" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82989/hovercard" href="https://github.com/vercel/next.js/pull/82989">#82989</a></li>
<li>Turbopack: support pattern into exports field: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3332051043" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82757" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82757/hovercard" href="https://github.com/vercel/next.js/pull/82757">#82757</a></li>
<li>Turbopack: fix NFT tracing of sharp 0.34: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3290125833" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82340" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82340/hovercard" href="https://github.com/vercel/next.js/pull/82340">#82340</a></li>
<li>Turbopack: skip db lookups on the initial build: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3296366945" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82405" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82405/hovercard" href="https://github.com/vercel/next.js/pull/82405">#82405</a></li>
<li>Fetch tag before reset for create-release-branch: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3352421874" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/83006" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/83006/hovercard" href="https://github.com/vercel/next.js/pull/83006">#83006</a></li>
<li>Update Rspack development test manifest: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3350697734" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82984" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82984/hovercard" href="https://github.com/vercel/next.js/pull/82984">#82984</a></li>
<li>Update Rspack production test manifest: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3350697705" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82983" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82983/hovercard" href="https://github.com/vercel/next.js/pull/82983">#82983</a></li>
<li>Ensure tags are fetched for release branch: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3352854870" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/83012" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/83012/hovercard" href="https://github.com/vercel/next.js/pull/83012">#83012</a></li>
<li>Turbopack: prefetch restoring of task dependencies: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3348130828" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82960" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82960/hovercard" href="https://github.com/vercel/next.js/pull/82960">#82960</a></li>
<li>Turbopack: add ffmpeg-static NFT test: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3350764693" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82985" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82985/hovercard" href="https://github.com/vercel/next.js/pull/82985">#82985</a></li>
<li>temporarily disable flaky deploy test: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3353409593" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/83032" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/83032/hovercard" href="https://github.com/vercel/next.js/pull/83032">#83032</a></li>
<li>fix: add '.next/types/**/*.ts' to the pages router TSConfig: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3353338547" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/83029" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/83029/hovercard" href="https://github.com/vercel/next.js/pull/83029">#83029</a></li>
</ul>
<h3>Credits</h3>
<p>Huge thanks to <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/unstubbable/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/unstubbable">@unstubbable</a>, <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/sokra/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/sokra">@sokra</a>, <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/mischnic/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/mischnic">@mischnic</a>, <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/sleekLancelot/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/sleekLancelot">@sleekLancelot</a>, <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/ijjk/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/ijjk">@ijjk</a>, <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/vercel-release-bot/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/vercel-release-bot">@vercel-release-bot</a>, <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/timneutkens/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/timneutkens">@timneutkens</a>, <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/ztanner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/ztanner">@ztanner</a>, and <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/bgub/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/bgub">@bgub</a> for helping!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from code-server: v4.103.2]]></title>
            <link>https://github.com/coder/code-server/releases/tag/v4.103.2</link>
            <guid>https://github.com/coder/code-server/releases/tag/v4.103.2</guid>
            <pubDate>Mon, 25 Aug 2025 23:30:54 GMT</pubDate>
            <content:encoded><![CDATA[<p>Code v1.103.2</p>
<h3>Changed</h3>
<ul>
<li>Update to Code 1.103.2.</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from kit: @sveltejs/adapter-cloudflare@7.2.3]]></title>
            <link>https://github.com/sveltejs/kit/releases/tag/%40sveltejs%2Fadapter-cloudflare%407.2.3</link>
            <guid>https://github.com/sveltejs/kit/releases/tag/%40sveltejs%2Fadapter-cloudflare%407.2.3</guid>
            <pubDate>Mon, 25 Aug 2025 22:12:40 GMT</pubDate>
            <content:encoded><![CDATA[<h3>Patch Changes</h3>
<ul>
<li>fix: improve the error message when <code>read(...)</code> fails (<a href="https://github.com/sveltejs/kit/pull/14306" data-hovercard-type="pull_request" data-hovercard-url="/sveltejs/kit/pull/14306/hovercard">#14306</a>)</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from kit: @sveltejs/adapter-netlify@5.2.3]]></title>
            <link>https://github.com/sveltejs/kit/releases/tag/%40sveltejs%2Fadapter-netlify%405.2.3</link>
            <guid>https://github.com/sveltejs/kit/releases/tag/%40sveltejs%2Fadapter-netlify%405.2.3</guid>
            <pubDate>Mon, 25 Aug 2025 22:12:37 GMT</pubDate>
            <content:encoded><![CDATA[<h3>Patch Changes</h3>
<ul>
<li>fix: improve the error message when <code>read(...)</code> fails from an edge function (<a href="https://github.com/sveltejs/kit/pull/14306" data-hovercard-type="pull_request" data-hovercard-url="/sveltejs/kit/pull/14306/hovercard">#14306</a>)</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from kitty: Nightly builds]]></title>
            <link>https://github.com/kovidgoyal/kitty/releases/tag/nightly</link>
            <guid>https://github.com/kovidgoyal/kitty/releases/tag/nightly</guid>
            <pubDate>Mon, 25 Aug 2025 21:29:42 GMT</pubDate>
            <content:encoded><![CDATA[<p>Nightly release, generated on: 2025-08-25 21:29:42 UTC from commit: <a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/kovidgoyal/kitty/commit/518e06cfa46da410ac69575d91ca5382c9ada402/hovercard" href="https://github.com/kovidgoyal/kitty/commit/518e06cfa46da410ac69575d91ca5382c9ada402"><tt>518e06c</tt></a>. For how to install nightly builds, see: <a href="https://sw.kovidgoyal.net/kitty/binary/#customizing-the-installation" rel="nofollow">https://sw.kovidgoyal.net/kitty/binary/#customizing-the-installation</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from zed: v0.201.4-pre]]></title>
            <link>https://github.com/zed-industries/zed/releases/tag/v0.201.4-pre</link>
            <guid>https://github.com/zed-industries/zed/releases/tag/v0.201.4-pre</guid>
            <pubDate>Mon, 25 Aug 2025 21:21:12 GMT</pubDate>
            <content:encoded><![CDATA[<ul>
<li>Agent Panel: The fetch tool now requires confirmation. (<a href="https://github.com/zed-industries/zed/pull/36881" data-hovercard-type="pull_request" data-hovercard-url="/zed-industries/zed/pull/36881/hovercard">#36881</a>)</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from curl: rc-8_16_0-2]]></title>
            <link>https://github.com/curl/curl/releases/tag/rc-8_16_0-2</link>
            <guid>https://github.com/curl/curl/releases/tag/rc-8_16_0-2</guid>
            <pubDate>Mon, 25 Aug 2025 20:53:39 GMT</pubDate>
            <content:encoded><![CDATA[<p>8.16.0-rc2</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from genkit: Genkit Go v0.7.0]]></title>
            <link>https://github.com/firebase/genkit/releases/tag/go%2Fv0.7.0</link>
            <guid>https://github.com/firebase/genkit/releases/tag/go%2Fv0.7.0</guid>
            <pubDate>Mon, 25 Aug 2025 20:42:26 GMT</pubDate>
            <content:encoded><![CDATA[<h2>What's Changed</h2>
<ul>
<li>feat(go): add custom configs for all primitives by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/sahdev77/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/sahdev77">@sahdev77</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3046139210" data-permission-text="Title is private" data-url="https://github.com/firebase/genkit/issues/2883" data-hovercard-type="pull_request" data-hovercard-url="/firebase/genkit/pull/2883/hovercard" href="https://github.com/firebase/genkit/pull/2883">#2883</a></li>
<li>refactor(go/plugins/compat_oai)!: use OpenAI API config by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/hugoaguirre/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/hugoaguirre">@hugoaguirre</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3204131736" data-permission-text="Title is private" data-url="https://github.com/firebase/genkit/issues/3163" data-hovercard-type="pull_request" data-hovercard-url="/firebase/genkit/pull/3163/hovercard" href="https://github.com/firebase/genkit/pull/3163">#3163</a></li>
<li>feat(go/plugins/compat_oai): Add media parts support by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/hugoaguirre/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/hugoaguirre">@hugoaguirre</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3230466561" data-permission-text="Title is private" data-url="https://github.com/firebase/genkit/issues/3224" data-hovercard-type="pull_request" data-hovercard-url="/firebase/genkit/pull/3224/hovercard" href="https://github.com/firebase/genkit/pull/3224">#3224</a></li>
<li>fix(go): exclude reasoning part when return value from Text() function by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/jcooky/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/jcooky">@jcooky</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3208008159" data-permission-text="Title is private" data-url="https://github.com/firebase/genkit/issues/3165" data-hovercard-type="pull_request" data-hovercard-url="/firebase/genkit/pull/3165/hovercard" href="https://github.com/firebase/genkit/pull/3165">#3165</a></li>
<li>chore(go): add text-to-speech samples by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/hugoaguirre/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/hugoaguirre">@hugoaguirre</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3246618875" data-permission-text="Title is private" data-url="https://github.com/firebase/genkit/issues/3253" data-hovercard-type="pull_request" data-hovercard-url="/firebase/genkit/pull/3253/hovercard" href="https://github.com/firebase/genkit/pull/3253">#3253</a></li>
<li>fix(go): Fixed type assertions on LookupPlugin by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/gregfurman/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/gregfurman">@gregfurman</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3279828991" data-permission-text="Title is private" data-url="https://github.com/firebase/genkit/issues/3355" data-hovercard-type="pull_request" data-hovercard-url="/firebase/genkit/pull/3355/hovercard" href="https://github.com/firebase/genkit/pull/3355">#3355</a></li>
<li>fix(go/plugins/compat-oai): Pass tool call ID if available by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/kingsleyzhong/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/kingsleyzhong">@kingsleyzhong</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3243141184" data-permission-text="Title is private" data-url="https://github.com/firebase/genkit/issues/3248" data-hovercard-type="pull_request" data-hovercard-url="/firebase/genkit/pull/3248/hovercard" href="https://github.com/firebase/genkit/pull/3248">#3248</a></li>
<li>breaking(go): Refactored primitives APIs to be consistent by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/apascal07/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/apascal07">@apascal07</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3314137547" data-permission-text="Title is private" data-url="https://github.com/firebase/genkit/issues/3403" data-hovercard-type="pull_request" data-hovercard-url="/firebase/genkit/pull/3403/hovercard" href="https://github.com/firebase/genkit/pull/3403">#3403</a></li>
<li>feat(go): Add support for genkit resources by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/huangjeff5/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/huangjeff5">@huangjeff5</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3274221703" data-permission-text="Title is private" data-url="https://github.com/firebase/genkit/issues/3342" data-hovercard-type="pull_request" data-hovercard-url="/firebase/genkit/pull/3342/hovercard" href="https://github.com/firebase/genkit/pull/3342">#3342</a></li>
<li>breaking(go): refactored plugins, detached primitives from registry, refactored types by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/apascal07/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/apascal07">@apascal07</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3339044598" data-permission-text="Title is private" data-url="https://github.com/firebase/genkit/issues/3462" data-hovercard-type="pull_request" data-hovercard-url="/firebase/genkit/pull/3462/hovercard" href="https://github.com/firebase/genkit/pull/3462">#3462</a></li>
<li>breaking(go): changed <code>Evaluate()</code> to take in refs by <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/apascal07/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/apascal07">@apascal07</a> in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3352325332" data-permission-text="Title is private" data-url="https://github.com/firebase/genkit/issues/3475" data-hovercard-type="pull_request" data-hovercard-url="/firebase/genkit/pull/3475/hovercard" href="https://github.com/firebase/genkit/pull/3475">#3475</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/gregfurman/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/gregfurman">@gregfurman</a> made their first contribution in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3279828991" data-permission-text="Title is private" data-url="https://github.com/firebase/genkit/issues/3355" data-hovercard-type="pull_request" data-hovercard-url="/firebase/genkit/pull/3355/hovercard" href="https://github.com/firebase/genkit/pull/3355">#3355</a></li>
<li><a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/kingsleyzhong/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/kingsleyzhong">@kingsleyzhong</a> made their first contribution in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3243141184" data-permission-text="Title is private" data-url="https://github.com/firebase/genkit/issues/3248" data-hovercard-type="pull_request" data-hovercard-url="/firebase/genkit/pull/3248/hovercard" href="https://github.com/firebase/genkit/pull/3248">#3248</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a class="commit-link" href="https://github.com/firebase/genkit/compare/go/v0.6.2...go/v0.7.0"><tt>go/v0.6.2...go/v0.7.0</tt></a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from apollo-client: @apollo/client@4.0.1]]></title>
            <link>https://github.com/apollographql/apollo-client/releases/tag/%40apollo%2Fclient%404.0.1</link>
            <guid>https://github.com/apollographql/apollo-client/releases/tag/%40apollo%2Fclient%404.0.1</guid>
            <pubDate>Mon, 25 Aug 2025 18:46:33 GMT</pubDate>
            <content:encoded><![CDATA[<h3>Patch Changes</h3>
<ul>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12876" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12876/hovercard">#12876</a> <a href="https://github.com/apollographql/apollo-client/commit/b00f231e5f10a23178cf7a2c69a4e13cd959ab45"><code>b00f231</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - Fix CJS build output for <code>invariantErrorCodes</code></p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12866" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12866/hovercard">#12866</a> <a href="https://github.com/apollographql/apollo-client/commit/0d1614a9dfca2b1bcf4ea40095cc9018d6314532"><code>0d1614a</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Export <code>isNetworkStatusInFlight</code> from <code>@apollo/client/utilities</code>. Add <code>isNetworkStatusSettled</code> to <code>@apollo/client/utilities</code> and re-export it from <code>@apollo/client</code> with a deprecation.</p>
</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from apollo-client: @apollo/client-codemod-migrate-3-to-4@1.0.1]]></title>
            <link>https://github.com/apollographql/apollo-client/releases/tag/%40apollo%2Fclient-codemod-migrate-3-to-4%401.0.1</link>
            <guid>https://github.com/apollographql/apollo-client/releases/tag/%40apollo%2Fclient-codemod-migrate-3-to-4%401.0.1</guid>
            <pubDate>Mon, 25 Aug 2025 18:46:30 GMT</pubDate>
            <content:encoded><![CDATA[<h3>Patch Changes</h3>
<ul>
<li><a href="https://github.com/apollographql/apollo-client/pull/12866" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12866/hovercard">#12866</a> <a href="https://github.com/apollographql/apollo-client/commit/0d1614a9dfca2b1bcf4ea40095cc9018d6314532"><code>0d1614a</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Export <code>isNetworkStatusInFlight</code> from <code>@apollo/client/utilities</code>. Add <code>isNetworkStatusSettled</code> to <code>@apollo/client/utilities</code> and re-export it from <code>@apollo/client</code> with a deprecation.</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from aws-cli: 1.42.17]]></title>
            <link>https://github.com/aws/aws-cli/releases/tag/1.42.17</link>
            <guid>https://github.com/aws/aws-cli/releases/tag/1.42.17</guid>
            <pubDate>Mon, 25 Aug 2025 18:24:01 GMT</pubDate>
            <content:encoded><![CDATA[<p>Tagging 1.42.17 release.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from aws-cli: 2.28.17]]></title>
            <link>https://github.com/aws/aws-cli/releases/tag/2.28.17</link>
            <guid>https://github.com/aws/aws-cli/releases/tag/2.28.17</guid>
            <pubDate>Mon, 25 Aug 2025 18:21:39 GMT</pubDate>
            <content:encoded><![CDATA[<p>Tagging 2.28.17 release.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from flutter: 3.36.0-0.2.pre: Prepare hotfixes for `3.36.X` (#174380)]]></title>
            <link>https://github.com/flutter/flutter/releases/tag/3.36.0-0.2.pre</link>
            <guid>https://github.com/flutter/flutter/releases/tag/3.36.0-0.2.pre</guid>
            <pubDate>Mon, 25 Aug 2025 17:21:35 GMT</pubDate>
            <content:encoded><![CDATA[<p>... just an <code>engine.version</code> is needed (today).</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from flutter: Prepare to publish `3.35.2` (#174377)]]></title>
            <link>https://github.com/flutter/flutter/releases/tag/3.35.2</link>
            <guid>https://github.com/flutter/flutter/releases/tag/3.35.2</guid>
            <pubDate>Mon, 25 Aug 2025 17:21:35 GMT</pubDate>
            <content:encoded><![CDATA[<p>... more <code>CHANGELOG.md</code> updates, another bump to <code>engine.revision</code>.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from apollo-client: @apollo/client@4.0.0]]></title>
            <link>https://github.com/apollographql/apollo-client/releases/tag/%40apollo%2Fclient%404.0.0</link>
            <guid>https://github.com/apollographql/apollo-client/releases/tag/%40apollo%2Fclient%404.0.0</guid>
            <pubDate>Mon, 25 Aug 2025 16:21:13 GMT</pubDate>
            <content:encoded><![CDATA[<h1>Apollo Client 4.0 Release Notes</h1>
<p>Apollo Client 4.0 delivers a more modern, efficient, and type-safe GraphQL client experience through various architectural improvements and API refinements. This release focuses on developer experience, bundle size optimization, and framework flexibility.</p>
<h2>Key Improvements</h2>
<h3>🎯 Framework-Agnostic Core</h3>
<p>Apollo Client 4.0 separates React functionality from the core library, making <code>@apollo/client</code> truly framework-agnostic. React exports now live in <code>@apollo/client/react</code>, allowing developers to use Apollo Client with any JavaScript framework without React dependencies.</p>
<h3>📦 Smaller Bundle Sizes</h3>
<ul>
<li><strong>Opt-in Local State Management</strong>: The <code>@client</code> directive functionality is now opt-in via the <code>LocalState</code> class, reducing bundle size when not using local state</li>
<li><strong>Modern Build Target</strong>: Transpiled to target <code>since 2023, node &gt;= 20, not dead</code>, leveraging modern JavaScript features for better performance</li>
<li><strong>Improved Tree-Shaking</strong>: Proper <code>exports</code> field in package.json enables better dead code elimination</li>
</ul>
<h3>💥 Unified Error Handling</h3>
<p>Apollo Client 4.0 completely reimagines error handling for better clarity and debugging:</p>
<ul>
<li><code>ApolloError</code> removed in favor of specific error classes</li>
<li>Unification of errors to a single <code>error</code> property</li>
<li>Network errors now respect <code>errorPolicy</code> settings</li>
<li>External errors passed through without wrapping</li>
<li>New, more granular error classes with static <code>.is()</code> methods for robust type narrowing</li>
</ul>
<h3>🔧 Enhanced TypeScript Support</h3>
<ul>
<li><strong>Namespaced Types</strong>: Types are now colocated with their APIs (e.g., <code>useQuery.Options</code> instead of <code>QueryHookOptions</code>)</li>
<li><strong>Precise Return Types</strong>: Return types accurately reflect the options passed (e.g., <code>returnPartialData</code> makes <code>data</code> type <code>DeepPartial&lt;TData&gt;</code>)</li>
<li><strong>Stricter Type Safety</strong>: Required variables are now enforced more consistently throughout the client</li>
<li><strong>New <code>dataState</code> Property</strong>: Enables accurate type narrowing of query results</li>
<li><strong>Module Augmentation</strong>: Custom context types via declaration merging instead of fragile generics</li>
<li><strong>Customizable Type Implementations</strong>: Select types can now be customized to provide your own type implementation to seamlessly integrate with external tools such as GraphQL Codegen or <code>gql.tada</code></li>
</ul>
<h3>⚡ Modern Observable Implementation</h3>
<p>Apollo Client 4.0 migrates from <code>zen-observable</code> to <strong>RxJS</strong>, providing the industry-standard Observable implementation backed by a rich ecosystem of utilities.</p>
<h2>Major Features</h2>
<h3>Unified Error Handling</h3>
<p>Apollo Client 4.0 completely reimagines error handling for better clarity and debugging:</p>
<p><strong>Key Changes:</strong></p>
<ul>
<li><code>ApolloError</code> removed in favor of specific error classes</li>
<li>Network errors now respect <code>errorPolicy</code> settings</li>
<li>External errors passed through without wrapping</li>
<li>New error classes with static <code>.is()</code> methods for type checking</li>
</ul>
<p><strong>Error Classes:</strong></p>
<ul>
<li><code>CombinedGraphQLErrors</code> - GraphQL errors from the server</li>
<li><code>ServerError</code> - Non-GraphQL server errors</li>
<li><code>ServerParseError</code> - Server response parsing errors</li>
<li><code>UnconventionalError</code> - Wrapper for non-error thrown values</li>
<li><code>LinkError</code> - Errors from the link chain (via <code>.is()</code> check)</li>
</ul>
<p><strong>Migration Example:</strong></p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="// Apollo Client 3
if (error instanceof ApolloError) {
  console.log(error.graphQLErrors);
  console.log(error.networkError);
}

// Apollo Client 4
import { CombinedGraphQLErrors } from &quot;@apollo/client&quot;;

if (CombinedGraphQLErrors.is(error)) {
  console.log(error.errors); // GraphQL errors
} else if (error) {
  console.log(error.message); // Other errors
}"><pre><span class="pl-c">// Apollo Client 3</span>
<span class="pl-k">if</span> <span class="pl-kos">(</span><span class="pl-s1">error</span> <span class="pl-k">instanceof</span> <span class="pl-v">ApolloError</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
  <span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s1">error</span><span class="pl-kos">.</span><span class="pl-c1">graphQLErrors</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
  <span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s1">error</span><span class="pl-kos">.</span><span class="pl-c1">networkError</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-kos">}</span>

<span class="pl-c">// Apollo Client 4</span>
<span class="pl-k">import</span> <span class="pl-kos">{</span> <span class="pl-v">CombinedGraphQLErrors</span> <span class="pl-kos">}</span> <span class="pl-k">from</span> <span class="pl-s">"@apollo/client"</span><span class="pl-kos">;</span>

<span class="pl-k">if</span> <span class="pl-kos">(</span><span class="pl-v">CombinedGraphQLErrors</span><span class="pl-kos">.</span><span class="pl-en">is</span><span class="pl-kos">(</span><span class="pl-s1">error</span><span class="pl-kos">)</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
  <span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s1">error</span><span class="pl-kos">.</span><span class="pl-c1">errors</span><span class="pl-kos">)</span><span class="pl-kos">;</span> <span class="pl-c">// GraphQL errors</span>
<span class="pl-kos">}</span> <span class="pl-k">else</span> <span class="pl-k">if</span> <span class="pl-kos">(</span><span class="pl-s1">error</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
  <span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s1">error</span><span class="pl-kos">.</span><span class="pl-c1">message</span><span class="pl-kos">)</span><span class="pl-kos">;</span> <span class="pl-c">// Other errors</span>
<span class="pl-kos">}</span></pre></div>
<h3>The <code>dataState</code> Property</h3>
<p>A new property that clearly indicates the completeness of query results:</p>
<p><strong>Values:</strong></p>
<ul>
<li><code>empty</code> - No data available (<code>data</code> is <code>undefined</code>)</li>
<li><code>partial</code> - Incomplete data from cache when <code>returnPartialData</code> is <code>true</code></li>
<li><code>streaming</code> - Incomplete data from a deferred query still streaming</li>
<li><code>complete</code> - Fully satisfied query result</li>
</ul>
<p><strong>Benefits:</strong></p>
<ul>
<li>Accurate TypeScript type narrowing</li>
<li>Clear loading state distinction</li>
<li>Better handling of partial results</li>
</ul>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="const { data, dataState } = useQuery(MY_QUERY);

if (dataState === &quot;complete&quot;) {
  // TypeScript knows data is fully populated
  console.log(data.allFields);
} else if (dataState === &quot;partial&quot;) {
  // TypeScript knows data might be missing fields
  console.log(data?.someField);
}"><pre><span class="pl-k">const</span> <span class="pl-kos">{</span> data<span class="pl-kos">,</span> dataState <span class="pl-kos">}</span> <span class="pl-c1">=</span> <span class="pl-en">useQuery</span><span class="pl-kos">(</span><span class="pl-c1">MY_QUERY</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

<span class="pl-k">if</span> <span class="pl-kos">(</span><span class="pl-s1">dataState</span> <span class="pl-c1">===</span> <span class="pl-s">"complete"</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
  <span class="pl-c">// TypeScript knows data is fully populated</span>
  <span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s1">data</span><span class="pl-kos">.</span><span class="pl-c1">allFields</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-kos">}</span> <span class="pl-k">else</span> <span class="pl-k">if</span> <span class="pl-kos">(</span><span class="pl-s1">dataState</span> <span class="pl-c1">===</span> <span class="pl-s">"partial"</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
  <span class="pl-c">// TypeScript knows data might be missing fields</span>
  <span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s1">data</span><span class="pl-kos">?.</span><span class="pl-c1">someField</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-kos">}</span></pre></div>
<h3>Pluggable Incremental Delivery (<code>@defer</code> Support)</h3>
<p>Apollo Client 4.0 makes incremental delivery configurable and future-proof:</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import { Defer20220824Handler } from &quot;@apollo/client/incremental&quot;;

const client = new ApolloClient({
  // ...
  incrementalHandler: new Defer20220824Handler(),
});"><pre><span class="pl-k">import</span> <span class="pl-kos">{</span> <span class="pl-v">Defer20220824Handler</span> <span class="pl-kos">}</span> <span class="pl-k">from</span> <span class="pl-s">"@apollo/client/incremental"</span><span class="pl-kos">;</span>

<span class="pl-k">const</span> <span class="pl-s1">client</span> <span class="pl-c1">=</span> <span class="pl-k">new</span> <span class="pl-v">ApolloClient</span><span class="pl-kos">(</span><span class="pl-kos">{</span>
  <span class="pl-c">// ...</span>
  <span class="pl-c1">incrementalHandler</span>: <span class="pl-k">new</span> <span class="pl-v">Defer20220824Handler</span><span class="pl-kos">(</span><span class="pl-kos">)</span><span class="pl-kos">,</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span></pre></div>
<p><strong>Available Handlers:</strong></p>
<ul>
<li><code>NotImplementedHandler</code> - Default, throws if <code>@defer</code> is used</li>
<li><code>Defer20220824Handler</code> - Apollo Router format support (also aliased as <code>GraphQL17Alpha2Handler</code>)</li>
</ul>
<h3>Local State Management Improvements</h3>
<p>Local state is now opt-in via the <code>LocalState</code> class:</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import { LocalState } from &quot;@apollo/client/local-state&quot;;

const client = new ApolloClient({
  cache,
  localState: new LocalState({
    resolvers: {
      Query: {
        myField: () =&gt; &quot;Hello World&quot;,
      },
    },
  }),
});"><pre><span class="pl-k">import</span> <span class="pl-kos">{</span> <span class="pl-v">LocalState</span> <span class="pl-kos">}</span> <span class="pl-k">from</span> <span class="pl-s">"@apollo/client/local-state"</span><span class="pl-kos">;</span>

<span class="pl-k">const</span> <span class="pl-s1">client</span> <span class="pl-c1">=</span> <span class="pl-k">new</span> <span class="pl-v">ApolloClient</span><span class="pl-kos">(</span><span class="pl-kos">{</span>
  cache<span class="pl-kos">,</span>
  <span class="pl-c1">localState</span>: <span class="pl-k">new</span> <span class="pl-v">LocalState</span><span class="pl-kos">(</span><span class="pl-kos">{</span>
    <span class="pl-c1">resolvers</span>: <span class="pl-kos">{</span>
      <span class="pl-c1">Query</span>: <span class="pl-kos">{</span>
        <span class="pl-en">myField</span>: <span class="pl-kos">(</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-s">"Hello World"</span><span class="pl-kos">,</span>
      <span class="pl-kos">}</span><span class="pl-kos">,</span>
    <span class="pl-kos">}</span><span class="pl-kos">,</span>
  <span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">,</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span></pre></div>
<p><strong>Resolver Context Changes:</strong></p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="// Apollo Client 3
const resolver = (parent, args, context, info) =&gt; {
  const { cache } = context;
};

// Apollo Client 4
const resolver = (parent, args, context, info) =&gt; {
  const { client, requestContext, phase } = context;
  const cache = client.cache;
};"><pre><span class="pl-c">// Apollo Client 3</span>
<span class="pl-k">const</span> <span class="pl-en">resolver</span> <span class="pl-c1">=</span> <span class="pl-kos">(</span><span class="pl-s1">parent</span><span class="pl-kos">,</span> <span class="pl-s1">args</span><span class="pl-kos">,</span> <span class="pl-s1">context</span><span class="pl-kos">,</span> <span class="pl-s1">info</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
  <span class="pl-k">const</span> <span class="pl-kos">{</span> cache <span class="pl-kos">}</span> <span class="pl-c1">=</span> <span class="pl-s1">context</span><span class="pl-kos">;</span>
<span class="pl-kos">}</span><span class="pl-kos">;</span>

<span class="pl-c">// Apollo Client 4</span>
<span class="pl-k">const</span> <span class="pl-en">resolver</span> <span class="pl-c1">=</span> <span class="pl-kos">(</span><span class="pl-s1">parent</span><span class="pl-kos">,</span> <span class="pl-s1">args</span><span class="pl-kos">,</span> <span class="pl-s1">context</span><span class="pl-kos">,</span> <span class="pl-s1">info</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
  <span class="pl-k">const</span> <span class="pl-kos">{</span> client<span class="pl-kos">,</span> requestContext<span class="pl-kos">,</span> phase <span class="pl-kos">}</span> <span class="pl-c1">=</span> <span class="pl-s1">context</span><span class="pl-kos">;</span>
  <span class="pl-k">const</span> <span class="pl-s1">cache</span> <span class="pl-c1">=</span> <span class="pl-s1">client</span><span class="pl-kos">.</span><span class="pl-c1">cache</span><span class="pl-kos">;</span>
<span class="pl-kos">}</span><span class="pl-kos">;</span></pre></div>
<h2>React-Specific Improvements</h2>
<h3>More Predictable Hooks</h3>
<p><strong><code>useLazyQuery</code> Overhaul:</strong></p>
<ul>
<li>No longer accepts <code>variables</code> or <code>context</code> options (pass to <code>execute</code> instead)</li>
<li><code>execute</code> function only accepts <code>variables</code> and <code>context</code></li>
<li>Cannot be called during render or SSR</li>
<li>Automatic cancellation of in-flight queries when new ones start</li>
</ul>
<p><strong><code>useMutation</code> Changes:</strong></p>
<ul>
<li>Removed <code>ignoreResults</code> option - use <code>client.mutate</code> directly for fire-and-forget mutations</li>
</ul>
<p><strong><code>useQuery</code> Changes:</strong></p>
<ul>
<li><code>notifyOnNetworkStatusChange</code> now defaults to <code>true</code></li>
<li>Removed deprecated <code>onCompleted</code> and <code>onError</code> callbacks</li>
</ul>
<h3>New SSR API</h3>
<p>The new <code>prerenderStatic</code> API replaces deprecated SSR functions:</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import { prerenderStatic } from &quot;@apollo/client/react/ssr&quot;;

// Works with React 19's prerender APIs
const html = await prerenderStatic(&lt;App /&gt;, {
  client,
});"><pre><span class="pl-k">import</span> <span class="pl-kos">{</span> <span class="pl-s1">prerenderStatic</span> <span class="pl-kos">}</span> <span class="pl-k">from</span> <span class="pl-s">"@apollo/client/react/ssr"</span><span class="pl-kos">;</span>

<span class="pl-c">// Works with React 19's prerender APIs</span>
<span class="pl-k">const</span> <span class="pl-s1">html</span> <span class="pl-c1">=</span> <span class="pl-k">await</span> <span class="pl-en">prerenderStatic</span><span class="pl-kos">(</span><span class="pl-c1">&lt;</span><span class="pl-smi">App</span><span class="pl-c1"></span> <span class="pl-c1">/</span><span class="pl-s">&gt;</span><span class="pl-s">,</span><span class="pl-s"> </span><span class="pl-kos">{</span>
  <span class="pl-s1">client</span><span class="pl-kos">,</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span></pre></div>
<h3>React Compiler Support</h3>
<p>Pre-compiled React hooks optimized by the React Compiler:</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="// Use compiled hooks for potential performance improvements
import { useQuery } from &quot;@apollo/client/react/compiled&quot;;"><pre><span class="pl-c">// Use compiled hooks for potential performance improvements</span>
<span class="pl-k">import</span> <span class="pl-kos">{</span> <span class="pl-s1">useQuery</span> <span class="pl-kos">}</span> <span class="pl-k">from</span> <span class="pl-s">"@apollo/client/react/compiled"</span><span class="pl-kos">;</span></pre></div>
<p>The compiled hooks are built with React Compiler v19.1.0-rc.2 and include a runtime polyfill for compatibility with React 17+.</p>
<h2>Link System Evolution</h2>
<h3>All Links Now Classes</h3>
<p>Migration from creator functions to classes:</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="// Apollo Client 3
import { createHttpLink, setContext } from &quot;@apollo/client&quot;;
const httpLink = createHttpLink({ uri: &quot;/graphql&quot; });
const authLink = setContext((operation, prevContext) =&gt; {
  /*...*/
});

// Apollo Client 4
import { HttpLink, SetContextLink } from &quot;@apollo/client&quot;;
const httpLink = new HttpLink({ uri: &quot;/graphql&quot; });
const authLink = new SetContextLink((prevContext, operation) =&gt; {
  /*...*/
});"><pre><span class="pl-c">// Apollo Client 3</span>
<span class="pl-k">import</span> <span class="pl-kos">{</span> <span class="pl-s1">createHttpLink</span><span class="pl-kos">,</span> <span class="pl-s1">setContext</span> <span class="pl-kos">}</span> <span class="pl-k">from</span> <span class="pl-s">"@apollo/client"</span><span class="pl-kos">;</span>
<span class="pl-k">const</span> <span class="pl-s1">httpLink</span> <span class="pl-c1">=</span> <span class="pl-en">createHttpLink</span><span class="pl-kos">(</span><span class="pl-kos">{</span> <span class="pl-c1">uri</span>: <span class="pl-s">"/graphql"</span> <span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-k">const</span> <span class="pl-s1">authLink</span> <span class="pl-c1">=</span> <span class="pl-en">setContext</span><span class="pl-kos">(</span><span class="pl-kos">(</span><span class="pl-s1">operation</span><span class="pl-kos">,</span> <span class="pl-s1">prevContext</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
  <span class="pl-c">/*...*/</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

<span class="pl-c">// Apollo Client 4</span>
<span class="pl-k">import</span> <span class="pl-kos">{</span> <span class="pl-v">HttpLink</span><span class="pl-kos">,</span> <span class="pl-v">SetContextLink</span> <span class="pl-kos">}</span> <span class="pl-k">from</span> <span class="pl-s">"@apollo/client"</span><span class="pl-kos">;</span>
<span class="pl-k">const</span> <span class="pl-s1">httpLink</span> <span class="pl-c1">=</span> <span class="pl-k">new</span> <span class="pl-v">HttpLink</span><span class="pl-kos">(</span><span class="pl-kos">{</span> <span class="pl-c1">uri</span>: <span class="pl-s">"/graphql"</span> <span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-k">const</span> <span class="pl-s1">authLink</span> <span class="pl-c1">=</span> <span class="pl-k">new</span> <span class="pl-v">SetContextLink</span><span class="pl-kos">(</span><span class="pl-kos">(</span><span class="pl-s1">prevContext</span><span class="pl-kos">,</span> <span class="pl-s1">operation</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
  <span class="pl-c">/*...*/</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span></pre></div>
<h3>ErrorLink Changes</h3>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="// Apollo Client 3
onError(({ graphQLErrors, networkError }) =&gt; {
  // Handle errors separately
});

// Apollo Client 4
new ErrorLink(({ error }) =&gt; {
  if (CombinedGraphQLErrors.is(error)) {
    // Handle GraphQL errors
  } else if (error) {
    // Handle other errors
  }
});"><pre><span class="pl-c">// Apollo Client 3</span>
<span class="pl-en">onError</span><span class="pl-kos">(</span><span class="pl-kos">(</span><span class="pl-kos">{</span> graphQLErrors<span class="pl-kos">,</span> networkError <span class="pl-kos">}</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
  <span class="pl-c">// Handle errors separately</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

<span class="pl-c">// Apollo Client 4</span>
<span class="pl-k">new</span> <span class="pl-v">ErrorLink</span><span class="pl-kos">(</span><span class="pl-kos">(</span><span class="pl-kos">{</span> error <span class="pl-kos">}</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
  <span class="pl-k">if</span> <span class="pl-kos">(</span><span class="pl-v">CombinedGraphQLErrors</span><span class="pl-kos">.</span><span class="pl-en">is</span><span class="pl-kos">(</span><span class="pl-s1">error</span><span class="pl-kos">)</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
    <span class="pl-c">// Handle GraphQL errors</span>
  <span class="pl-kos">}</span> <span class="pl-k">else</span> <span class="pl-k">if</span> <span class="pl-kos">(</span><span class="pl-s1">error</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
    <span class="pl-c">// Handle other errors</span>
  <span class="pl-kos">}</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span></pre></div>
<h2>Migration Tools</h2>
<h3>Automated Codemod</h3>
<p>Apollo Client 4.0 provides a comprehensive codemod to automate migration:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="# Basic usage
npx @apollo/client-codemod-migrate-3-to-4 src

# TypeScript projects (run separately)
npx @apollo/client-codemod-migrate-3-to-4 --parser ts --extensions ts src
npx @apollo/client-codemod-migrate-3-to-4 --parser tsx --extensions tsx src"><pre><span class="pl-c"><span class="pl-c">#</span> Basic usage</span>
npx @apollo/client-codemod-migrate-3-to-4 src

<span class="pl-c"><span class="pl-c">#</span> TypeScript projects (run separately)</span>
npx @apollo/client-codemod-migrate-3-to-4 --parser ts --extensions ts src
npx @apollo/client-codemod-migrate-3-to-4 --parser tsx --extensions tsx src</pre></div>
<p>The codemod handles:</p>
<ol>
<li><strong>Import updates</strong> - Moves React imports to <code>@apollo/client/react</code></li>
<li><strong>Type migrations</strong> - Updates types to new namespaced locations</li>
<li><strong>Link updates</strong> - Converts creator functions to classes</li>
<li><strong>Removed exports</strong> - Moves to <code>@apollo/client/v4-migration</code> with migration instructions</li>
</ol>
<h2>Breaking Changes Summary</h2>
<h3>Installation</h3>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="# RxJS is now a peer dependency
npm install @apollo/client graphql rxjs"><pre><span class="pl-c"><span class="pl-c">#</span> RxJS is now a peer dependency</span>
npm install @apollo/client graphql rxjs</pre></div>
<h3>ApolloClient Constructor</h3>
<ul>
<li><code>link</code> option is now required (no more implicit <code>HttpLink</code> creation)</li>
<li><code>uri</code>, <code>headers</code>, <code>credentials</code> removed - use <code>HttpLink</code> directly</li>
<li><code>name</code> and <code>version</code> moved to <code>clientAwareness</code> option</li>
<li><code>resolvers</code> moved to <code>LocalState</code> constructor</li>
<li><code>connectToDevTools</code> replaced with <code>devtools.enabled</code></li>
<li><code>disableNetworkFetches</code> renamed to <code>prioritizeCacheValues</code></li>
</ul>
<h3>Type System</h3>
<ul>
<li>Removed <code>TContext</code> and <code>TCacheShape</code> generics</li>
<li>Types moved to namespaces (see migration guide for full list)</li>
<li>Custom context via module augmentation</li>
</ul>
<h3>Observable Changes</h3>
<ul>
<li>Requires calling <code>.pipe()</code> for transformations</li>
<li>Use RxJS operators instead of method chaining</li>
</ul>
<h3>Testing</h3>
<ul>
<li><code>MockedProvider</code> now has realistic delays by default (20-50ms)</li>
<li><code>createMockClient</code> removed - use <code>MockLink</code> directly</li>
</ul>
<h2>Performance &amp; Build Improvements</h2>
<ul>
<li><strong>Modern JavaScript</strong>: No downlevel transpilation for modern features</li>
<li><strong>No Polyfills</strong>: Cleaner bundles, bring your own if needed</li>
<li><strong>Development Mode</strong>: Controlled via export conditions, not global <code>__DEV__</code></li>
<li><strong>ESM Support</strong>: Proper <code>exports</code> field for better module resolution</li>
<li><strong>Source Maps</strong>: Fixed and improved for better debugging</li>
</ul>
<h2>Deprecations &amp; Removals</h2>
<h3>Removed Packages/Exports</h3>
<ul>
<li>React render prop components (<code>@apollo/client/react/components</code>)</li>
<li>Higher-order components (<code>@apollo/client/react/hoc</code>)</li>
<li><code>@apollo/client/react/parser</code></li>
<li><code>@apollo/client/utilities/globals</code></li>
</ul>
<h2>Upgrade Path</h2>
<ol>
<li><strong>Update to Apollo Client 3.14</strong> first for deprecation warnings</li>
<li><strong>Install peer dependencies</strong>: <code>npm install rxjs</code></li>
<li><strong>Run the codemod</strong> to automate import and type updates</li>
<li><strong>Update ApolloClient initialization</strong> (explicit <code>HttpLink</code>, <code>LocalState</code> if needed)</li>
<li><strong>Review error handling</strong> - update to use new error classes</li>
<li><strong>Test thoroughly</strong> - especially SSR, error handling, and local state</li>
</ol>
<h2>Resources</h2>
<ul>
<li><a href="https://www.apollographql.com/docs/react/migrating/apollo-client-4-migration" rel="nofollow">Migration Guide</a></li>
<li><a href="https://github.com/apollographql/apollo-client/blob/main/CHANGELOG.md">Changelog</a></li>
</ul>
<h2>Acknowledgments</h2>
<p>Apollo Client 4.0 represents years of community feedback and contributions. Thank you to all our contributors, early adopters, and the entire GraphQL community for making this release possible.</p>
<details>
<summary>
<h3>Major Changes</h3>
</summary>
<ul>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12644" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12644/hovercard">#12644</a> <a href="https://github.com/apollographql/apollo-client/commit/fe2f005c34913ae082b96a807dc240e2785d50bd"><code>fe2f005</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Replace the <code>result</code> property on <code>ServerError</code> with <code>bodyText</code>. <code>bodyText</code> is set to the raw string body. <code>HttpLink</code> and <code>BatchHttpLink</code> no longer try and parse the response body as JSON when a <code>ServerError</code> is thrown.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12673" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12673/hovercard">#12673</a> <a href="https://github.com/apollographql/apollo-client/commit/cee90abcd2a9c91c5fdf872cf2d1c12deaa6593e"><code>cee90ab</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - The <code>includeExtensions</code> option of <code>HttpLink</code> and <code>BatchHttpLink</code> now defaults<br>
to <code>true</code>.</p>
<p>If <code>includeExtensions</code> is <code>true</code>, but <code>extensions</code> is not set or empty, extensions<br>
will not be included in outgoing requests.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12686" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12686/hovercard">#12686</a> <a href="https://github.com/apollographql/apollo-client/commit/dc4b1d0d2479a37067113b7bd161a550fb8e4df6"><code>dc4b1d0</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - A <code>@defer</code> query that has not yet finished streaming is now considered loading and thus the <code>loading</code> flag will be <code>true</code> until the response has completed. A new <code>NetworkStatus.streaming</code> value has been introduced and will be set as the <code>networkStatus</code> while the response is streaming.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12539" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12539/hovercard">#12539</a> <a href="https://github.com/apollographql/apollo-client/commit/dd0d6d6d96d8b810e30dc2fdee2ac8a2477d0017"><code>dd0d6d6</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>onError</code> link now uses a single <code>error</code> property to report the error that caused the link callback to be called. This will be an instance of <code>CombinedGraphQLErrors</code> in the event GraphQL errors were emitted from the terminating link, <code>CombinedProtocolErrors</code> if the terminating link emitted protocol errors, or the unwrapped error type if any other non-GraphQL error was thrown or emitted.</p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="- const errorLink = onError(({ graphQLErrors, networkError, protocolErrors }) =&gt; {
-   graphQLErrors.forEach(error =&gt; console.log(error.message));
+ const errorLink = onError(({ error }) =&gt; {
+   if (error.name === 'CombinedGraphQLErrors') {
+     error.errors.forEach(rawError =&gt; console.log(rawError.message));
+   }
});"><pre><span class="pl-md"><span class="pl-md">-</span> const errorLink = onError(({ graphQLErrors, networkError, protocolErrors }) =&gt; {</span>
<span class="pl-md"><span class="pl-md">-</span>   graphQLErrors.forEach(error =&gt; console.log(error.message));</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> const errorLink = onError(({ error }) =&gt; {</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>   if (error.name === 'CombinedGraphQLErrors') {</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>     error.errors.forEach(rawError =&gt; console.log(rawError.message));</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>   }</span>
});</pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12586" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12586/hovercard">#12586</a> <a href="https://github.com/apollographql/apollo-client/commit/605db8e94fe2ce74c0a395f38f6873d40f431365"><code>605db8e</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove the <code>typeDefs</code> option from <code>ApolloClient</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12384" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12384/hovercard">#12384</a> <a href="https://github.com/apollographql/apollo-client/commit/6aa6fd316cfdb31ebbe3e3133cca2965604e7ca1"><code>6aa6fd3</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove the <code>asyncMap</code> utility function. Instead use one of the RxJS operators that creates Observables from promises, such as <code>from</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12398" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12398/hovercard">#12398</a> <a href="https://github.com/apollographql/apollo-client/commit/8cf5077bed1ab46fdd32c5e253071506c0076064"><code>8cf5077</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Removes the <code>isApolloError</code> utility function to check if the error object is an <code>ApolloError</code> instance. Use <code>instanceof</code> to check for more specific error types that replace <code>ApolloError</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12379" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12379/hovercard">#12379</a> <a href="https://github.com/apollographql/apollo-client/commit/ef892b4dc505b02049525f9aba32c51f1c00c922"><code>ef892b4</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Removes the <code>addTypename</code> option from <code>InMemoryCache</code> and <code>MockedProvider</code>. <code>__typename</code> is now always added to the outgoing query document when using <code>InMemoryCache</code> and cannot be disabled.</p>
<p>If you are using <code>&lt;MockedProvider /&gt;</code> with <code>addTypename={false}</code>, ensure that your mocked responses include a <code>__typename</code> field. This will ensure cache normalization kicks in and behaves more like production.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12396" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12396/hovercard">#12396</a> <a href="https://github.com/apollographql/apollo-client/commit/00f3d0a674eede1f909092283041cf8ac8d1b576"><code>00f3d0a</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove the deprecated <code>errors</code> property from <code>useQuery</code> and <code>useLazyQuery</code>. Read errors from the <code>error</code> property instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12809" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12809/hovercard">#12809</a> <a href="https://github.com/apollographql/apollo-client/commit/e2a0be8c3f8b242706f90e0dcc022628992a8ae8"><code>e2a0be8</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>operation.getContext</code> now returns a <code>Readonly&lt;OperationContext&gt;</code> type.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12809" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12809/hovercard">#12809</a> <a href="https://github.com/apollographql/apollo-client/commit/e2a0be8c3f8b242706f90e0dcc022628992a8ae8"><code>e2a0be8</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The <code>ApolloLink.Request</code> (i.e. <code>GraphQLRequest</code>) passed to <code>ApolloLink.execute</code> no longer accepts <code>operationName</code> and <code>operationType</code> options. These properties are derived from the <code>query</code> and set on the returned <code>ApolloLink.Operation</code> type.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12712" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12712/hovercard">#12712</a> <a href="https://github.com/apollographql/apollo-client/commit/bbb2b61d259da54560a79813b130a977dae10523"><code>bbb2b61</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - An error is now thrown when trying to call <code>fetchMore</code> on a <code>cache-only</code> query.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12222" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12222/hovercard">#12222</a> <a href="https://github.com/apollographql/apollo-client/commit/d1a905461d4378522c3257de00afba2ae8decd22"><code>d1a9054</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Drop support for React 16.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12787" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12787/hovercard">#12787</a> <a href="https://github.com/apollographql/apollo-client/commit/8ce31fae54b1ae76c557f361cc946858cb2ff66b"><code>8ce31fa</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - Remove <code>DataProxy</code> namespace and interface.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12450" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12450/hovercard">#12450</a> <a href="https://github.com/apollographql/apollo-client/commit/876d07042cf3348b3769b2bb415aa5f70ce9844c"><code>876d070</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove <code>TSerialized</code> generic argument to <code>ApolloCache</code>. The <code>ApolloCache</code> base cache abstraction now returns <code>unknown</code> for <code>cache.extract</code> which can be overridden by a cache subclass.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12614" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12614/hovercard">#12614</a> <a href="https://github.com/apollographql/apollo-client/commit/d2851e2c74541995760a86904b1e3ab4bd736e62"><code>d2851e2</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The <code>getCacheKey</code> function is no longer available from <code>operation.getContext()</code> in the link chain. Use <code>operation.client.cache.identify(obj)</code> in the link chain instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12376" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12376/hovercard">#12376</a> <a href="https://github.com/apollographql/apollo-client/commit/a0c996a816fbb6a2323231c0422d1c8a3e20cbaf"><code>a0c996a</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove deprecated <code>ignoreResults</code> option from <code>useMutation</code>. If you don't want to synchronize component state with the mutation, use <code>useApolloClient</code> to access your client instance and use <code>client.mutate</code> directly.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12644" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12644/hovercard">#12644</a> <a href="https://github.com/apollographql/apollo-client/commit/fe2f005c34913ae082b96a807dc240e2785d50bd"><code>fe2f005</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - More strictly adhere to the <a href="https://graphql.github.io/graphql-over-http/draft/" rel="nofollow">GraphQL over HTTP spec</a>. This change adds support for the <code>application/graphql-response+json</code> media type and modifies the behavior of the <code>application/json</code> media type.</p>
<ul>
<li>The client will parse the response as a well-formed GraphQL response when the server encodes <code>content-type</code> using <code>application/graphql-response+json</code> with a non-200 status code.</li>
<li>The client will now throw a <code>ServerError</code> when the server encodes <code>content-type</code> using <code>application/json</code> and returns a non-200 status code.</li>
<li>The client will now throw a <code>ServerError</code> when the server encodes using any other <code>content-type</code> and returns a non-200 status code.</li>
</ul>
<p>NOTE: If you use a testing utility to mock requests in your test, you may experience different behavior than production if your testing utility responds as <code>application/json</code> but your production server responds as <code>application/graphql-response+json</code>. If a <code>content-type</code> header is not set, the client interprets the response as <code>application/json</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12600" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12600/hovercard">#12600</a> <a href="https://github.com/apollographql/apollo-client/commit/34ff6aa25b47c3e84d0b18e2c69bc995814bf2f2"><code>34ff6aa</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Move most of the utilities in <code>@apollo/client/utilities</code> to <code>@apollo/client/utilities/internal</code>. Many of the utilities exported from the <code>@apollo/client/utilities</code> endpoint were not considered stable.</p>
<p>As a result of this change, utilities or types exported from <code>@apollo/client/utilities</code> are now documented and considered stable and will not undergo breaking changes.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12513" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12513/hovercard">#12513</a> <a href="https://github.com/apollographql/apollo-client/commit/9c3207c44ddad1f8b845c09495d6c070ace8de7b"><code>9c3207c</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - Removed the <code>@apollo/client/react/context</code> and <code>@apollo/client/react/hooks</code> entry points. Please use <code>@apollo/client/react</code> instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12384" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12384/hovercard">#12384</a> <a href="https://github.com/apollographql/apollo-client/commit/6aa6fd316cfdb31ebbe3e3133cca2965604e7ca1"><code>6aa6fd3</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Unusubscribing from <code>ObservableQuery</code> while a request is in flight will no longer terminate the request by unsubscribing from the link observable.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12463" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12463/hovercard">#12463</a> <a href="https://github.com/apollographql/apollo-client/commit/3868df81f973dc7b5a79fadf4dc1b0e291003b7f"><code>3868df8</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>ObservableQuery.setOptions</code> has been removed as it was an alias of <code>reobserve</code>. Prefer using <code>reobserve</code> directly instead.</p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="const observable = client.watchQuery(options);

// Use reobserve to set new options and reevaluate the query
- observable.setOptions(newOptions);
+ observable.reobserve(newOptions);"><pre>const observable = client.watchQuery(options);

// Use reobserve to set new options and reevaluate the query
<span class="pl-md"><span class="pl-md">-</span> observable.setOptions(newOptions);</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> observable.reobserve(newOptions);</span></pre></div>
<p>As a result of this change, <code>reobserve</code> has been marked for public use and is no longer considered an internal API. The <code>newNetworkStatus</code> argument has been removed to facilitate this change.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12478" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12478/hovercard">#12478</a> <a href="https://github.com/apollographql/apollo-client/commit/5ea6a45b3ec2f0d526abe78ae03c42bb519f87c7"><code>5ea6a45</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove <code>variables</code> from the result returned from <code>useSubscription</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12735" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12735/hovercard">#12735</a> <a href="https://github.com/apollographql/apollo-client/commit/51598808851e16af722baaefbd1f90534332e07a"><code>5159880</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove deprecated <code>resultCacheMaxSize</code> option from <code>InMemoryCache</code> options.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12673" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12673/hovercard">#12673</a> <a href="https://github.com/apollographql/apollo-client/commit/cee90abcd2a9c91c5fdf872cf2d1c12deaa6593e"><code>cee90ab</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - The <code>ApolloClient</code> constructor options <code>name</code> and <code>version</code> that are used to<br>
configure the client awareness feature have moved onto a <code>clientAwareness</code> key.</p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="const client = new ApolloClient({
  // ..
-  name: &quot;my-app&quot;,
-  version: &quot;1.0.0&quot;,
+  clientAwareness: {
+    name: &quot;my-app&quot;,
+    version: &quot;1.0.0&quot;,
+  },
});"><pre>const client = new ApolloClient({
  // ..
<span class="pl-md"><span class="pl-md">-</span>  name: "my-app",</span>
<span class="pl-md"><span class="pl-md">-</span>  version: "1.0.0",</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>  clientAwareness: {</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>    name: "my-app",</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>    version: "1.0.0",</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>  },</span>
});</pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12367" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12367/hovercard">#12367</a> <a href="https://github.com/apollographql/apollo-client/commit/e6af35ed30c732ad834e6c524bc9ce5adbe5f706"><code>e6af35e</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The <code>previousData</code> property on <code>useLazyQuery</code> will now change only when <code>data</code> changes. Previously <code>previousData</code> would change to the same value as <code>data</code> while the query was loading.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12690" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12690/hovercard">#12690</a> <a href="https://github.com/apollographql/apollo-client/commit/5812759b6659df49277635e89492c0d72c3b57d6"><code>5812759</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - Aliasing any other field to <code>__typename</code> is now forbidden.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12556" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12556/hovercard">#12556</a> <a href="https://github.com/apollographql/apollo-client/commit/c3fceda86c5e0f499d0b5fa54ea7dc4c4391ae2c"><code>c3fceda</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - <code>ObservableQuery</code> will now keep previous <code>data</code> around when emitting a <code>loading</code> state, unless <code>query</code> or <code>variables</code> changed.<br>
Note that <code>@exports</code> variables are not taken into account for this, so <code>data</code> will stay around even if they change.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12776" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12776/hovercard">#12776</a> <a href="https://github.com/apollographql/apollo-client/commit/bce9b7448a226b109cbe8f14911503fb09f37825"><code>bce9b74</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Report masked fragments as complete even when a nested masked fragment contains partial data.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12788" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12788/hovercard">#12788</a> <a href="https://github.com/apollographql/apollo-client/commit/417944677d2e79606b0f6cabd8d5d8b2063c876b"><code>4179446</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - <code>TVariables</code> now always <code>extends OperationVariables</code> in all interfaces.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12224" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12224/hovercard">#12224</a> <a href="https://github.com/apollographql/apollo-client/commit/51e6c0f8657d20cedc570c6e9a244f877047dd61"><code>51e6c0f</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove deprecated <code>partialRefetch</code> option.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12407" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12407/hovercard">#12407</a> <a href="https://github.com/apollographql/apollo-client/commit/8b1390bf0050c6bd4d5a32b67c3b96369d0552d4"><code>8b1390b</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Calling <code>refetch</code> with new variables will now set the <code>networkStatus</code> to <code>refetch</code> instead of <code>setVariables</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12476" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12476/hovercard">#12476</a> <a href="https://github.com/apollographql/apollo-client/commit/6afff60beece953406af2cbe07f7ccbf973cadaa"><code>6afff60</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Subscriptions now emit a <code>SubscribeResult</code> instead of a <code>FetchResult</code>. As a result, the <code>errors</code> field has been removed in favor of <code>error</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12457" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12457/hovercard">#12457</a> <a href="https://github.com/apollographql/apollo-client/commit/32e85ea9eb93c1ffb10d6f70e9e2775e1326e9aa"><code>32e85ea</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Network errors triggered by queries now adhere to the <code>errorPolicy</code>. This means that GraphQL errors and network errors now behave the same way. Previously promise-based APIs, such as <code>client.query</code>, would reject the promise with the network error even if <code>errorPolicy</code> was set to <code>ignore</code>. The promise is now resolved with the <code>error</code> property set to the network error instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12840" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12840/hovercard">#12840</a> <a href="https://github.com/apollographql/apollo-client/commit/83e132ab1bacb3293da61dd4519379e36a1fb090"><code>83e132a</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - If you use an incremental delivery handler, you now have to explicitly opt into adding the chunk types to the <code>ApolloLink.Result</code> type.</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import { Defer20220824Handler } from &quot;@apollo/client/incremental&quot;;

declare module &quot;@apollo/client&quot; {
  export interface TypeOverrides extends Defer20220824Handler.TypeOverrides {}
}"><pre><span class="pl-k">import</span> <span class="pl-kos">{</span> <span class="pl-v">Defer20220824Handler</span> <span class="pl-kos">}</span> <span class="pl-k">from</span> <span class="pl-s">"@apollo/client/incremental"</span><span class="pl-kos">;</span>

<span class="pl-k">declare</span> module <span class="pl-s">"@apollo/client"</span> <span class="pl-kos">{</span>
  <span class="pl-k">export</span> <span class="pl-k">interface</span> <span class="pl-smi">TypeOverrides</span> <span class="pl-k">extends</span> <span class="pl-v">Defer20220824Handler</span><span class="pl-kos">.</span><span class="pl-smi">TypeOverrides</span> <span class="pl-kos">{</span><span class="pl-kos">}</span>
<span class="pl-kos">}</span></pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12712" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12712/hovercard">#12712</a> <a href="https://github.com/apollographql/apollo-client/commit/bbb2b61d259da54560a79813b130a977dae10523"><code>bbb2b61</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>cache-only</code> queries are no longer refetched when calling <code>client.reFetchObservableQueries</code> when <code>includeStandby</code> is <code>true</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12808" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12808/hovercard">#12808</a> <a href="https://github.com/apollographql/apollo-client/commit/8e31a2303b18f6fc4d8ec1cf4c01bf26b90f3f0b"><code>8e31a23</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - HTTP Multipart handling will now throw an error if the connection closed before the final boundary has been received.<br>
Data after the final boundary will be ignored.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12384" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12384/hovercard">#12384</a> <a href="https://github.com/apollographql/apollo-client/commit/6aa6fd316cfdb31ebbe3e3133cca2965604e7ca1"><code>6aa6fd3</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove the <code>iterateObserversSafely</code> utility function.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12825" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12825/hovercard">#12825</a> <a href="https://github.com/apollographql/apollo-client/commit/292b949e9e1d10a715e0fd403737361f91432fbf"><code>292b949</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The <code>serializeFetchParameter</code> helper is no longer exported and <code>JSON.stringify</code> is used directly. As such, the <code>ClientParseError</code> type has also been removed in favor of throwing any JSON serialize errors directly.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12595" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12595/hovercard">#12595</a> <a href="https://github.com/apollographql/apollo-client/commit/60bb49ccea9aecf3e6a212b5a1f71907e60af886"><code>60bb49c</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove the <code>@apollo/client/testing/experimental</code> test utilities. Use <a href="https://github.com/apollographql/graphql-testing-library">GraphQL Testing Library</a> instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12718" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12718/hovercard">#12718</a> <a href="https://github.com/apollographql/apollo-client/commit/ecfc02a37908b58d1f799f0e817cdeab98482720"><code>ecfc02a</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Version bump only to release latest as <code>rc</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12470" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12470/hovercard">#12470</a> <a href="https://github.com/apollographql/apollo-client/commit/d32902f26a4c5dea30421ee52aeea52df3e5334e"><code>d32902f</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - <code>ssrMode</code>, <code>ssrForceFetchDelay</code> and <code>disableNetworkFetches</code> have been reworked:</p>
<p>Previously, a <code>ObservableQuery</code> created by <code>client.query</code> or <code>client.watchQuery</code><br>
while one of those were active would permanently be changed from a <code>fetchPolicy</code><br>
of <code>"network-only"</code> or <code>"cache-and-network"</code> to <code>"cache-first"</code>, and stay that way<br>
even long after <code>disableNetworkFetches</code> would have been deactivated.</p>
<p>Now, the <code>ObservableQuery</code> will keep their original <code>fetchPolicy</code>, but queries<br>
made during <code>disableNetworkFetches</code> will just apply the <code>fetchPolicy</code> replacement<br>
at request time, just for that one request.</p>
<p><code>ApolloClient.disableNetworkFetches</code> has been renamed to <code>ApolloClient.prioritizeCacheValues</code> to better reflect this behaviour.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12559" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12559/hovercard">#12559</a> <a href="https://github.com/apollographql/apollo-client/commit/49ace0e2119b7fd5997dcf051002ebd4ba2e0bc4"><code>49ace0e</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>ObservableQuery.variables</code> can now be reset back to empty when calling <code>reobserve</code> with <code>variables: undefined</code>. Previously the <code>variables</code> key would be ignored so <code>variables</code> would remain unchanged.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12559" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12559/hovercard">#12559</a> <a href="https://github.com/apollographql/apollo-client/commit/49ace0e2119b7fd5997dcf051002ebd4ba2e0bc4"><code>49ace0e</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>never</code> is no longer supported as a valid <code>TVariables</code> generic argument for APIs that require <code>variables</code> as part of its type. Use <code>Record&lt;string, never&gt;</code> instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12735" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12735/hovercard">#12735</a> <a href="https://github.com/apollographql/apollo-client/commit/51598808851e16af722baaefbd1f90534332e07a"><code>5159880</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove deprecated <code>connectToDevtools</code> option from <code>ApolloClientOptions</code>. Use <code>devtools.enabled</code> instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12576" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12576/hovercard">#12576</a> <a href="https://github.com/apollographql/apollo-client/commit/a92ff780abee60896bb9632867e90c82d0829255"><code>a92ff78</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The <code>cache</code> and <code>forceFetch</code> properties are no longer available on context when calling <code>operation.getContext()</code>. <code>cache</code> can be accessed through the <code>operation</code> with <code>operation.client.cache</code> instead. <code>forceFetch</code> has been replaced with <code>queryDeduplication</code> which specifies whether <code>queryDeduplication</code> was enabled for the request or not.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12533" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12533/hovercard">#12533</a> <a href="https://github.com/apollographql/apollo-client/commit/73221d87bd5640986f86fe3ee50c63ed49834cbb"><code>73221d8</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove the <code>onError</code> and <code>setOnError</code> methods from <code>ApolloLink</code>. <code>onError</code> was only used by <code>MockLink</code> to rewrite errors if <code>setOnError</code> was used.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12485" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12485/hovercard">#12485</a> <a href="https://github.com/apollographql/apollo-client/commit/d3383033d306b7d66e90f5f3170c24453cd76464"><code>d338303</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Throw an error for queries and mutations if the link chain completes without emitting a value.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12556" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12556/hovercard">#12556</a> <a href="https://github.com/apollographql/apollo-client/commit/c3fceda86c5e0f499d0b5fa54ea7dc4c4391ae2c"><code>c3fceda</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - Removed <code>getLastResult</code>, <code>getLastError</code> and <code>resetLastResults</code> from <code>ObservableQuery</code></p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12663" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12663/hovercard">#12663</a> <a href="https://github.com/apollographql/apollo-client/commit/01512f2429dd394fb72b8ba9284047a09ade666f"><code>01512f2</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Unsubscribing from an <code>ObservableQuery</code> before a value has been emitted will remove the query from the tracked list of queries and will no longer be eligible for query deduplication.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12809" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12809/hovercard">#12809</a> <a href="https://github.com/apollographql/apollo-client/commit/e2a0be8c3f8b242706f90e0dcc022628992a8ae8"><code>e2a0be8</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>operation.operationType</code> is now a non-null <code>OperationTypeNode</code>. It is now safe to compare this value without having to check for <code>undefined</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12398" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12398/hovercard">#12398</a> <a href="https://github.com/apollographql/apollo-client/commit/8cf5077bed1ab46fdd32c5e253071506c0076064"><code>8cf5077</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Apollo Client no longer wraps errors in <code>ApolloError</code>. <code>ApolloError</code> has been replaced with separate error classes depending on the cause of the error. As such, APIs that return an <code>error</code> property have been updated to use the generic <code>Error</code> type. Use <code>instanceof</code> to check for more specific error types.</p>
<h2>Migration guide</h2>
<p><code>ApolloError</code> encapsulated 4 main error properties. The type of error would determine which property was set:</p>
<ul>
<li><code>graphqlErrors</code> - Errors returned from the <code>errors</code> field by the GraphQL server</li>
<li><code>networkError</code> - Any non-GraphQL error that caused the query to fail</li>
<li><code>protocolErrors</code> - Transport-level errors that occur during <a href="https://www.apollographql.com/docs/graphos/routing/operations/subscriptions/multipart-protocol" rel="nofollow">multipart HTTP subscriptions</a></li>
<li><code>clientErrors</code> - A space to define custom errors. Mostly unused.</li>
</ul>
<p>These errors were mutally exclusive, meaning both <code>networkError</code> and <code>graphqlErrors</code> were never set simultaneously. The following replaces each of these fields from <code>ApolloError</code>.</p>
<h3><code>graphqlErrors</code></h3>
<p>GraphQL errors are now encapsulated in a <code>CombinedGraphQLErrors</code> instance. You can access the raw GraphQL errors via the <code>errors</code> property.</p>
<div class="highlight highlight-source-js notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import { CombinedGraphQLErrors } from &quot;@apollo/client&quot;;

// ...

const { error } = useQuery(query);

if (error &amp;&amp; error instanceof CombinedGraphQLErrors) {
  console.log(error.errors);
}"><pre><span class="pl-k">import</span> <span class="pl-kos">{</span> <span class="pl-v">CombinedGraphQLErrors</span> <span class="pl-kos">}</span> <span class="pl-k">from</span> <span class="pl-s">"@apollo/client"</span><span class="pl-kos">;</span>

<span class="pl-c">// ...</span>

<span class="pl-k">const</span> <span class="pl-kos">{</span> error <span class="pl-kos">}</span> <span class="pl-c1">=</span> <span class="pl-en">useQuery</span><span class="pl-kos">(</span><span class="pl-s1">query</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

<span class="pl-k">if</span> <span class="pl-kos">(</span><span class="pl-s1">error</span> <span class="pl-c1">&amp;&amp;</span> <span class="pl-s1">error</span> <span class="pl-k">instanceof</span> <span class="pl-v">CombinedGraphQLErrors</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
  <span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s1">error</span><span class="pl-kos">.</span><span class="pl-c1">errors</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-kos">}</span></pre></div>
<h3><code>networkError</code></h3>
<p>Network errors are no longer wrapped and are instead passed through directly.</p>
<div class="highlight highlight-source-js notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="const client = new ApolloClient({
  link: new ApolloLink(() =&gt; {
    return new Observable((observer) =&gt; {
      observer.error(new Error(&quot;Test error&quot;));
    });
  }),
});

// ...

const { error } = useQuery(query);

// error is `new Error('Test error')`;"><pre><span class="pl-k">const</span> <span class="pl-s1">client</span> <span class="pl-c1">=</span> <span class="pl-k">new</span> <span class="pl-v">ApolloClient</span><span class="pl-kos">(</span><span class="pl-kos">{</span>
  <span class="pl-c1">link</span>: <span class="pl-k">new</span> <span class="pl-v">ApolloLink</span><span class="pl-kos">(</span><span class="pl-kos">(</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-v">Observable</span><span class="pl-kos">(</span><span class="pl-kos">(</span><span class="pl-s1">observer</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
      <span class="pl-s1">observer</span><span class="pl-kos">.</span><span class="pl-en">error</span><span class="pl-kos">(</span><span class="pl-k">new</span> <span class="pl-v">Error</span><span class="pl-kos">(</span><span class="pl-s">"Test error"</span><span class="pl-kos">)</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
    <span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
  <span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">,</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

<span class="pl-c">// ...</span>

<span class="pl-k">const</span> <span class="pl-kos">{</span> error <span class="pl-kos">}</span> <span class="pl-c1">=</span> <span class="pl-en">useQuery</span><span class="pl-kos">(</span><span class="pl-s1">query</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

<span class="pl-c">// error is `new Error('Test error')`;</span></pre></div>
<h3><code>protocolErrors</code></h3>
<p>Protocol errors are now encapsulated in a <code>CombinedProtocolErrors</code> instance. You can access the raw protocol errors via the <code>errors</code> property.</p>
<div class="highlight highlight-source-js notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import { CombinedProtocolErrors } from &quot;@apollo/client&quot;;

// ...

const { error } = useSubscription(subscription);

if (error &amp;&amp; error instanceof CombinedProtocolErrors) {
  console.log(error.errors);
}"><pre><span class="pl-k">import</span> <span class="pl-kos">{</span> <span class="pl-v">CombinedProtocolErrors</span> <span class="pl-kos">}</span> <span class="pl-k">from</span> <span class="pl-s">"@apollo/client"</span><span class="pl-kos">;</span>

<span class="pl-c">// ...</span>

<span class="pl-k">const</span> <span class="pl-kos">{</span> error <span class="pl-kos">}</span> <span class="pl-c1">=</span> <span class="pl-en">useSubscription</span><span class="pl-kos">(</span><span class="pl-s1">subscription</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

<span class="pl-k">if</span> <span class="pl-kos">(</span><span class="pl-s1">error</span> <span class="pl-c1">&amp;&amp;</span> <span class="pl-s1">error</span> <span class="pl-k">instanceof</span> <span class="pl-v">CombinedProtocolErrors</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
  <span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s1">error</span><span class="pl-kos">.</span><span class="pl-c1">errors</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-kos">}</span></pre></div>
<h3><code>clientErrors</code></h3>
<p>These were unused by the client and have no replacement. Any non-GraphQL or non-protocol errors are now passed through unwrapped.</p>
<h3>Strings as errors</h3>
<p>If the link sends a string error, Apollo Client will wrap this in an <code>Error</code> instance. This ensures <code>error</code> properties are guaranteed to be of type <code>Error</code>.</p>
<div class="highlight highlight-source-js notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="const client = new ApolloClient({
  link: new ApolloLink(() =&gt; {
    return new Observable((observer) =&gt; {
      // Oops we sent a string instead of wrapping it in an `Error`
      observer.error(&quot;Test error&quot;);
    });
  }),
});

// ...

const { error } = useQuery(query);

// The error string is wrapped and returned as `new Error('Test error')`;"><pre><span class="pl-k">const</span> <span class="pl-s1">client</span> <span class="pl-c1">=</span> <span class="pl-k">new</span> <span class="pl-v">ApolloClient</span><span class="pl-kos">(</span><span class="pl-kos">{</span>
  <span class="pl-c1">link</span>: <span class="pl-k">new</span> <span class="pl-v">ApolloLink</span><span class="pl-kos">(</span><span class="pl-kos">(</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-v">Observable</span><span class="pl-kos">(</span><span class="pl-kos">(</span><span class="pl-s1">observer</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
      <span class="pl-c">// Oops we sent a string instead of wrapping it in an `Error`</span>
      <span class="pl-s1">observer</span><span class="pl-kos">.</span><span class="pl-en">error</span><span class="pl-kos">(</span><span class="pl-s">"Test error"</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
    <span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
  <span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">,</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

<span class="pl-c">// ...</span>

<span class="pl-k">const</span> <span class="pl-kos">{</span> error <span class="pl-kos">}</span> <span class="pl-c1">=</span> <span class="pl-en">useQuery</span><span class="pl-kos">(</span><span class="pl-s1">query</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

<span class="pl-c">// The error string is wrapped and returned as `new Error('Test error')`;</span></pre></div>
<h3>Non-error types</h3>
<p>If the link chain sends any other object type as an error, Apollo Client will wrap this in an <code>UnknownError</code> instance with the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/cause" rel="nofollow"><code>cause</code></a> set to the original object. This ensures <code>error</code> properties are guaranteed to be of type <code>Error</code>.</p>
<div class="highlight highlight-source-js notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="const client = new ApolloClient({
  link: new ApolloLink(() =&gt; {
    return new Observable((observer) =&gt; {
      observer.error({ message: &quot;Not a proper error type&quot; });
    });
  }),
});

// ...

const { error } = useQuery(query);

// error is an `UnknownError` instance. error.cause returns the original object."><pre><span class="pl-k">const</span> <span class="pl-s1">client</span> <span class="pl-c1">=</span> <span class="pl-k">new</span> <span class="pl-v">ApolloClient</span><span class="pl-kos">(</span><span class="pl-kos">{</span>
  <span class="pl-c1">link</span>: <span class="pl-k">new</span> <span class="pl-v">ApolloLink</span><span class="pl-kos">(</span><span class="pl-kos">(</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-v">Observable</span><span class="pl-kos">(</span><span class="pl-kos">(</span><span class="pl-s1">observer</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
      <span class="pl-s1">observer</span><span class="pl-kos">.</span><span class="pl-en">error</span><span class="pl-kos">(</span><span class="pl-kos">{</span> <span class="pl-c1">message</span>: <span class="pl-s">"Not a proper error type"</span> <span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
    <span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
  <span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">,</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

<span class="pl-c">// ...</span>

<span class="pl-k">const</span> <span class="pl-kos">{</span> error <span class="pl-kos">}</span> <span class="pl-c1">=</span> <span class="pl-en">useQuery</span><span class="pl-kos">(</span><span class="pl-s1">query</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

<span class="pl-c">// error is an `UnknownError` instance. error.cause returns the original object.</span></pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12809" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12809/hovercard">#12809</a> <a href="https://github.com/apollographql/apollo-client/commit/e2a0be8c3f8b242706f90e0dcc022628992a8ae8"><code>e2a0be8</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>operation.operationName</code> is now set as <code>string | undefined</code> where <code>undefined</code> represents an anonymous query. Previously <code>operationName</code> would return an empty string as the <code>operationName</code> for anonymous queries.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12450" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12450/hovercard">#12450</a> <a href="https://github.com/apollographql/apollo-client/commit/876d07042cf3348b3769b2bb415aa5f70ce9844c"><code>876d070</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove the <code>TCacheShape</code> generic argument to <code>ApolloClient</code>. <code>client.extract()</code> now returns <code>unknown</code> by default. You will either need to type-cast this to the expected serialized shape, or use the <code>cache.extract()</code> directly from the subclass to get more specific types.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12774" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12774/hovercard">#12774</a> <a href="https://github.com/apollographql/apollo-client/commit/511b4f3e792a75aa5aa27b335e8119dbc2a9c254"><code>511b4f3</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Apply document transforms before reading data from the cache for <code>client.readQuery</code>, <code>client.readFragment</code>, <code>client.watchFragment</code>, <code>useFragment</code>, and <code>useSuspenseFragment</code>.</p>
<p>NOTE: This change does not affect the equivalent <code>cache.*</code> APIs. To read data from the cache without first running document transforms, run <code>cache.readQuery</code>, <code>cache.readFragment</code>, etc.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12705" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12705/hovercard">#12705</a> <a href="https://github.com/apollographql/apollo-client/commit/a60f411e58cc67730d0dc4513e4045f004027ded"><code>a60f411</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>cache-only</code> queries will now initialize with <code>loading: false</code> and <code>networkStatus: NetworkStatus.ready</code> when there is no data in the cache.</p>
<p>This means <code>useQuery</code> will no longer render a short initial loading state before rendering <code>loading: false</code> and <code>ObservableQuery.getCurrentResult()</code> will now return <code>loading: false</code> immediately.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12475" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12475/hovercard">#12475</a> <a href="https://github.com/apollographql/apollo-client/commit/3de63ebcdf95a87adc31e6b4a39cae5391ed945a"><code>3de63eb</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Unify error behavior on mutations for GraphQL errors and network errors by ensuring network errors are subject to the <code>errorPolicy</code>. Network errors created when using an <code>errorPolicy</code> of <code>all</code> will now resolve the promise and be returned on the <code>error</code> property of the result, or stripped away when the <code>errorPolicy</code> is <code>none</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12384" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12384/hovercard">#12384</a> <a href="https://github.com/apollographql/apollo-client/commit/6aa6fd316cfdb31ebbe3e3133cca2965604e7ca1"><code>6aa6fd3</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove <code>fromError</code> utility function. Use <a href="https://rxjs.dev/api/index/function/throwError" rel="nofollow"><code>throwError</code></a> instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12649" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12649/hovercard">#12649</a> <a href="https://github.com/apollographql/apollo-client/commit/0be92ad51cf8de444fa1cc507bab2c21d230a44e"><code>0be92ad</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The <code>TData</code> generic provided to types that return a <code>dataState</code> property is now modified by the given <code>DataState</code> generic instead of passing a modified <code>TData</code> type. For example, a <code>QueryRef</code> that could return partial data was defined as <code>QueryRef&lt;DeepPartial&lt;TData&gt;, TVariables&gt;</code>. Now <code>TData</code> should be provided unmodified and a set of allowed states should be given instead: <code>QueryRef&lt;TData, TVariables, 'complete' | 'streaming' | 'partial'&gt;</code>.</p>
<p>To migrate, use the following guide to replace your type with the right set of states (all types listed below are changed the same way):</p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="- QueryRef&lt;TData, TVariables&gt;
// `QueryRef`'s default is 'complete' | 'streaming' so this can also be left alone if you prefer
// All other types affected by this change default to all states
+ QueryRef&lt;TData, TVariables&gt;
+ QueryRef&lt;TData, TVariables, 'complete' | 'streaming'&gt;

- QueryRef&lt;TData | undefined, TVariables&gt;
+ QueryRef&lt;TData, TVariables, 'complete' | 'streaming' | 'empty'&gt;

- QueryRef&lt;DeepPartial&lt;TData&gt;, TVariables&gt;
+ QueryRef&lt;TData, TVariables, 'complete' | 'streaming' | 'partial'&gt;

- QueryRef&lt;DeepPartial&lt;TData&gt; | undefined, TVariables&gt;
+ QueryRef&lt;TData, TVariables, 'complete' | 'streaming' | 'partial' | 'empty'&gt;"><pre><span class="pl-md"><span class="pl-md">-</span> QueryRef&lt;TData, TVariables&gt;</span>
// `QueryRef`'s default is 'complete' | 'streaming' so this can also be left alone if you prefer
// All other types affected by this change default to all states
<span class="pl-mi1"><span class="pl-mi1">+</span> QueryRef&lt;TData, TVariables&gt;</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> QueryRef&lt;TData, TVariables, 'complete' | 'streaming'&gt;</span>

<span class="pl-md"><span class="pl-md">-</span> QueryRef&lt;TData | undefined, TVariables&gt;</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> QueryRef&lt;TData, TVariables, 'complete' | 'streaming' | 'empty'&gt;</span>

<span class="pl-md"><span class="pl-md">-</span> QueryRef&lt;DeepPartial&lt;TData&gt;, TVariables&gt;</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> QueryRef&lt;TData, TVariables, 'complete' | 'streaming' | 'partial'&gt;</span>

<span class="pl-md"><span class="pl-md">-</span> QueryRef&lt;DeepPartial&lt;TData&gt; | undefined, TVariables&gt;</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> QueryRef&lt;TData, TVariables, 'complete' | 'streaming' | 'partial' | 'empty'&gt;</span></pre></div>
<p>The following types are affected. Provide the allowed <code>dataState</code> values to the <code>TDataState</code> generic:</p>
<ul>
<li><code>ApolloQueryResult</code></li>
<li><code>QueryRef</code></li>
<li><code>PreloadedQueryRef</code></li>
<li><code>useLazyQuery.Result</code></li>
<li><code>useQuery.Result</code></li>
<li><code>useReadQuery.Result</code></li>
<li><code>useSuspenseQuery.Result</code></li>
</ul>
<p>All <code>*QueryRef</code> types default to <code>complete | streaming</code> states while the rest of the types default to <code>'complete' | 'streaming' | 'partial' | 'empty'</code> states. You shouldn't need to provide the states unless you need to either allow for partial data/empty values (<code>*QueryRef</code>) or a restricted set of states.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12850" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12850/hovercard">#12850</a> <a href="https://github.com/apollographql/apollo-client/commit/268cd800a2d73305c0df8dd38b6bd1cee98f0fec"><code>268cd80</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - Introduce a versioning policy.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12809" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12809/hovercard">#12809</a> <a href="https://github.com/apollographql/apollo-client/commit/e2a0be8c3f8b242706f90e0dcc022628992a8ae8"><code>e2a0be8</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The <code>concat</code>, <code>from</code>, and <code>split</code> functions on <code>ApollLink</code> no longer support a plain request handler function. Please wrap the request handler with <code>new ApolloLink</code>.</p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="const link = new ApolloLink(/* ... */);

link.concat(
- (operation, forward) =&gt; forward(operation),
+ new ApolloLink((operation, forward) =&gt; forward(operation)),
);"><pre>const link = new ApolloLink(/* ... */);

link.concat(
<span class="pl-md"><span class="pl-md">-</span> (operation, forward) =&gt; forward(operation),</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> new ApolloLink((operation, forward) =&gt; forward(operation)),</span>
);</pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12802" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12802/hovercard">#12802</a> <a href="https://github.com/apollographql/apollo-client/commit/e2b51b30acbd360253100f9d2a91fe7e0c57be4c"><code>e2b51b3</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Disallow the <code>mutation</code> option for the <code>mutate</code> function returned from <code>useMutation</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12211" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12211/hovercard">#12211</a> <a href="https://github.com/apollographql/apollo-client/commit/c2736db3ad6f8b6e56f065682d5b76614f41bfd4"><code>c2736db</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove the deprecated <code>graphql</code>, <code>withQuery</code>, <code>withMutation</code>, <code>withSubscription</code>, and <code>withApollo</code> hoc components. Use the provided React hooks instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12690" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12690/hovercard">#12690</a> <a href="https://github.com/apollographql/apollo-client/commit/5812759b6659df49277635e89492c0d72c3b57d6"><code>5812759</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - Aliasing a field to an alias beginning with <code>__ac_</code> is now forbidden - this namespace is now reserved for internal use.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12559" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12559/hovercard">#12559</a> <a href="https://github.com/apollographql/apollo-client/commit/49ace0e2119b7fd5997dcf051002ebd4ba2e0bc4"><code>49ace0e</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - When passing a <code>variables</code> key with the value <code>undefined</code>, the value will be replaced by the default value in the query, if it is provided, rather than leave it as <code>undefined</code>.</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="// given this query
const query = gql`
  query PaginatedQuery($limit: Int! = 10, $offset: Int) {
    list(limit: $limit, offset: $offset) {
      id
    }
  }
`;

const observable = client.query({
  query,
  variables: { limit: 5, offset: 0 },
});
console.log(observable.variables); // =&gt; { limit: 5, offset: 0 }

observable.reobserve({ variables: { limit: undefined, offset: 10 } });
// limit is now `10`. This would previously be `undefined`
console.log(observable.variables); // =&gt; { limit: 10, offset: 10 }"><pre><span class="pl-c">// given this query</span>
<span class="pl-k">const</span> <span class="pl-s1">query</span> <span class="pl-c1">=</span> <span class="pl-en">gql</span><span class="pl-s">`</span>
<span class="pl-s">  query PaginatedQuery($limit: Int! = 10, $offset: Int) {</span>
<span class="pl-s">    list(limit: $limit, offset: $offset) {</span>
<span class="pl-s">      id</span>
<span class="pl-s">    }</span>
<span class="pl-s">  }</span>
<span class="pl-s">`</span><span class="pl-kos">;</span>

<span class="pl-k">const</span> <span class="pl-s1">observable</span> <span class="pl-c1">=</span> <span class="pl-s1">client</span><span class="pl-kos">.</span><span class="pl-en">query</span><span class="pl-kos">(</span><span class="pl-kos">{</span>
  query<span class="pl-kos">,</span>
  <span class="pl-c1">variables</span>: <span class="pl-kos">{</span> <span class="pl-c1">limit</span>: <span class="pl-c1">5</span><span class="pl-kos">,</span> <span class="pl-c1">offset</span>: <span class="pl-c1">0</span> <span class="pl-kos">}</span><span class="pl-kos">,</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s1">observable</span><span class="pl-kos">.</span><span class="pl-c1">variables</span><span class="pl-kos">)</span><span class="pl-kos">;</span> <span class="pl-c">// =&gt; { limit: 5, offset: 0 }</span>

<span class="pl-s1">observable</span><span class="pl-kos">.</span><span class="pl-en">reobserve</span><span class="pl-kos">(</span><span class="pl-kos">{</span> <span class="pl-c1">variables</span>: <span class="pl-kos">{</span> <span class="pl-c1">limit</span>: <span class="pl-c1">undefined</span><span class="pl-kos">,</span> <span class="pl-c1">offset</span>: <span class="pl-c1">10</span> <span class="pl-kos">}</span> <span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-c">// limit is now `10`. This would previously be `undefined`</span>
<span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s1">observable</span><span class="pl-kos">.</span><span class="pl-c1">variables</span><span class="pl-kos">)</span><span class="pl-kos">;</span> <span class="pl-c">// =&gt; { limit: 10, offset: 10 }</span></pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12262" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12262/hovercard">#12262</a> <a href="https://github.com/apollographql/apollo-client/commit/10ef7338cdcbbaf75d806f426e9708c9e095c2da"><code>10ef733</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove <code>itAsync</code> test utility.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12673" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12673/hovercard">#12673</a> <a href="https://github.com/apollographql/apollo-client/commit/cee90abcd2a9c91c5fdf872cf2d1c12deaa6593e"><code>cee90ab</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - Adds enhanced client awareness to the client.</p>
<p><code>HttpLink</code> and <code>BatchHttpLink</code> will now per default send information about the<br>
client library you are using in <code>extensions</code>.</p>
<p>This could look like this:</p>
<div class="highlight highlight-source-json notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="{
  &quot;query&quot;: &quot;query GetUser($id: ID!) { user(id: $id) { __typename id name } }&quot;,
  &quot;variables&quot;: {
    &quot;id&quot;: 5
  },
  &quot;extensions&quot;: {
    &quot;clientLibrary&quot;: {
      &quot;name&quot;: &quot;@apollo/client&quot;,
      &quot;version&quot;: &quot;4.0.0&quot;
    }
  }
}"><pre>{
  <span class="pl-ent">"query"</span>: <span class="pl-s"><span class="pl-pds">"</span>query GetUser($id: ID!) { user(id: $id) { __typename id name } }<span class="pl-pds">"</span></span>,
  <span class="pl-ent">"variables"</span>: {
    <span class="pl-ent">"id"</span>: <span class="pl-c1">5</span>
  },
  <span class="pl-ent">"extensions"</span>: {
    <span class="pl-ent">"clientLibrary"</span>: {
      <span class="pl-ent">"name"</span>: <span class="pl-s"><span class="pl-pds">"</span>@apollo/client<span class="pl-pds">"</span></span>,
      <span class="pl-ent">"version"</span>: <span class="pl-s"><span class="pl-pds">"</span>4.0.0<span class="pl-pds">"</span></span>
    }
  }
}</pre></div>
<p>This feature can be disabled by passing <code>enhancedClientAwareness: { transport: false }</code> to your<br>
<code>ApolloClient</code>, <code>HttpLink</code> or <code>BatchHttpLink</code> constructor options.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12742" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12742/hovercard">#12742</a> <a href="https://github.com/apollographql/apollo-client/commit/575bf3ed5885efb09c1eec497af4d2690c6b87d4"><code>575bf3e</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The new <code>SetContextLink</code> flips the <code>prevContext</code> and <code>operation</code> arguments in the callback. The <code>setContext</code> function has remained unchanged.</p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="- new SetContextLink((operation, prevContext) =&gt; {
+ new SetContextLink((prevContext, operation) =&gt; {
  // ...
})"><pre><span class="pl-md"><span class="pl-md">-</span> new SetContextLink((operation, prevContext) =&gt; {</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> new SetContextLink((prevContext, operation) =&gt; {</span>
  // ...
})</pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12536" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12536/hovercard">#12536</a> <a href="https://github.com/apollographql/apollo-client/commit/e14205ad5909f95aa04684acd0ca2f25956ee50c"><code>e14205a</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - An initial loading state is now emitted from <code>ObservableQuery</code> when subscribing if <code>notifyOnNetworkStatusChange</code> is set to <code>true</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12465" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12465/hovercard">#12465</a> <a href="https://github.com/apollographql/apollo-client/commit/a1321637cafb4023d6df416e9467294114d8346b"><code>a132163</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Flatten out React hook types. As a result, the base types have been removed. Prefer using the hook types instead. Removed types include:</p>
<ul>
<li><code>BaseMutationOptions</code></li>
<li><code>BaseQueryOptions</code></li>
<li><code>BaseSubscriptionOptions</code></li>
<li><code>ObservableQueryFields</code></li>
<li><code>MutationSharedOptions</code></li>
<li><code>QueryFunctionOptions</code></li>
</ul>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12675" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12675/hovercard">#12675</a> <a href="https://github.com/apollographql/apollo-client/commit/8f1d974881ff54339b6b6593a219ba6d5fd013c0"><code>8f1d974</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - <code>ObservableQuery</code> no longer has a <code>queryId</code> property.<br>
<code>ApolloClient.getObservableQueries</code> no longer returns a <code>Map&lt;string, ObservableQuery&gt;</code>, but a <code>Set&lt;ObservableQuery&gt;</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12398" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12398/hovercard">#12398</a> <a href="https://github.com/apollographql/apollo-client/commit/8cf5077bed1ab46fdd32c5e253071506c0076064"><code>8cf5077</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Updates the <code>ServerError</code> and <code>ServerParseError</code> types to be proper <code>Error</code> subclasses. Perviously these were plain <code>Error</code> intances with additional properties added at runtime. All properties are retained, but <code>instanceof</code> checks now work correctly.</p>
<div class="highlight highlight-source-js notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import { ServerError, ServerParseError } from &quot;@apollo/client&quot;;

if (error instanceof ServerError) {
  // ...
}

if (error instanceof ServerParseError) {
  // ...
}"><pre><span class="pl-k">import</span> <span class="pl-kos">{</span> <span class="pl-v">ServerError</span><span class="pl-kos">,</span> <span class="pl-v">ServerParseError</span> <span class="pl-kos">}</span> <span class="pl-k">from</span> <span class="pl-s">"@apollo/client"</span><span class="pl-kos">;</span>

<span class="pl-k">if</span> <span class="pl-kos">(</span><span class="pl-s1">error</span> <span class="pl-k">instanceof</span> <span class="pl-v">ServerError</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
  <span class="pl-c">// ...</span>
<span class="pl-kos">}</span>

<span class="pl-k">if</span> <span class="pl-kos">(</span><span class="pl-s1">error</span> <span class="pl-k">instanceof</span> <span class="pl-v">ServerParseError</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
  <span class="pl-c">// ...</span>
<span class="pl-kos">}</span></pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12712" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12712/hovercard">#12712</a> <a href="https://github.com/apollographql/apollo-client/commit/bbb2b61d259da54560a79813b130a977dae10523"><code>bbb2b61</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>cache-only</code> queries are now excluded from <code>client.refetchQueries</code> in all situations. <code>cache-only</code> queries affected by <code>updateCache</code> are also excluded from <code>refetchQueries</code> when <code>onQueryUpdated</code> is not provided.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12463" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12463/hovercard">#12463</a> <a href="https://github.com/apollographql/apollo-client/commit/3868df81f973dc7b5a79fadf4dc1b0e291003b7f"><code>3868df8</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>useQuery</code> no longer returns <code>reobserve</code> as part of its result. It was possible to use <code>reobserve</code> to set new options on the underlying <code>ObservableQuery</code> instance which differed from the options passed to the hook. This could result in unexpected results. Instead prefer to rerender the hook with new options.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12367" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12367/hovercard">#12367</a> <a href="https://github.com/apollographql/apollo-client/commit/e6af35ed30c732ad834e6c524bc9ce5adbe5f706"><code>e6af35e</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>useLazyQuery</code> no longer supports SSR environments and will now throw if the <code>execute</code> function is called in SSR. If you need to run a query in an SSR environment, use <code>useQuery</code> instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12614" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12614/hovercard">#12614</a> <a href="https://github.com/apollographql/apollo-client/commit/d2851e2c74541995760a86904b1e3ab4bd736e62"><code>d2851e2</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Removes the <code>resolvers</code> option from <code>ApolloClient</code>. Local resolvers have instead been moved to the new <code>LocalState</code> instance which is assigned to the <code>localState</code> option in <code>ApolloClient</code>. To migrate, move the <code>resolvers</code> values into a <code>LocalState</code> instance and assign that instance to <code>localState</code>.</p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="new ApolloClient({
- resolvers: { /* ... */ }
+ localState: new LocalState({
+   resolvers: { /* ... */ }
+ }),
});"><pre>new ApolloClient({
<span class="pl-md"><span class="pl-md">-</span> resolvers: { /* ... */ }</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> localState: new LocalState({</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>   resolvers: { /* ... */ }</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> }),</span>
});</pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12475" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12475/hovercard">#12475</a> <a href="https://github.com/apollographql/apollo-client/commit/3de63ebcdf95a87adc31e6b4a39cae5391ed945a"><code>3de63eb</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>client.mutate</code> now returns a <code>MutateResult</code> instead of <code>FetchResult</code>. As a result, the <code>errors</code> property has been removed in favor of <code>error</code> which is set if either a network error occured or GraphQL errors are returned from the server.</p>
<p><code>useMutation</code> now also returns a <code>MutateResult</code> instead of a <code>FetchResult</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12367" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12367/hovercard">#12367</a> <a href="https://github.com/apollographql/apollo-client/commit/e6af35ed30c732ad834e6c524bc9ce5adbe5f706"><code>e6af35e</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The execute function returned from <code>useLazyQuery</code> now only supports the <code>context</code> and <code>variables</code> options. This means that passing options supported by the hook no longer override the hook value.</p>
<p>To change options, rerender the component with new options. These options will take effect with the next query execution.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12384" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12384/hovercard">#12384</a> <a href="https://github.com/apollographql/apollo-client/commit/6aa6fd316cfdb31ebbe3e3133cca2965604e7ca1"><code>6aa6fd3</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>ObservableQuery</code> will no longer terminate on errors and will instead emit a <code>next</code> value with an <code>error</code> property. This ensures that <code>ObservableQuery</code> instances can continue to receive updates after errors are returned in requests without the need to resubscribe to the observable.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12681" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12681/hovercard">#12681</a> <a href="https://github.com/apollographql/apollo-client/commit/b181f98476e635ba3eccab170c09d91f5408060c"><code>b181f98</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Changing most options when rerendering <code>useQuery</code> will no longer trigger a <code>reobserve</code> which may cause network fetches. Instead, the changed options will be applied to the next cache update or fetch.</p>
<p>Options that now trigger a <code>reobserve</code> when changed between renders are:</p>
<ul>
<li><code>query</code></li>
<li><code>variables</code></li>
<li><code>skip</code></li>
<li>Changing <code>fetchPolicy</code> to or from <code>standby</code></li>
</ul>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12787" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12787/hovercard">#12787</a> <a href="https://github.com/apollographql/apollo-client/commit/8ce31fae54b1ae76c557f361cc946858cb2ff66b"><code>8ce31fa</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - Generic arguments for <code>Cache.ReadOptions</code> were flipped from <code>TVariables, TData</code> to <code>TData, TVariables</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12837" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12837/hovercard">#12837</a> <a href="https://github.com/apollographql/apollo-client/commit/7c49fdce2f40571d92c83602bbb1b5bd891f626b"><code>7c49fdc</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - You must now opt in to use GraphQL Codegen data masking types when using Apollo Client's data masking feature. By default, Apollo Client now uses an identity type to apply to masked/unmasked types.</p>
<p>If you're using GraphQL Codegen to generate masked types, opt into the GraphQL Codegen masked types using declaration merging on the <code>TypeOverides</code> interface.</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import { GraphQLCodegenDataMasking } from &quot;@apollo/client/masking&quot;;

declare module &quot;@apollo/client&quot; {
  export interface TypeOverrides
    extends GraphQLCodegenDataMasking.TypeOverrides {}
}"><pre><span class="pl-k">import</span> <span class="pl-kos">{</span> <span class="pl-v">GraphQLCodegenDataMasking</span> <span class="pl-kos">}</span> <span class="pl-k">from</span> <span class="pl-s">"@apollo/client/masking"</span><span class="pl-kos">;</span>

<span class="pl-k">declare</span> module <span class="pl-s">"@apollo/client"</span> <span class="pl-kos">{</span>
  <span class="pl-k">export</span> <span class="pl-k">interface</span> <span class="pl-smi">TypeOverrides</span>
    <span class="pl-k">extends</span> <span class="pl-v">GraphQLCodegenDataMasking</span><span class="pl-kos">.</span><span class="pl-smi">TypeOverrides</span> <span class="pl-kos">{</span><span class="pl-kos">}</span>
<span class="pl-kos">}</span></pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12824" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12824/hovercard">#12824</a> <a href="https://github.com/apollographql/apollo-client/commit/0506f12936d3fe7c840e5d56a5efa20bbce1525e"><code>0506f12</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Ensure the <code>error</code> argument for the <code>delay</code> and <code>attempts</code> functions on <code>RetryLink</code> are an <code>ErrorLike</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12398" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12398/hovercard">#12398</a> <a href="https://github.com/apollographql/apollo-client/commit/8cf5077bed1ab46fdd32c5e253071506c0076064"><code>8cf5077</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Removes the <code>throwServerError</code> utility function. Now that <code>ServerError</code> is an<br>
<code>Error</code> subclass, you can throw these errors directly:</p>
<div class="highlight highlight-source-js notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import { ServerError } from &quot;@apollo/client&quot;;

// instead of
throwServerError(response, result, &quot;error message&quot;);

// Use
throw new ServerError(&quot;error message&quot;, { response, result });"><pre><span class="pl-k">import</span> <span class="pl-kos">{</span> <span class="pl-v">ServerError</span> <span class="pl-kos">}</span> <span class="pl-k">from</span> <span class="pl-s">"@apollo/client"</span><span class="pl-kos">;</span>

<span class="pl-c">// instead of</span>
<span class="pl-en">throwServerError</span><span class="pl-kos">(</span><span class="pl-s1">response</span><span class="pl-kos">,</span> <span class="pl-s1">result</span><span class="pl-kos">,</span> <span class="pl-s">"error message"</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

<span class="pl-c">// Use</span>
<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-v">ServerError</span><span class="pl-kos">(</span><span class="pl-s">"error message"</span><span class="pl-kos">,</span> <span class="pl-kos">{</span> response<span class="pl-kos">,</span> result <span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span></pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12837" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12837/hovercard">#12837</a> <a href="https://github.com/apollographql/apollo-client/commit/7c49fdce2f40571d92c83602bbb1b5bd891f626b"><code>7c49fdc</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The types mode for data masking has been removed. Adding a types mode to the <code>DataMasking</code> interface has no effect. Remove the <code>mode</code> key in the module where you declare the <code>DataMasking</code> type for the <code>@apollo/client</code> module.</p>
<p>As a result, the <code>Masked</code> and <code>MaskedDocumentNode</code> types have also been removed since these have no effect when types are preserved.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12304" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12304/hovercard">#12304</a> <a href="https://github.com/apollographql/apollo-client/commit/86469a25abb72dbd68adff3554e3909036e77eee"><code>86469a2</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The <code>Cache.DiffResult&lt;T&gt;</code> type is now a union type with better type safety for both complete and partial results. Checking <code>diff.complete</code> will now narrow the type of <code>result</code> depending on whether the value is <code>true</code> or <code>false</code>.</p>
<p>When <code>true</code>, <code>diff.result</code> will be a non-null value equal to the <code>T</code> generic type. When <code>false</code>, <code>diff.result</code> now reports <code>result</code> as <code>DeepPartial&lt;T&gt; | null</code> indicating that fields in the result may be missing (<code>DeepPartial&lt;T&gt;</code>) or empty entirely (<code>null</code>).</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12731" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12731/hovercard">#12731</a> <a href="https://github.com/apollographql/apollo-client/commit/0198870107eab7ad0bc69a549cb069fa41b3280f"><code>0198870</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - Ship React Compiler compiled React hooks in <code>@apollo/client/react/compiled</code>.</p>
<p>We now ship a React-Compiler compiled version of the React hooks in<br>
<code>@apollo/client/react/compiled</code>.</p>
<p>This entry point contains everything that <code>@apollo/client/react</code> does,<br>
so you can use it as a drop-in replacement in your whole application<br>
if you choose to use the compiled hooks.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12446" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12446/hovercard">#12446</a> <a href="https://github.com/apollographql/apollo-client/commit/ab920d2701aa276482dbc78b44a1c25c76467bc9"><code>ab920d2</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Removes the <code>defaultOptions</code> option from <code>useQuery</code>. Use options directly or use the global <code>ApolloClient</code> <code>defaultOptions</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12649" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12649/hovercard">#12649</a> <a href="https://github.com/apollographql/apollo-client/commit/0be92ad51cf8de444fa1cc507bab2c21d230a44e"><code>0be92ad</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove the deprecated <code>QueryReference</code> type. Please use <code>QueryRef</code> instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12396" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12396/hovercard">#12396</a> <a href="https://github.com/apollographql/apollo-client/commit/00f3d0a674eede1f909092283041cf8ac8d1b576"><code>00f3d0a</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove the <code>errors</code> property from the results emitted from <code>ObservableQuery</code> or returned from <code>client.query</code>. Read errors from the <code>error</code> property instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12367" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12367/hovercard">#12367</a> <a href="https://github.com/apollographql/apollo-client/commit/e6af35ed30c732ad834e6c524bc9ce5adbe5f706"><code>e6af35e</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The result resolved from the promise returned from the execute function in <code>useLazyQuery</code> is now an <code>ApolloQueryResult</code> type and no longer includes all the fields returned from the <code>useLazyQuery</code> hook tuple.</p>
<p>If you need access to the additional properties such as <code>called</code>, <code>refetch</code>, etc. not included in <code>ApolloQueryResult</code>, read them from the hook instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12531" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12531/hovercard">#12531</a> <a href="https://github.com/apollographql/apollo-client/commit/7784b46117a4f91a270a020ed1a24f042cb9ee17"><code>7784b46</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Mocked responses passed to <code>MockLink</code> now accept a callback for the <code>request.variables</code> option. This is used to determine if the mock should be matched for a set of request variables. With this change, the <code>variableMatcher</code> option has been removed in favor of passing a callback to <code>variables</code>. Update by moving the callback function from <code>variableMatcher</code> to <code>request.variables</code>.</p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="new MockLink([
  {
    request: {
      query,
+     variables: (requestVariables) =&gt; true
    },
-   variableMatcher: (requestVariables) =&gt; true
  }
]);"><pre>new MockLink([
  {
    request: {
      query,
<span class="pl-mi1"><span class="pl-mi1">+</span>     variables: (requestVariables) =&gt; true</span>
    },
<span class="pl-md"><span class="pl-md">-</span>   variableMatcher: (requestVariables) =&gt; true</span>
  }
]);</pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12793" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12793/hovercard">#12793</a> <a href="https://github.com/apollographql/apollo-client/commit/24e98a16648d4c21f37ba51a678a8849f88174ea"><code>24e98a1</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - <code>ApolloConsumer</code> has been removed - please use <code>useApolloClient</code> instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12714" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12714/hovercard">#12714</a> <a href="https://github.com/apollographql/apollo-client/commit/0e394692eaf0f8d8e506d8304935deafa952accf"><code>0e39469</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - Rework option handling for <code>fetchMore</code>.</p>
<ul>
<li>Previously, if the <code>query</code> option was specified, no options would be inherited<br>
from the underlying <code>ObservableQuery</code>.<br>
Now, even if <code>query</code> is specified, all unspecified options except for <code>variables</code> will be inherited from the underlying <code>ObservableQuery</code>.</li>
<li>If <code>query</code> is not specified, <code>variables</code> will still be shallowly merged with the <code>variables</code> of the underlying <code>ObservableQuery</code>. If a <code>query</code> option is specified, the <code>variables</code> passed to <code>fetchMore</code> are used instead.</li>
<li><code>errorPolicy</code> of <code>fetchMore</code> will now always default to <code>"none"</code> instead of inherited from the <code>ObservableQuery</code> options. This can prevent accidental cache writes of partial data for a paginated query. To opt into receive partial data that may be written to the cache, pass an <code>errorPolicy</code> to <code>fetchMore</code> to override the default.</li>
</ul>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12614" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12614/hovercard">#12614</a> <a href="https://github.com/apollographql/apollo-client/commit/d2851e2c74541995760a86904b1e3ab4bd736e62"><code>d2851e2</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove local resolvers APIs from <code>ApolloClient</code> in favor of <code>localState</code>. Methods removed are:</p>
<ul>
<li><code>addResolvers</code></li>
<li><code>getResolvers</code></li>
<li><code>setResolvers</code></li>
<li><code>setLocalStateFragmentMatcher</code></li>
</ul>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12576" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12576/hovercard">#12576</a> <a href="https://github.com/apollographql/apollo-client/commit/a92ff780abee60896bb9632867e90c82d0829255"><code>a92ff78</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>ApolloLink.execute</code> now requires a third argument which provides the <code>client</code> that initiated the request to the link chain. If you use <code>execute</code> directly, add a third argument with a <code>client</code> property:</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="ApolloLink.execute(link, operation, { client });

// or if you import the `execute` function directly:
execute(link, operation, { client });"><pre><span class="pl-v">ApolloLink</span><span class="pl-kos">.</span><span class="pl-en">execute</span><span class="pl-kos">(</span><span class="pl-s1">link</span><span class="pl-kos">,</span> <span class="pl-s1">operation</span><span class="pl-kos">,</span> <span class="pl-kos">{</span> client <span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

<span class="pl-c">// or if you import the `execute` function directly:</span>
<span class="pl-en">execute</span><span class="pl-kos">(</span><span class="pl-s1">link</span><span class="pl-kos">,</span> <span class="pl-s1">operation</span><span class="pl-kos">,</span> <span class="pl-kos">{</span> client <span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span></pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12526" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12526/hovercard">#12526</a> <a href="https://github.com/apollographql/apollo-client/commit/391af1dd733219b7e1e14cfff9d5e3ce3967242f"><code>391af1d</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - The <code>@apollo/client</code> and <code>@apollo/client/core</code> entry points are now equal.<br>
In the next major, the <code>@apollo/client/core</code> entry point will be removed.<br>
Please change imports over from <code>@apollo/client/core</code> to <code>@apollo/client</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12700" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12700/hovercard">#12700</a> <a href="https://github.com/apollographql/apollo-client/commit/8e96e0862c306df17c09c232704041196a72a466"><code>8e96e08</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - Added a new <code>Streaming</code> type that will mark <code>data</code> in results while <code>dataState</code><br>
is <code>"streaming"</code>.</p>
<p><code>Streaming&lt;TData&gt;</code> defaults to <code>TData</code>, but can be overwritten in userland to<br>
integrate with different codegen dialects.</p>
<p>You can override this type globally - this example shows how to override it<br>
with <code>DeepPartial&lt;TData&gt;</code>:</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import { HKT, DeepPartial } from &quot;@apollo/client/utilities&quot;;

type StreamingOverride&lt;TData&gt; = DeepPartial&lt;TData&gt;;

interface StreamingOverrideHKT extends HKT {
  return: StreamingOverride&lt;this[&quot;arg1&quot;]&gt;;
}

declare module &quot;@apollo/client&quot; {
  export interface TypeOverrides {
    Streaming: StreamingOverrideHKT;
  }
}"><pre><span class="pl-k">import</span> <span class="pl-kos">{</span> <span class="pl-c1">HKT</span><span class="pl-kos">,</span> <span class="pl-v">DeepPartial</span> <span class="pl-kos">}</span> <span class="pl-k">from</span> <span class="pl-s">"@apollo/client/utilities"</span><span class="pl-kos">;</span>

<span class="pl-k">type</span> <span class="pl-smi">StreamingOverride</span><span class="pl-c1">&lt;</span><span class="pl-smi">TData</span><span class="pl-c1">&gt;</span> <span class="pl-c1">=</span> <span class="pl-smi">DeepPartial</span><span class="pl-c1">&lt;</span><span class="pl-smi">TData</span><span class="pl-c1">&gt;</span><span class="pl-kos">;</span>

<span class="pl-k">interface</span> <span class="pl-smi">StreamingOverrideHKT</span> <span class="pl-k">extends</span> <span class="pl-smi">HKT</span> <span class="pl-kos">{</span>
  <span class="pl-c1">return</span>: <span class="pl-smi">StreamingOverride</span><span class="pl-c1">&lt;</span>this<span class="pl-kos">[</span><span class="pl-s">"arg1"</span><span class="pl-kos">]</span><span class="pl-c1">&gt;</span><span class="pl-kos">;</span>
<span class="pl-kos">}</span>

<span class="pl-k">declare</span> module <span class="pl-s">"@apollo/client"</span> <span class="pl-kos">{</span>
  <span class="pl-k">export</span> <span class="pl-k">interface</span> <span class="pl-smi">TypeOverrides</span> <span class="pl-kos">{</span>
    <span class="pl-c1">Streaming</span>: <span class="pl-smi">StreamingOverrideHKT</span><span class="pl-kos">;</span>
  <span class="pl-kos">}</span>
<span class="pl-kos">}</span></pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12367" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12367/hovercard">#12367</a> <a href="https://github.com/apollographql/apollo-client/commit/e6af35ed30c732ad834e6c524bc9ce5adbe5f706"><code>e6af35e</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>useLazyQuery</code> will no longer rerender with the loading state when calling the execute function the first time unless the <code>notifyOnNetworkStatusChange</code> option is set to <code>true</code> (which is the new default).</p>
<p>If you prefer the behavior from 3.x, rerender the component with<br>
<code>notifyOnNetworkStatusChange</code> set to <code>false</code> after the execute function is<br>
called the first time.</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="function MyComponent() {
  const [notifyOnNetworkStatusChange, setNotifyOnNetworkStatusChange] =
    useState(true);
  const [execute] = useLazyQuery(query, { notifyOnNetworkStatusChange });

  async function runExecute() {
    await execute();

    // Set to false after the initial fetch to stop receiving notifications
    // about changes to the loading states.
    setNotifyOnNetworkStatusChange(false);
  }

  // ...
}"><pre><span class="pl-k">function</span> <span class="pl-v">MyComponent</span><span class="pl-kos">(</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
  <span class="pl-k">const</span> <span class="pl-kos">[</span><span class="pl-s1">notifyOnNetworkStatusChange</span><span class="pl-kos">,</span> <span class="pl-s1">setNotifyOnNetworkStatusChange</span><span class="pl-kos">]</span> <span class="pl-c1">=</span>
    <span class="pl-en">useState</span><span class="pl-kos">(</span><span class="pl-c1">true</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
  <span class="pl-k">const</span> <span class="pl-kos">[</span><span class="pl-s1">execute</span><span class="pl-kos">]</span> <span class="pl-c1">=</span> <span class="pl-en">useLazyQuery</span><span class="pl-kos">(</span><span class="pl-s1">query</span><span class="pl-kos">,</span> <span class="pl-kos">{</span> notifyOnNetworkStatusChange <span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

  <span class="pl-k">async</span> <span class="pl-k">function</span> <span class="pl-en">runExecute</span><span class="pl-kos">(</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
    <span class="pl-k">await</span> <span class="pl-en">execute</span><span class="pl-kos">(</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

    <span class="pl-c">// Set to false after the initial fetch to stop receiving notifications</span>
    <span class="pl-c">// about changes to the loading states.</span>
    <span class="pl-en">setNotifyOnNetworkStatusChange</span><span class="pl-kos">(</span><span class="pl-c1">false</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
  <span class="pl-kos">}</span>

  <span class="pl-c">// ...</span>
<span class="pl-kos">}</span></pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12475" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12475/hovercard">#12475</a> <a href="https://github.com/apollographql/apollo-client/commit/3de63ebcdf95a87adc31e6b4a39cae5391ed945a"><code>3de63eb</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Mutations no longer report errors if the GraphQL result from the server contains an empty array of errors.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12254" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12254/hovercard">#12254</a> <a href="https://github.com/apollographql/apollo-client/commit/0028ac0147aaea9ab559f15630200a132b43da42"><code>0028ac0</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Changes the default <code>Accept</code> header to <code>application/graphql-response+json</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12633" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12633/hovercard">#12633</a> <a href="https://github.com/apollographql/apollo-client/commit/9bfb51fdbca69560da71f9012c74ee172b6c2b69"><code>9bfb51f</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - If the <code>execute</code> function of <code>useLazyQuery</code> is executed, previously started queries<br>
from the same <code>useLazyQuery</code> usage will be rejected with an <code>AbortError</code> unless<br>
<code>.retain()</code> is called on the promise returned by previous <code>execute</code> calls.</p>
<p>Please keep in mind that <code>useLazyQuery</code> is primarily meant as a means to synchronize<br>
your component to the status of a query and that it's purpose it not to make a<br>
series of network calls.<br>
If you plan on making a series of network calls without the need to synchronize<br>
the result with your component, consider using <code>ApolloClient.query</code> instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12513" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12513/hovercard">#12513</a> <a href="https://github.com/apollographql/apollo-client/commit/9c3207c44ddad1f8b845c09495d6c070ace8de7b"><code>9c3207c</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - Removed the <code>@apollo/client/react/parser</code> entry point. There is no replacement.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12430" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12430/hovercard">#12430</a> <a href="https://github.com/apollographql/apollo-client/commit/2ff66d06b6d444fbcb46e580ac40e673e695740f"><code>2ff66d0</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>ObservableQuery.setVariables</code> will now resolve with the last emitted result instead of <code>undefined</code> when either the variables match the current variables or there are no subscribers to the query.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12685" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12685/hovercard">#12685</a> <a href="https://github.com/apollographql/apollo-client/commit/3b748003df89ec69a6ad045fb47bbe9c3e62104c"><code>3b74800</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove the check and warning for <code>cache.fragmentMatches</code> when applying data masking. <code>cache.fragmentMatches</code> is a required API and data masking may crash when <code>cache.fragmentMatches</code> does not exist.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12385" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12385/hovercard">#12385</a> <a href="https://github.com/apollographql/apollo-client/commit/cad511723a1b8b0ac2042cf49435f7affb0dc4e4"><code>cad5117</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - Apollo Client now defaults to production mode, not development mode, if the<br>
environment cannot be determined.</p>
<p>In modern bundlers, this should automatically be handled by the bundler loading<br>
the bundler with the <code>development</code> export condition.</p>
<p>If neither the <code>production</code> nor the <code>development</code> export condition are<br>
used by the bundler/runtime, Apollo Client will fall back to <code>globalThis.__DEV__</code><br>
to determine if it should run in production or development mode.</p>
<p>Unlike Apollo Client 3 though, if <code>globalThis.__DEV__</code> is not set to <code>true</code>,<br>
Apollo Client will now default to <code>production</code>, not to <code>development</code>, behaviour.</p>
<p>This switch to <em>explicilty</em> requiring <code>true</code> also resolves a situation where<br>
an HTML element with <code>id="__DEV__"</code> would create a global <code>__DEV__</code> variable<br>
with a referent to the DOM element, which in the past was picked up as "truthy" and<br>
would have triggered development mode.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12644" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12644/hovercard">#12644</a> <a href="https://github.com/apollographql/apollo-client/commit/fe2f005c34913ae082b96a807dc240e2785d50bd"><code>fe2f005</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Change the default <code>Accept</code> header to <code>application/graphql-response+json,application/json;q=0.9</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12476" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12476/hovercard">#12476</a> <a href="https://github.com/apollographql/apollo-client/commit/6afff60beece953406af2cbe07f7ccbf973cadaa"><code>6afff60</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Unify error behavior on subscriptions for GraphQL errors and network errors by ensuring network errors are subject to the <code>errorPolicy</code>. Network errors that terminate the connection will now be emitted on the <code>error</code> property passed to the <code>next</code> callback followed by a call to the <code>complete</code> callback.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12499" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12499/hovercard">#12499</a> <a href="https://github.com/apollographql/apollo-client/commit/ce35ea2b3a87d6dd6757e9be50ecc42837bebe56"><code>ce35ea2</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - Enable React compiler for hooks in ESM builds.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12367" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12367/hovercard">#12367</a> <a href="https://github.com/apollographql/apollo-client/commit/e6af35ed30c732ad834e6c524bc9ce5adbe5f706"><code>e6af35e</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The <code>reobserve</code> option is no longer available in the result returned from <code>useLazyQuery</code>. This was considered an internal API and should not be used directly.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12333" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12333/hovercard">#12333</a> <a href="https://github.com/apollographql/apollo-client/commit/3e4beaa8b768a893da80aae0428f79ee01d6aa38"><code>3e4beaa</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Fix type of <code>data</code> property on <code>ApolloQueryResult</code>. Previously this field was non-optional, non-null <code>TData</code>, however at runtime this value could be set to <code>undefined</code>. This field is now reported as <code>TData | undefined</code>.</p>
<p>This will affect you in a handful of places:</p>
<ul>
<li>The <code>data</code> property emitted from the result passed to the <code>next</code> callback from <code>client.watchQuery</code></li>
<li>Fetch-based APIs that return an <code>ApolloQueryResult</code> type such as <code>observableQuery.refetch</code>, <code>observableQuery.fetchMore</code>, etc.</li>
</ul>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12644" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12644/hovercard">#12644</a> <a href="https://github.com/apollographql/apollo-client/commit/fe2f005c34913ae082b96a807dc240e2785d50bd"><code>fe2f005</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>HttpLink</code> and <code>BatchHttpLink</code> no longer emit a <code>next</code> notification with the JSON-parsed response body when a well-formed GraphQL response is returned and a <code>ServerError</code> is thrown.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12742" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12742/hovercard">#12742</a> <a href="https://github.com/apollographql/apollo-client/commit/575bf3ed5885efb09c1eec497af4d2690c6b87d4"><code>575bf3e</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The <code>operation</code> argument to the callback passed to <code>SetContextLink</code> is now of type <code>SetContextLink.SetContextOperation</code> which is an <code>Operation</code> without the <code>getContext</code> or <code>setContext</code> functions. Previously the type of <code>operation</code> was <code>GraphQLRequest</code> which had access to a <code>context</code> property. The <code>context</code> property was always <code>undefined</code> and could result in bugs when using it instead of the <code>prevContext</code> argument.</p>
<p>This change means the <code>operation</code> argument now contains an accessible <code>client</code> property.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12639" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12639/hovercard">#12639</a> <a href="https://github.com/apollographql/apollo-client/commit/1bdf4893abb173c97877c71012afa15f9d3da8e6"><code>1bdf489</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Move internal testing utilities in <code>@apollo/client/testing</code> to <code>@apollo/client/testing/internal</code> and remove deprecated testing utilities. Some of the testing utilities exported from the <code>@apollo/client/testing</code> endpoint were not considered stable. As a result of this change, testing utilities or types exported from <code>@apollo/client/testing</code> are now considered stable and will not undergo breaking changes.</p>
<p>The following APIs were removed. To migrate, update usages of the following APIs as such:</p>
<p><strong><code>createMockClient</code></strong></p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="- const client = createMockClient(data, query, variables);
+ const client = new ApolloClient({
+   cache: new InMemoryCache(),
+   link: new MockLink([
+     {
+       request: { query, variables },
+       result: { data },
+     }
+   ]),
+ });"><pre><span class="pl-md"><span class="pl-md">-</span> const client = createMockClient(data, query, variables);</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> const client = new ApolloClient({</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>   cache: new InMemoryCache(),</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>   link: new MockLink([</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>     {</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>       request: { query, variables },</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>       result: { data },</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>     }</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>   ]),</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> });</span></pre></div>
<p><strong><code>mockObservableLink</code></strong></p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="- const link = mockObservableLink();
+ const link = new MockSubscriptionLink();"><pre><span class="pl-md"><span class="pl-md">-</span> const link = mockObservableLink();</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> const link = new MockSubscriptionLink();</span></pre></div>
<p><strong><code>mockSingleLink</code></strong></p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="- const link = mockSingleLink({
-   request: { query, variables },
-   result: { data },
- });
+ const link = new MockLink([
+   {
+     request: { query, variables },
+     result: { data },
+   }
+ ]);"><pre><span class="pl-md"><span class="pl-md">-</span> const link = mockSingleLink({</span>
<span class="pl-md"><span class="pl-md">-</span>   request: { query, variables },</span>
<span class="pl-md"><span class="pl-md">-</span>   result: { data },</span>
<span class="pl-md"><span class="pl-md">-</span> });</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> const link = new MockLink([</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>   {</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>     request: { query, variables },</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>     result: { data },</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>   }</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> ]);</span></pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12614" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12614/hovercard">#12614</a> <a href="https://github.com/apollographql/apollo-client/commit/d2851e2c74541995760a86904b1e3ab4bd736e62"><code>d2851e2</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Third-party caches must now implement the <code>fragmentMatches</code> API. Additionally <code>fragmentMatches</code> must be able to handle both <code>InlineFragmentNode</code> and <code>FragmentDefinitionNode</code> nodes.</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="class MyCache extends ApolloCache {
  // This is now required
  public fragmentMatches(
    fragment: InlineFragmentNode | FragmentDefinitionNode,
    typename: string
  ): boolean {
    return; // ... logic to determine if typename matches fragment
  }
}"><pre><span class="pl-k">class</span> <span class="pl-smi">MyCache</span> <span class="pl-k">extends</span> <span class="pl-v">ApolloCache</span> <span class="pl-kos">{</span>
  <span class="pl-c">// This is now required</span>
  <span class="pl-k">public</span> <span class="pl-en">fragmentMatches</span><span class="pl-kos">(</span>
    <span class="pl-s1">fragment</span>: <span class="pl-smi">InlineFragmentNode</span> <span class="pl-c1">|</span> <span class="pl-smi">FragmentDefinitionNode</span><span class="pl-kos">,</span>
    <span class="pl-s1">typename</span>: <span class="pl-smi">string</span>
  <span class="pl-kos">)</span>: <span class="pl-smi">boolean</span> <span class="pl-kos">{</span>
    <span class="pl-k">return</span><span class="pl-kos">;</span> <span class="pl-c">// ... logic to determine if typename matches fragment</span>
  <span class="pl-kos">}</span>
<span class="pl-kos">}</span></pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12367" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12367/hovercard">#12367</a> <a href="https://github.com/apollographql/apollo-client/commit/e6af35ed30c732ad834e6c524bc9ce5adbe5f706"><code>e6af35e</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The promise returned when calling the execute function from <code>useLazyQuery</code> will now reject when using an <code>errorPolicy</code> of <code>none</code> when GraphQL errors are returned from the result.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12684" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12684/hovercard">#12684</a> <a href="https://github.com/apollographql/apollo-client/commit/e697431a9995fd1900e625c30a9065edd71111d9"><code>e697431</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove <code>context</code> from <code>useLazyQuery</code> hook options. If used, <code>context</code> must now be provided to the <code>execute</code> function. <code>context</code> will reset to <code>{}</code> if not provided as an option to <code>execute</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12704" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12704/hovercard">#12704</a> <a href="https://github.com/apollographql/apollo-client/commit/45dba43b6ba0c306aad8cfbcfd4029265f5e9106"><code>45dba43</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The <code>ErrorResponse</code> object passed to the <code>disable</code> and <code>retry</code> callback options provided to <code>createPersistedQueryLink</code> no longer provides separate <code>graphQLErrors</code> and <code>networkError</code> properties and instead have been combined to a single <code>error</code> property of type <code>ErrorLike</code>.</p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="// The following also applies to the `retry` function since it has the same signature
createPersistedQueryLink({
- disable: ({ graphQLErrors, networkError }) =&gt; {
+ disable: ({ error }) =&gt; {
-   if (graphQLErrors) {
+   if (CombinedGraphQLErrors.is(error)) {
      // ... handle GraphQL errors
    }

-   if (networkError) {
+   if (error) {
      // ... handle link errors
    }

    // optionally check for a specific kind of error
-   if (networkError) {
+   if (ServerError.is(error)) {
      // ... handle a server error
    }
});"><pre>// The following also applies to the `retry` function since it has the same signature
createPersistedQueryLink({
<span class="pl-md"><span class="pl-md">-</span> disable: ({ graphQLErrors, networkError }) =&gt; {</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> disable: ({ error }) =&gt; {</span>
<span class="pl-md"><span class="pl-md">-</span>   if (graphQLErrors) {</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>   if (CombinedGraphQLErrors.is(error)) {</span>
      // ... handle GraphQL errors
    }

<span class="pl-md"><span class="pl-md">-</span>   if (networkError) {</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>   if (error) {</span>
      // ... handle link errors
    }

    // optionally check for a specific kind of error
<span class="pl-md"><span class="pl-md">-</span>   if (networkError) {</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>   if (ServerError.is(error)) {</span>
      // ... handle a server error
    }
});</pre></div>
<p>The <code>response</code> property has also been renamed to <code>result</code>.</p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="createPersistedQueryLink({
-  disable: ({ response }) =&gt; {
+  disable: ({ result }) =&gt; {
      // ... handle GraphQL errors
    }
  }
});"><pre>createPersistedQueryLink({
<span class="pl-md"><span class="pl-md">-</span>  disable: ({ response }) =&gt; {</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>  disable: ({ result }) =&gt; {</span>
      // ... handle GraphQL errors
    }
  }
});</pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12823" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12823/hovercard">#12823</a> <a href="https://github.com/apollographql/apollo-client/commit/19e315e316ae458913f4d11961b0a2a365df0a19"><code>19e315e</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Move all 1st party link types into a namespace.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12223" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12223/hovercard">#12223</a> <a href="https://github.com/apollographql/apollo-client/commit/69c1cb6f831941598987185238a299b050a364bd"><code>69c1cb6</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove <code>subscribeAndCount</code> testing utility from <code>@apollo/client/testing</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12300" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12300/hovercard">#12300</a> <a href="https://github.com/apollographql/apollo-client/commit/4d581e4f5a3c5409e5f06a5f164beabdada150f1"><code>4d581e4</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Moves all React-related exports to the <code>@apollo/client/react</code> entrypoint and out of the main <code>@apollo/client</code> entrypoint. This prevents the need to install React in order to use the core client.</p>
<p>The following is a list of exports available in <code>@apollo/client</code> that should now import from <code>@apollo/client/react</code>.</p>
<ul>
<li><code>ApolloConsumer</code></li>
<li><code>ApolloProvider</code></li>
<li><code>createQueryPreloader</code></li>
<li><code>getApolloContext</code></li>
<li><code>skipToken</code></li>
<li><code>useApolloClient</code></li>
<li><code>useBackgroundQuery</code></li>
<li><code>useFragment</code></li>
<li><code>useLazyQuery</code></li>
<li><code>useLoadableQuery</code></li>
<li><code>useMutation</code></li>
<li><code>useQuery</code></li>
<li><code>useQueryRefHandlers</code></li>
<li><code>useReactiveVar</code></li>
<li><code>useReadQuery</code></li>
<li><code>useSubscription</code></li>
<li><code>useSuspenseQuery</code></li>
</ul>
<p>The following is a list of exports available in <code>@apollo/client/testing</code> that should now import from <code>@apollo/client/testing/react</code>:</p>
<ul>
<li><code>MockedProvider</code></li>
</ul>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12525" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12525/hovercard">#12525</a> <a href="https://github.com/apollographql/apollo-client/commit/87851863b94eebbc208671b17aeca73748ac41f6"><code>8785186</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Throw an error when a client-only query is used in a mocked response passed to <code>MockLink</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12588" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12588/hovercard">#12588</a> <a href="https://github.com/apollographql/apollo-client/commit/eed825a2549f1d21fff2ec179815206b3baf0fcb"><code>eed825a</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove <code>TContext</code> generic argument from all types that use it. <code>TContext</code> is replaced with <code>DefaultContext</code> which can be modified using declaration merging.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12647" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12647/hovercard">#12647</a> <a href="https://github.com/apollographql/apollo-client/commit/a70fac6dd8f26b46c813723a7206e55bfb677690"><code>a70fac6</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - <code>ObservableQuery</code>s will now only be registered with the <code>ApolloClient</code> while they<br>
have subscribers.</p>
<p>That means that <code>ApolloClient.getObservableQueries</code> and <code>ApolloClient.refetchQueries</code><br>
will only be able to return/refetch queries that have at least one subscriber.</p>
<p>This changes the previous meaning of <code>active</code> and <code>inactive</code> queries:</p>
<ul>
<li><code>inactive</code> queries are queries with a subscriber that are skipped from a<br>
React hook or have a <code>fetchPolicy</code> of <code>standby</code></li>
<li><code>active</code> queries are queries with at least one subscriber that are not skipped or in <code>standby</code>.</li>
</ul>
<p><code>ObservableQuery</code>s without subscribers but with an active ongoing network request<br>
(e.g. caused by calling <code>reobserve</code>) will be handled as if they had a subscriber<br>
for the duration of the query.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12809" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12809/hovercard">#12809</a> <a href="https://github.com/apollographql/apollo-client/commit/e2a0be8c3f8b242706f90e0dcc022628992a8ae8"><code>e2a0be8</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>transformOperation</code> and <code>validateOperation</code> have been removed and are no longer exported from <code>@apollo/client/link/utils</code>. These utilities have been merged into the implementation of <code>createOperation</code>. As a result, <code>createOperation</code> now returns a well-formed <code>Operation</code> object. Previously <code>createOperation</code> relied on an external call to <code>transformOperation</code> to provide a well-formed <code>Operation</code> type. If you use <code>createOperation</code> directly, remove the calls to <code>transformOperation</code> and <code>validateOperation</code> and pass the request directly.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12428" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12428/hovercard">#12428</a> <a href="https://github.com/apollographql/apollo-client/commit/abed92225fd2a5d2a0a2298893a1170df1cd7400"><code>abed922</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Removes the <code>urql</code> multipart subscriptions utilities. Use the native multipart subscriptions support in <code>urql</code> instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12590" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12590/hovercard">#12590</a> <a href="https://github.com/apollographql/apollo-client/commit/a005e822de7b24783f85be45df142ffbb9bc561b"><code>a005e82</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Drop <code>graphql</code> v15 as a valid peer dependency.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12678" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12678/hovercard">#12678</a> <a href="https://github.com/apollographql/apollo-client/commit/91a876b059042828e431931e7a3c2e0365c387b8"><code>91a876b</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>queryRef</code>s created by <code>preloadQuery</code> no longer have a <code>.toPromise()</code> function. Instead <code>preloadQuery</code> now has a <code>toPromise</code> function that accepts a queryRef and will resolve when the underlying promise has been resolved.</p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="const queryRef = preloadQuery(query, options);

- await queryRef.toPromise();
+ await preloadQuery.toPromise(queryRef);"><pre>const queryRef = preloadQuery(query, options);

<span class="pl-md"><span class="pl-md">-</span> await queryRef.toPromise();</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> await preloadQuery.toPromise(queryRef);</span></pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12556" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12556/hovercard">#12556</a> <a href="https://github.com/apollographql/apollo-client/commit/c3fceda86c5e0f499d0b5fa54ea7dc4c4391ae2c"><code>c3fceda</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - Reworked the logic for then a loading state is triggered. If the link chain responds synchronously, a loading state will be omitted, otherwise it will be triggered.<br>
If local resolvers are used, the time window for "sync vs async" starts as soon as <code>@exports</code> variables are resolved.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12637" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12637/hovercard">#12637</a> <a href="https://github.com/apollographql/apollo-client/commit/d2a60d45e734a2518dad2443f85d82553cd6456a"><code>d2a60d4</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - <code>useQuery</code>: only advance <code>previousData</code> if <code>data</code> actually changed</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12478" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12478/hovercard">#12478</a> <a href="https://github.com/apollographql/apollo-client/commit/5ea6a45b3ec2f0d526abe78ae03c42bb519f87c7"><code>5ea6a45</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove deprecated <code>onSubscriptionData</code> and <code>onSubscriptionComplete</code> callbacks from <code>useSubscription</code>. Use <code>onData</code> and <code>onComplete</code> instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12384" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12384/hovercard">#12384</a> <a href="https://github.com/apollographql/apollo-client/commit/6aa6fd316cfdb31ebbe3e3133cca2965604e7ca1"><code>6aa6fd3</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Switch to <a href="https://rxjs.dev/" rel="nofollow">RxJS</a> as the observable implementation. <code>rxjs</code> is now a peer dependency of Apollo Client which means you will now need to install <code>rxjs</code> in addition to <code>@apollo/client</code>.</p>
<p>This change is mostly transparent, however transforming values on observables, common in link implementations, differs in RxJS vs <code>zen-observable</code>. For example, you could modify values in the link chain emitted from a downstream link by using the <code>.map</code> function. In RxJS, this is done with the <code>.pipe</code> function and passing a <code>map</code> operator instead.</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import { map } from &quot;rxjs&quot;;

const link new ApolloLink((operation, forward) =&gt; {
  return forward(operation).pipe(
    map((result) =&gt; performTransform(result))
  );
});"><pre><span class="pl-k">import</span> <span class="pl-kos">{</span> <span class="pl-s1">map</span> <span class="pl-kos">}</span> <span class="pl-k">from</span> <span class="pl-s">"rxjs"</span><span class="pl-kos">;</span>

<span class="pl-k">const</span> <span class="pl-s1">link</span><span class="pl-kos"></span> <span class="pl-k">new</span> <span class="pl-v">ApolloLink</span><span class="pl-kos">(</span><span class="pl-kos">(</span><span class="pl-s1">operation</span><span class="pl-kos">,</span> <span class="pl-s1">forward</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
  <span class="pl-k">return</span> <span class="pl-en">forward</span><span class="pl-kos">(</span><span class="pl-s1">operation</span><span class="pl-kos">)</span><span class="pl-kos">.</span><span class="pl-en">pipe</span><span class="pl-kos">(</span>
    <span class="pl-en">map</span><span class="pl-kos">(</span><span class="pl-kos">(</span><span class="pl-s1">result</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-en">performTransform</span><span class="pl-kos">(</span><span class="pl-s1">result</span><span class="pl-kos">)</span><span class="pl-kos">)</span>
  <span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span></pre></div>
<p>For a full list of operators and comprehensive documentation on the capabilities of RxJS, check out the <a href="https://rxjs.dev/" rel="nofollow">documentation</a>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12442" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12442/hovercard">#12442</a> <a href="https://github.com/apollographql/apollo-client/commit/c5ead08d0f10ddd6232b742defe9620533bf41e6"><code>c5ead08</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove the deprecated <code>canonizeResults</code> option. It was prone to memory leaks. As such, some results that were referentially equal when <code>canonizeResults</code> option was set to <code>true</code> no longer retain the same object identity.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12809" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12809/hovercard">#12809</a> <a href="https://github.com/apollographql/apollo-client/commit/e2a0be8c3f8b242706f90e0dcc022628992a8ae8"><code>e2a0be8</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The request handler provided to <code>ApolloLink</code> must now return an <code>Observable</code>. <code>null</code> is no longer supported as a valid return value. If you rely on <code>null</code> so that <code>ApolloLink</code> provides an empty observable, use the <code>EMPTY</code> observable from RxJS instead:</p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import { ApolloLink } from &quot;@apollo/client&quot;;
+ import { EMPTY } from &quot;rxjs&quot;;

const link = new ApolloLink((operation, forward) =&gt; {
- return null;
+ return EMPTY;
});"><pre>import { ApolloLink } from "@apollo/client";
<span class="pl-mi1"><span class="pl-mi1">+</span> import { EMPTY } from "rxjs";</span>

const link = new ApolloLink((operation, forward) =&gt; {
<span class="pl-md"><span class="pl-md">-</span> return null;</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> return EMPTY;</span>
});</pre></div>
<p>If you have a custom link that overrides the <code>request</code> method, remove <code>null</code> from the return signature:</p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="class MyCustomLink extends ApolloLink {
  request(
    operation: ApolloLink.Operation,
    forward: ApolloLink.ForwardFunction,
- ): Observable&lt;ApolloLink.Result&gt; | null {
+ ): Observable&lt;ApolloLink.Result&gt; {
    // implementation
  }
}"><pre>class MyCustomLink extends ApolloLink {
  request(
    operation: ApolloLink.Operation,
    forward: ApolloLink.ForwardFunction,
<span class="pl-md"><span class="pl-md">-</span> ): Observable&lt;ApolloLink.Result&gt; | null {</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> ): Observable&lt;ApolloLink.Result&gt; {</span>
    // implementation
  }
}</pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12329" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12329/hovercard">#12329</a> <a href="https://github.com/apollographql/apollo-client/commit/61febe4ef8712a2035d7ac89ea7283138db5229d"><code>61febe4</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - Rework package publish format (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2823063806" data-permission-text="Title is private" data-url="https://github.com/apollographql/apollo-client/issues/12329" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12329/hovercard" href="https://github.com/apollographql/apollo-client/pull/12329">#12329</a>, <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2861077912" data-permission-text="Title is private" data-url="https://github.com/apollographql/apollo-client/issues/12382" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12382/hovercard" href="https://github.com/apollographql/apollo-client/pull/12382">#12382</a>)</p>
<p>We have reworked the way Apollo Client is packaged.</p>
<ul>
<li>shipping ESM and CJS</li>
<li>fixing up source maps</li>
<li>the build targets a modern runtime environment (browserslist query: <code>"since 2023, node &gt;= 20, not dead"</code>)</li>
<li>removed the "proxy directory" <code>package.json</code> files, e.g. <code>cache/core/package.json</code> and <code>react/package.json</code>. While these helped with older build tools, modern build tooling uses the <code>exports</code> field in the root <code>package.json</code> instead and the presence of these files can confuse modern build tooling. If your build tooling still relies on those, please update your imports to import from e.g. <code>@apollo/client/cache/core/index.js</code> instead of <code>@apollo/client/cache/core</code> - but generally, this should not be necessary.</li>
<li>added an <code>exports</code> field to <code>package.json</code> to expose entry points</li>
<li>instead of <code>globalThis.__DEV__</code>, Apollo Client now primarily relies on the <code>development</code> and <code>production</code> exports conditions. It falls back to <code>globalThis.__DEV__</code> if the bundler doesn't know these, though.</li>
</ul>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12566" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12566/hovercard">#12566</a> <a href="https://github.com/apollographql/apollo-client/commit/ce4b488bef13f2f5ce1b348d8c3196e198165dd6"><code>ce4b488</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Don't <code>broadcastQueries</code> when a query is torn down.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12397" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12397/hovercard">#12397</a> <a href="https://github.com/apollographql/apollo-client/commit/2545a5415b06283be83eb9c4a03a3a8a39b8bcde"><code>2545a54</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove <code>ObservableQuery.resetQueryStoreErrors</code> method. This method reset some internal state that was not consumed elsewhere in the client and resulted in a no-op.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12384" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12384/hovercard">#12384</a> <a href="https://github.com/apollographql/apollo-client/commit/6aa6fd316cfdb31ebbe3e3133cca2965604e7ca1"><code>6aa6fd3</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove <code>fromPromise</code> utility function. Use <a href="https://rxjs.dev/api/index/function/from" rel="nofollow"><code>from</code></a> instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12388" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12388/hovercard">#12388</a> <a href="https://github.com/apollographql/apollo-client/commit/0d825bef533b41f2e99ef22e620d9f9472825057"><code>0d825be</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Require environments that support <code>WeakMap</code>, <code>WeakSet</code> and symbols. Apollo Client would fallback to <code>Map</code> and <code>Set</code> if the weak versions were not available. This has been removed and expects that these features are available in the source environment.</p>
<p>If you are running in an environment without <code>WeakMap</code>, <code>WeakSet</code> or symbols, you will need to find appropriate polyfills.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12367" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12367/hovercard">#12367</a> <a href="https://github.com/apollographql/apollo-client/commit/e6af35ed30c732ad834e6c524bc9ce5adbe5f706"><code>e6af35e</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>useLazyQuery</code> no longer supports calling the execute function in render and will now throw. If you need to execute the query immediately, use <code>useQuery</code> instead or move the call to a <code>useEffect</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12631" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12631/hovercard">#12631</a> <a href="https://github.com/apollographql/apollo-client/commit/b147cac5c96c44bfc3deb72c12c7521981584c12"><code>b147cac</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - <code>ObservableQuery</code> will now return a <code>loading: false</code> state for <code>fetchPolicy</code> <code>standby</code>, even before subscription</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12639" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12639/hovercard">#12639</a> <a href="https://github.com/apollographql/apollo-client/commit/1bdf4893abb173c97877c71012afa15f9d3da8e6"><code>1bdf489</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove the <code>@apollo/client/testing/core</code> entrypoint in favor of <code>@apollo/client/testing</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12591" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12591/hovercard">#12591</a> <a href="https://github.com/apollographql/apollo-client/commit/a7e738328951f5dac25a5fe48d28b3640a3e0eb9"><code>a7e7383</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Rename the <code>@apollo/client/link/core</code> entrypoint to <code>@apollo/client/link</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12367" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12367/hovercard">#12367</a> <a href="https://github.com/apollographql/apollo-client/commit/e6af35ed30c732ad834e6c524bc9ce5adbe5f706"><code>e6af35e</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The <code>defaultOptions</code> and <code>initialFetchPolicy</code> options are no longer supported with <code>useLazyQuery</code>.</p>
<p>If you use <code>defaultOptions</code>, pass those options directly to the hook instead. If you use <code>initialFetchPolicy</code>, use <code>fetchPolicy</code> instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12823" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12823/hovercard">#12823</a> <a href="https://github.com/apollographql/apollo-client/commit/19e315e316ae458913f4d11961b0a2a365df0a19"><code>19e315e</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The <code>OperationBatcher</code> class is no longer exported from <code>@apollo/client/link/batch</code>. It is an implementation detail of <code>BatchLink</code> and should not be relied on directly.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12809" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12809/hovercard">#12809</a> <a href="https://github.com/apollographql/apollo-client/commit/e2a0be8c3f8b242706f90e0dcc022628992a8ae8"><code>e2a0be8</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>createOperation</code> no longer accepts <code>context</code> as the first argument. Instead make sure <code>context</code> is set as the <code>context</code> property on the request passed to <code>createOperation</code>.</p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="createOperation(
- startingContext,
- { query },
+ { query, context: startingContext },
  { client }
);"><pre>createOperation(
<span class="pl-md"><span class="pl-md">-</span> startingContext,</span>
<span class="pl-md"><span class="pl-md">-</span> { query },</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> { query, context: startingContext },</span>
  { client }
);</pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12556" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12556/hovercard">#12556</a> <a href="https://github.com/apollographql/apollo-client/commit/c3fceda86c5e0f499d0b5fa54ea7dc4c4391ae2c"><code>c3fceda</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - Dropped the <code>saveAsLastResult</code> argument from <code>ObservableQuery.getCurrentResult</code></p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12367" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12367/hovercard">#12367</a> <a href="https://github.com/apollographql/apollo-client/commit/e6af35ed30c732ad834e6c524bc9ce5adbe5f706"><code>e6af35e</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>useLazyQuery</code> no longer supports <code>variables</code> in the hook options and therefore no longer performs variable merging. The execute function must now be called with <code>variables</code> instead.</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="function MyComponent() {
  const [execute] = useLazyQuery(query);

  function runExecute() {
    execute({ variables: { ... }});
  }
}"><pre><span class="pl-k">function</span> <span class="pl-v">MyComponent</span><span class="pl-kos">(</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
  <span class="pl-k">const</span> <span class="pl-kos">[</span><span class="pl-s1">execute</span><span class="pl-kos">]</span> <span class="pl-c1">=</span> <span class="pl-en">useLazyQuery</span><span class="pl-kos">(</span><span class="pl-s1">query</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

  <span class="pl-k">function</span> <span class="pl-en">runExecute</span><span class="pl-kos">(</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
    <span class="pl-en">execute</span><span class="pl-kos">(</span><span class="pl-kos">{</span> <span class="pl-c1">variables</span>: <span class="pl-kos">{</span> ... <span class="pl-kos">}</span><span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
  <span class="pl-kos">}</span>
<span class="pl-kos">}</span></pre></div>
<p>This change means the execute function returned from <code>useLazyQuery</code> is more type-safe. The execute function will require you to pass a <code>variables</code> option if the query type includes required variables.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12614" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12614/hovercard">#12614</a> <a href="https://github.com/apollographql/apollo-client/commit/d2851e2c74541995760a86904b1e3ab4bd736e62"><code>d2851e2</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The resolver function's <code>context</code> argument (the 3rd argument) has changed to provide additional information without the possibility of name clashes. Previously the <code>context</code> argument would spread request context and override the <code>client</code> and <code>cache</code> properties to give access to both inside of a resolver. The <code>context</code> argument takes now takes the following shape:</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="{
  // the request context. By default `TContextValue` is of type `DefaultContext`,
  // but can be changed if a `context` function is provided.
  requestContext: TContextValue,
  // The client instance making the request
  client: ApolloClient,
  // Whether the resolver is run as a result of gathering exported variables
  // or resolving the value as part of the result
  phase: &quot;exports&quot; | &quot;resolve&quot;
}"><pre><span class="pl-kos">{</span>
  <span class="pl-c">// the request context. By default `TContextValue` is of type `DefaultContext`,</span>
  <span class="pl-c">// but can be changed if a `context` function is provided.</span>
  <span class="pl-c1">requestContext</span>: <span class="pl-v">TContextValue</span><span class="pl-kos">,</span>
  <span class="pl-c">// The client instance making the request</span>
  <span class="pl-c1">client</span>: <span class="pl-v">ApolloClient</span><span class="pl-kos">,</span>
  <span class="pl-c">// Whether the resolver is run as a result of gathering exported variables</span>
  <span class="pl-c">// or resolving the value as part of the result</span>
  <span class="pl-c1">phase</span>: <span class="pl-s">"exports"</span> <span class="pl-c1">|</span> <span class="pl-s">"resolve"</span>
<span class="pl-kos">}</span></pre></div>
<p>To migrate, pull any request context from <code>requestContext</code> and the <code>cache</code> from the <code>client</code> property:</p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="new LocalState({
  resolvers: {
    Query: {
-     myResolver: (parent, args, { someValue, cache }) =&gt; {
+     myResolver: (parent, args, { requestContext, client }) =&gt; {
+       const someValue = requestContext.someValue;
+       const cache = client.cache;
      }
    }
  }
});"><pre>new LocalState({
  resolvers: {
    Query: {
<span class="pl-md"><span class="pl-md">-</span>     myResolver: (parent, args, { someValue, cache }) =&gt; {</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>     myResolver: (parent, args, { requestContext, client }) =&gt; {</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>       const someValue = requestContext.someValue;</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>       const cache = client.cache;</span>
      }
    }
  }
});</pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12712" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12712/hovercard">#12712</a> <a href="https://github.com/apollographql/apollo-client/commit/bbb2b61d259da54560a79813b130a977dae10523"><code>bbb2b61</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>cache-only</code> queries no longer poll when a <code>pollInterval</code> is set. Instead a warning is now emitted that polling has no effect. If the <code>fetchPolicy</code> is changed to <code>cache-only</code> after polling is already active, polling is stopped.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12704" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12704/hovercard">#12704</a> <a href="https://github.com/apollographql/apollo-client/commit/45dba43b6ba0c306aad8cfbcfd4029265f5e9106"><code>45dba43</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The <code>response</code> property in <code>onError</code> link has been renamed to <code>result</code>.</p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="- onError(({ response }) =&gt; {
+ onError(({ result }) =&gt; {
    // ...
});"><pre><span class="pl-md"><span class="pl-md">-</span> onError(({ response }) =&gt; {</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> onError(({ result }) =&gt; {</span>
    // ...
});</pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12614" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12614/hovercard">#12614</a> <a href="https://github.com/apollographql/apollo-client/commit/d2851e2c74541995760a86904b1e3ab4bd736e62"><code>d2851e2</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Apollo Client no longer ships with support for <code>@client</code> fields out-of-the-box and now must be opt-in. To opt in to use <code>@client</code> fields, pass an instantiated <code>LocalState</code> instance to the <code>localState</code> option. If a query contains <code>@client</code> and local state hasn't been configured, an error will be thrown.</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import { LocalState } from &quot;@apollo/client/local-state&quot;;

new ApolloClient({
  localState: new LocalState(),
});"><pre><span class="pl-k">import</span> <span class="pl-kos">{</span> <span class="pl-v">LocalState</span> <span class="pl-kos">}</span> <span class="pl-k">from</span> <span class="pl-s">"@apollo/client/local-state"</span><span class="pl-kos">;</span>

<span class="pl-k">new</span> <span class="pl-v">ApolloClient</span><span class="pl-kos">(</span><span class="pl-kos">{</span>
  <span class="pl-c1">localState</span>: <span class="pl-k">new</span> <span class="pl-v">LocalState</span><span class="pl-kos">(</span><span class="pl-kos">)</span><span class="pl-kos">,</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span></pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12532" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12532/hovercard">#12532</a> <a href="https://github.com/apollographql/apollo-client/commit/ae0dcad89924e6b8090ca3182df30e528589b562"><code>ae0dcad</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Default the <code>delay</code> for all mocked responses passed to <code>MockLink</code> using <code>realisticDelay</code>. This ensures your test handles loading states by default and is not reliant on a specific timing.</p>
<p>If you would like to restore the old behavior, use a global default delay of <code>0</code>.</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="MockLink.defaultOptions = {
  delay: 0,
};"><pre><span class="pl-v">MockLink</span><span class="pl-kos">.</span><span class="pl-c1">defaultOptions</span> <span class="pl-c1">=</span> <span class="pl-kos">{</span>
  <span class="pl-c1">delay</span>: <span class="pl-c1">0</span><span class="pl-kos">,</span>
<span class="pl-kos">}</span><span class="pl-kos">;</span></pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12442" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12442/hovercard">#12442</a> <a href="https://github.com/apollographql/apollo-client/commit/c5ead08d0f10ddd6232b742defe9620533bf41e6"><code>c5ead08</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove <code>resetResultIdentities</code> option from <code>InMemoryCache.gc()</code>. This affected object canonization which has been removed.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12304" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12304/hovercard">#12304</a> <a href="https://github.com/apollographql/apollo-client/commit/86469a25abb72dbd68adff3554e3909036e77eee"><code>86469a2</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - ### Changes for users of <code>InMemoryCache</code></p>
<p><code>cache.diff</code> now returns <code>null</code> instead of an empty object (<code>{}</code>) when <code>returnPartialData</code> is <code>true</code> and the result is empty.</p>
<p>If you use <code>cache.diff</code> directly with <code>returnPartialData: true</code>, you will need to check for <code>null</code> before accessing any other fields on the <code>result</code> property. A non-null value indicates that at least one field was present in the cache for the given query document.</p>
<h3>Changes for third-party cache implementations</h3>
<p>The client now expects <code>cache.diff</code> to return <code>null</code> instead of an empty object when there is no data that can be fulfilled from the cache and <code>returnPartialData</code> is <code>true</code>. If your cache implementation returns an empty object, please update this to return <code>null</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12433" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12433/hovercard">#12433</a> <a href="https://github.com/apollographql/apollo-client/commit/b86e50b1dc121cd67fe73655256b6c61afc18cb4"><code>b86e50b</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - Remove workarounds for streaming with non-WhatWG response bodies to reduce bundle size.</p>
<p>This removes support for <code>fetch</code> implementations that return Node Streams, Async Iterators or Blob instances as <code>Response.body</code>.</p>
<p>In the WhatWG Fetch specification, <a href="https://fetch.spec.whatwg.org/#body" rel="nofollow"><code>Response.body</code></a> is specified as a WhatWG <a href="https://streams.spec.whatwg.org/#readablestream" rel="nofollow">ReadableStream</a>.</p>
<p>At this point in time, this is natively supported in browsers, <code>node</code> and React Native (via <a href="https://www.npmjs.com/package/react-native-fetch-api" rel="nofollow">react-native-fetch-api</a>, see our <a href="https://www.apollographql.com/docs/react/integrations/react-native#consuming-multipart-http-via-text-streaming" rel="nofollow">setup instructions for React Native</a>).</p>
<p>If you are using an older <code>fetch</code> polyfill that deviates from the spec, this might not be compatible - for example, <a href="https://github.com/node-fetch/node-fetch?tab=readme-ov-file#interface-body">node-fetch</a> returns a node <code>Readable</code> instead of a <code>ReadableStream</code>.<br>
In those cases, please switch to a compatible alternative such as the <code>node</code>-native <code>fetch</code>, or <code>undici</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12484" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12484/hovercard">#12484</a> <a href="https://github.com/apollographql/apollo-client/commit/9a8b9cebbcf290984a4f154f261a4090e636e50e"><code>9a8b9ce</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove <code>loading</code>, <code>networkStatus</code>, and <code>partial</code> properties on all promise-based query APIs. These properties were mostly static and were unnecessary since promise resolution guaranteed that the query was not longer loading.</p>
<p>This affects the following APIs:</p>
<ul>
<li><code>client.query</code></li>
<li><code>client.refetchQueries</code></li>
<li><code>client.reFetchObservableQueries</code></li>
<li><code>client.resetStore</code></li>
<li><code>observableQuery.fetchMore</code></li>
<li><code>observableQuery.refetch</code></li>
<li><code>observableQuery.reobserve</code></li>
<li><code>observableQuery.setVariables</code></li>
<li>The <code>useLazyQuery</code> <code>execute</code> function</li>
</ul>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12512" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12512/hovercard">#12512</a> <a href="https://github.com/apollographql/apollo-client/commit/e809b71aa9a02917a286afdbb03d5be8e5947c53"><code>e809b71</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>notifyOnNetworkStatusChange</code> now defaults to <code>true</code>. This means that loading states will be emitted (core API) or rendered (React) by default when calling <code>refetch</code>, <code>fetchMore</code>, etc. To maintain the old behavior, set <code>notifyOnNetworkStatusChange</code> to <code>false</code> in <code>defaultOptions</code>.</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="new ApolloClient({
  defaultOptions: {
    watchQuery: {
      // Use the v3 default
      notifyOnNetworkStatusChange: false,
    },
  },
});"><pre><span class="pl-k">new</span> <span class="pl-v">ApolloClient</span><span class="pl-kos">(</span><span class="pl-kos">{</span>
  <span class="pl-c1">defaultOptions</span>: <span class="pl-kos">{</span>
    <span class="pl-c1">watchQuery</span>: <span class="pl-kos">{</span>
      <span class="pl-c">// Use the v3 default</span>
      <span class="pl-c1">notifyOnNetworkStatusChange</span>: <span class="pl-c1">false</span><span class="pl-kos">,</span>
    <span class="pl-kos">}</span><span class="pl-kos">,</span>
  <span class="pl-kos">}</span><span class="pl-kos">,</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span></pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12614" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12614/hovercard">#12614</a> <a href="https://github.com/apollographql/apollo-client/commit/d2851e2c74541995760a86904b1e3ab4bd736e62"><code>d2851e2</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove the <code>fragmentMatcher</code> option from <code>ApolloClient</code>. Custom fragment matchers used with local state are no longer supported. Fragment matching is now performed by the configured <code>cache</code> via the <code>cache.fragmentMatches</code> API.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12430" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12430/hovercard">#12430</a> <a href="https://github.com/apollographql/apollo-client/commit/2ff66d06b6d444fbcb46e580ac40e673e695740f"><code>2ff66d0</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Removes <code>ObservableQuery.result()</code> method. If you use this method and need similar functionality, use the <code>firstValueFrom</code> helper in RxJS.</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import { firstValueFrom, from } from &quot;rxjs&quot;;

// The `from` is necessary to turn `observableQuery` into an RxJS observable
const result = await firstValueFrom(from(observableQuery));"><pre><span class="pl-k">import</span> <span class="pl-kos">{</span> <span class="pl-s1">firstValueFrom</span><span class="pl-kos">,</span> <span class="pl-s1">from</span> <span class="pl-kos">}</span> <span class="pl-k">from</span> <span class="pl-s">"rxjs"</span><span class="pl-kos">;</span>

<span class="pl-c">// The `from` is necessary to turn `observableQuery` into an RxJS observable</span>
<span class="pl-k">const</span> <span class="pl-s1">result</span> <span class="pl-c1">=</span> <span class="pl-k">await</span> <span class="pl-en">firstValueFrom</span><span class="pl-kos">(</span><span class="pl-en">from</span><span class="pl-kos">(</span><span class="pl-s1">observableQuery</span><span class="pl-kos">)</span><span class="pl-kos">)</span><span class="pl-kos">;</span></pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12359" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12359/hovercard">#12359</a> <a href="https://github.com/apollographql/apollo-client/commit/ebb4d9644104244fb066b93a32df778928f2f8a9"><code>ebb4d96</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove the <code>onCompleted</code> and <code>onError</code> callbacks from <code>useQuery</code> and <code>useLazyQuery</code>.</p>
<p>See <a href="https://github.com/apollographql/apollo-client/issues/12352" data-hovercard-type="issue" data-hovercard-url="/apollographql/apollo-client/issues/12352/hovercard">#12352</a> for more context on this change.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12384" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12384/hovercard">#12384</a> <a href="https://github.com/apollographql/apollo-client/commit/6aa6fd316cfdb31ebbe3e3133cca2965604e7ca1"><code>6aa6fd3</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Subscriptions are no longer eagerly started after calling <code>client.subscribe</code>. To kick off the subscription, you will now need to subscribe to the returned observable.</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="// Subscriptions are no longer started when calling subscribe on its own.
const subscriptionObservable = client.subscribe(...);

// Instead, subscribe to the returned observable to kick off the subscription.
subscriptionObservable.subscribe({
  next: (value) =&gt; console.log(value)
});"><pre><span class="pl-c">// Subscriptions are no longer started when calling subscribe on its own.</span>
<span class="pl-k">const</span> <span class="pl-s1">subscriptionObservable</span> <span class="pl-c1">=</span> <span class="pl-s1">client</span><span class="pl-kos">.</span><span class="pl-en">subscribe</span><span class="pl-kos">(</span>...<span class="pl-kos">)</span><span class="pl-kos">;</span>

<span class="pl-c">// Instead, subscribe to the returned observable to kick off the subscription.</span>
<span class="pl-s1">subscriptionObservable</span><span class="pl-kos">.</span><span class="pl-en">subscribe</span><span class="pl-kos">(</span><span class="pl-kos">{</span>
  <span class="pl-en">next</span>: <span class="pl-kos">(</span><span class="pl-s1">value</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s1">value</span><span class="pl-kos">)</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span></pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12476" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12476/hovercard">#12476</a> <a href="https://github.com/apollographql/apollo-client/commit/6afff60beece953406af2cbe07f7ccbf973cadaa"><code>6afff60</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - GraphQL errors or network errors emitted while using an <code>errorPolicy</code> of <code>ignore</code> in subscriptions will no longer emit a result if there is no <code>data</code> emitted along with the error.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12367" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12367/hovercard">#12367</a> <a href="https://github.com/apollographql/apollo-client/commit/e6af35ed30c732ad834e6c524bc9ce5adbe5f706"><code>e6af35e</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>useLazyQuery</code> will now only execute the query when the execute function is called. Previously <code>useLazyQuery</code> would behave like <code>useQuery</code> after the first call to the execute function which means changes to options might perform network requests.</p>
<p>You can now safely rerender <code>useLazyQuery</code> with new options which will take effect the next time you manually trigger the query.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12809" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12809/hovercard">#12809</a> <a href="https://github.com/apollographql/apollo-client/commit/e2a0be8c3f8b242706f90e0dcc022628992a8ae8"><code>e2a0be8</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove the <code>TVariables</code> generic argument on the <code>GraphQLRequest</code> type.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12464" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12464/hovercard">#12464</a> <a href="https://github.com/apollographql/apollo-client/commit/0595f39deba52ac43fa0780b742564134ec7ab89"><code>0595f39</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove the <code>called</code> property from <code>useQuery</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12384" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12384/hovercard">#12384</a> <a href="https://github.com/apollographql/apollo-client/commit/6aa6fd316cfdb31ebbe3e3133cca2965604e7ca1"><code>6aa6fd3</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove <code>toPromise</code> utility function. Use <a href="https://rxjs.dev/api/index/function/firstValueFrom" rel="nofollow"><code>firstValueFrom</code></a> instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12476" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12476/hovercard">#12476</a> <a href="https://github.com/apollographql/apollo-client/commit/6afff60beece953406af2cbe07f7ccbf973cadaa"><code>6afff60</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Subscriptions no longer emit errors in the <code>error</code> callback and instead provide errors on the <code>error</code> property on the result passed to the <code>next</code> callback. As a result, errors will no longer automatically terminate the connection allowing additional results to be emitted when the connection stays open.</p>
<p>When an error terminates the downstream connection, a <code>next</code> event will be emitted with an <code>error</code> property followed by a <code>complete</code> event instead.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12841" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12841/hovercard">#12841</a> <a href="https://github.com/apollographql/apollo-client/commit/65b503fe4bfcf942e8f66f36f622f5f6448d6731"><code>65b503f</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove the <code>DataMasking</code> interface exported from <code>@apollo/client</code> and <code>@apollo/client/masking</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12809" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12809/hovercard">#12809</a> <a href="https://github.com/apollographql/apollo-client/commit/e2a0be8c3f8b242706f90e0dcc022628992a8ae8"><code>e2a0be8</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The context object returned from <code>operation.getContext()</code> is now frozen to prevent mutable changes to the object which could result in subtle bugs. This applies to the <code>previousContext</code> object passed to the <code>operation.setContext()</code> callback as well.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12715" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12715/hovercard">#12715</a> <a href="https://github.com/apollographql/apollo-client/commit/0be0b3f54a1b533c95c69d3698c5c3bdbd6279fe"><code>0be0b3f</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - All links are now available as classes. The old creator functions have been deprecated.</p>
<p>Please migrate these function calls to class creations:</p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import {
- setContext
+ SetContextLink
} from &quot;@apollo/client/link/context&quot;

-const link = setContext(...)
+const link = new SetContextLink(...)"><pre>import {
<span class="pl-md"><span class="pl-md">-</span> setContext</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> SetContextLink</span>
} from "@apollo/client/link/context"

<span class="pl-md"><span class="pl-md">-</span>const link = setContext(...)</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>const link = new SetContextLink(...)</span></pre></div>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import {
- createHttpLink
+ HttpLink
} from &quot;@apollo/client/link/http&quot;

-const link = createHttpLink(...)
+const link = new HttpLink(...)"><pre>import {
<span class="pl-md"><span class="pl-md">-</span> createHttpLink</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> HttpLink</span>
} from "@apollo/client/link/http"

<span class="pl-md"><span class="pl-md">-</span>const link = createHttpLink(...)</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>const link = new HttpLink(...)</span></pre></div>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import {
- createPersistedQueryLink
+ PersistedQueryLink
} from &quot;@apollo/client/link/persisted-queries&quot;

-const link = createPersistedQueryLink(...)
+const link = new PersistedQueryLink(...)"><pre>import {
<span class="pl-md"><span class="pl-md">-</span> createPersistedQueryLink</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> PersistedQueryLink</span>
} from "@apollo/client/link/persisted-queries"

<span class="pl-md"><span class="pl-md">-</span>const link = createPersistedQueryLink(...)</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>const link = new PersistedQueryLink(...)</span></pre></div>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import {
- removeTypenameFromVariables
+ RemoveTypenameFromVariablesLink
} from &quot;@apollo/client/link/remove-typename&quot;

-const link = removeTypenameFromVariables(...)
+const link = new RemoveTypenameFromVariablesLink(...)"><pre>import {
<span class="pl-md"><span class="pl-md">-</span> removeTypenameFromVariables</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> RemoveTypenameFromVariablesLink</span>
} from "@apollo/client/link/remove-typename"

<span class="pl-md"><span class="pl-md">-</span>const link = removeTypenameFromVariables(...)</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>const link = new RemoveTypenameFromVariablesLink(...)</span></pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12530" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12530/hovercard">#12530</a> <a href="https://github.com/apollographql/apollo-client/commit/2973e2a6e6fd81fa59b769d84c252c98ca69440d"><code>2973e2a</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove <code>newData</code> option for mocked responses passed to <code>MockLink</code> or the <code>mocks</code> option on <code>MockedProvider</code>. This option was undocumented and was nearly identical to using the <code>result</code> option as a callback.</p>
<p>To replicate the old behavior of <code>newData</code>, use <code>result</code> as a callback and add the <code>maxUsageCount</code> option with a value set to <code>Number.POSITIVE_INFINITY</code>.</p>
<p><strong>with <code>MockLink</code></strong></p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="new MockLink([
  {
    request: { query, variables },
-   newData: (variables) =&gt; ({ data: { greeting: &quot;Hello &quot; + variables.greeting } }),
+   result: (variables) =&gt; ({ data: { greeting: &quot;Hello &quot; + variables.greeting } }),
+   maxUsageCount: Number.POSITIVE_INFINITY,
  }
])"><pre>new MockLink([
  {
    request: { query, variables },
<span class="pl-md"><span class="pl-md">-</span>   newData: (variables) =&gt; ({ data: { greeting: "Hello " + variables.greeting } }),</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>   result: (variables) =&gt; ({ data: { greeting: "Hello " + variables.greeting } }),</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>   maxUsageCount: Number.POSITIVE_INFINITY,</span>
  }
])</pre></div>
<p><strong>with <code>MockedProvider</code></strong></p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="&lt;MockedProvider
  mocks={[
    {
      request: { query, variables },
-     newData: (variables) =&gt; ({ data: { greeting: &quot;Hello &quot; + variables.greeting } }),
+     result: (variables) =&gt; ({ data: { greeting: &quot;Hello &quot; + variables.greeting } }),
+     maxUsageCount: Number.POSITIVE_INFINITY,
    }
  ]}
/&gt;"><pre>&lt;MockedProvider
  mocks={[
    {
      request: { query, variables },
<span class="pl-md"><span class="pl-md">-</span>     newData: (variables) =&gt; ({ data: { greeting: "Hello " + variables.greeting } }),</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>     result: (variables) =&gt; ({ data: { greeting: "Hello " + variables.greeting } }),</span>
<span class="pl-mi1"><span class="pl-mi1">+</span>     maxUsageCount: Number.POSITIVE_INFINITY,</span>
    }
  ]}
/&gt;</pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12556" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12556/hovercard">#12556</a> <a href="https://github.com/apollographql/apollo-client/commit/c3fceda86c5e0f499d0b5fa54ea7dc4c4391ae2c"><code>c3fceda</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - A call to <code>ObservableQuery.setVariables</code> with different variables or a <code>ObservableQuery.refetch</code> call will always now guarantee that a value will be emitted from the observable, even if it is deep equal to the previous value.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12647" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12647/hovercard">#12647</a> <a href="https://github.com/apollographql/apollo-client/commit/a70fac6dd8f26b46c813723a7206e55bfb677690"><code>a70fac6</code></a> Thanks <a href="https://github.com/phryneas">@phryneas</a>! - <code>ApolloClient.stop()</code> now cleans up more agressively to prevent memory leaks:</p>
<ul>
<li>It will now unsubscribe all active <code>ObservableQuery</code> instances by emitting a <code>completed</code> event.</li>
<li>It will now reject all currently running queries with <code>"QueryManager stopped while query was in flight"</code>.</li>
<li>It will remove all queryRefs from the suspense cache.</li>
</ul>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12809" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12809/hovercard">#12809</a> <a href="https://github.com/apollographql/apollo-client/commit/e2a0be8c3f8b242706f90e0dcc022628992a8ae8"><code>e2a0be8</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - The <code>forward</code> function passed to the request handler is now always provided to <code>request</code> and no longer optional. If you create custom links by subclassing <code>ApolloLink</code>, the <code>forward</code> function no longer needs to be optional:</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="class CustomLink extends ApolloLink {
  request(
    operation: ApolloLink.Operation,
    // This no longer needs to be typed as optional
    forward: ApolloLink.ForwardFunction
  ) {
    // ...
  }
}"><pre><span class="pl-k">class</span> <span class="pl-smi">CustomLink</span> <span class="pl-k">extends</span> <span class="pl-v">ApolloLink</span> <span class="pl-kos">{</span>
  <span class="pl-en">request</span><span class="pl-kos">(</span>
    <span class="pl-s1">operation</span>: <span class="pl-v">ApolloLink</span><span class="pl-kos">.</span><span class="pl-smi">Operation</span><span class="pl-kos">,</span>
    <span class="pl-c">// This no longer needs to be typed as optional</span>
    <span class="pl-s1">forward</span>: <span class="pl-v">ApolloLink</span><span class="pl-kos">.</span><span class="pl-smi">ForwardFunction</span>
  <span class="pl-kos">)</span> <span class="pl-kos">{</span>
    <span class="pl-c">// ...</span>
  <span class="pl-kos">}</span>
<span class="pl-kos">}</span></pre></div>
<p>As a result of this change, <code>ApolloLink</code> no longer detects terminating links by checking function arity on the request handler. This means using methods such as <code>concat</code> on a terminating link no longer emit a warning. On the flip side, if the terminating link calls the <code>forward</code> function, a warning is emitted and an observable that immediately completes is returned which will result in an error from Apollo Client.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12589" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12589/hovercard">#12589</a> <a href="https://github.com/apollographql/apollo-client/commit/15f5a1c29ac05015387a7bbc2dbe9a91d09fedfa"><code>15f5a1c</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Require the <code>link</code> option when instantiating <code>ApolloClient</code>. This removes the <code>uri</code>, <code>credentials</code> and <code>headers</code> options from <code>ApolloClient</code> in favor of passing an instantiated <code>HttpLink</code> directly. To migrate:</p>
<p><strong>If using <code>uri</code>, <code>credentials</code>, or <code>headers</code> options</strong></p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="new ApolloClient({
  // ...
- uri,
- credentials,
- headers,
+ link: new HttpLink({ uri, credentials, headers }),
// or if you prefer the function call approach:
+ link: createHttpLink({ uri, credentials, headers }),
});"><pre>new ApolloClient({
  // ...
<span class="pl-md"><span class="pl-md">-</span> uri,</span>
<span class="pl-md"><span class="pl-md">-</span> credentials,</span>
<span class="pl-md"><span class="pl-md">-</span> headers,</span>
<span class="pl-mi1"><span class="pl-mi1">+</span> link: new HttpLink({ uri, credentials, headers }),</span>
// or if you prefer the function call approach:
<span class="pl-mi1"><span class="pl-mi1">+</span> link: createHttpLink({ uri, credentials, headers }),</span>
});</pre></div>
<p><strong>If creating a client without the <code>link</code> option</strong></p>
<div class="highlight highlight-source-diff notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="new ApolloClient({
  // ...
+ link: ApolloLink.empty()
});"><pre>new ApolloClient({
  // ...
<span class="pl-mi1"><span class="pl-mi1">+</span> link: ApolloLink.empty()</span>
});</pre></div>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12304" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12304/hovercard">#12304</a> <a href="https://github.com/apollographql/apollo-client/commit/86469a25abb72dbd68adff3554e3909036e77eee"><code>86469a2</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - ### Changes for users of <code>InMemoryCache</code></p>
<p><code>cache.diff</code> no longer throws when <code>returnPartialData</code> is set to <code>false</code> without a complete result. Instead, <code>cache.diff</code> will return <code>null</code> when it is unable to read a full cache result.</p>
<p>If you use <code>cache.diff</code> directly with <code>returnPartialData: false</code>, remove the <code>try</code>/<code>catch</code> block and replace with a check for <code>null</code>.</p>
<h3>Changes for third-party cache implementations</h3>
<p>The client now expects <code>cache.diff</code> to return <code>null</code> instead of throwing when the cache returns an incomplete result and <code>returnPartialData</code> is <code>false</code>. The internal <code>try</code>/<code>catch</code> blocks have been removed around <code>cache.diff</code>. If your cache implementation throws for incomplete results, please update this to return <code>null</code>.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12451" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12451/hovercard">#12451</a> <a href="https://github.com/apollographql/apollo-client/commit/77e1b133bdba32c67b5a840090dbacb16282dee9"><code>77e1b13</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Default the <code>TData</code> generic type to <code>unknown</code> in all APIs that use a <code>TData</code> generic argument such as <code>useQuery</code>, <code>client.query</code>, etc.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12562" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12562/hovercard">#12562</a> <a href="https://github.com/apollographql/apollo-client/commit/90bf0e61516a382182f212ac8ab891099e2eb009"><code>90bf0e6</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - <code>client.query</code> no longer supports a <code>fetchPolicy</code> of <code>standby</code>. <code>standby</code> does not fetch and did not return <code>data</code>. <code>standby</code> is meant for watched queries where fetching should be on hold.</p>
</li>
<li>
<p><a href="https://github.com/apollographql/apollo-client/pull/12211" data-hovercard-type="pull_request" data-hovercard-url="/apollographql/apollo-client/pull/12211/hovercard">#12211</a> <a href="https://github.com/apollographql/apollo-client/commit/c2736db3ad6f8b6e56f065682d5b76614f41bfd4"><code>c2736db</code></a> Thanks <a href="https://github.com/jerelmiller">@jerelmiller</a>! - Remove the deprecated <code>Query</code>, <code>Mutation</code>, and <code>Subscription</code> components. Use the provided React hooks instead.</p>
</li>
</ul>
</details>
<h3>Minor changes</h3>
<p>For a comprehensive look at all the minor changes, see the <a href="https://github.com/apollographql/apollo-client/blob/main/CHANGELOG.md#400">changelog</a>.</p>
<h3>Patch changes</h3>
<p>For a comprehensive look at all the patch changes, see the <a href="https://github.com/apollographql/apollo-client/blob/main/CHANGELOG.md#400">changelog</a>.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from carbon: v11.90.0-rc.0]]></title>
            <link>https://github.com/carbon-design-system/carbon/releases/tag/v11.90.0-rc.0</link>
            <guid>https://github.com/carbon-design-system/carbon/releases/tag/v11.90.0-rc.0</guid>
            <pubDate>Mon, 25 Aug 2025 16:20:30 GMT</pubDate>
            <content:encoded><![CDATA[No content.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from cube: v1.3.58]]></title>
            <link>https://github.com/cube-js/cube/releases/tag/v1.3.58</link>
            <guid>https://github.com/cube-js/cube/releases/tag/v1.3.58</guid>
            <pubDate>Mon, 25 Aug 2025 12:08:23 GMT</pubDate>
            <content:encoded><![CDATA[<h2><a href="https://github.com/cube-js/cube/compare/v1.3.57...v1.3.58">1.3.58</a> (2025-08-25)</h2>
<h3>Bug Fixes</h3>
<ul>
<li><strong>schema-compiler:</strong> Use join tree for pre-agg matching (<a href="https://github.com/cube-js/cube/issues/9597" data-hovercard-type="pull_request" data-hovercard-url="/cube-js/cube/pull/9597/hovercard">#9597</a>) (<a href="https://github.com/cube-js/cube/commit/c0341ba94c5aae9c5ffef178bd6ccca27735db46">c0341ba</a>)</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from arrow: r-universe-release]]></title>
            <link>https://github.com/apache/arrow/releases/tag/r-universe-release</link>
            <guid>https://github.com/apache/arrow/releases/tag/r-universe-release</guid>
            <pubDate>Mon, 25 Aug 2025 08:53:33 GMT</pubDate>
            <content:encoded><![CDATA[<p>21.0.0.1</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from core: v3.5.20]]></title>
            <link>https://github.com/vuejs/core/releases/tag/v3.5.20</link>
            <guid>https://github.com/vuejs/core/releases/tag/v3.5.20</guid>
            <pubDate>Mon, 25 Aug 2025 07:12:00 GMT</pubDate>
            <content:encoded><![CDATA[<p>For stable releases, please refer to <a href="https://github.com/vuejs/core/blob/main/CHANGELOG.md">CHANGELOG.md</a> for details.<br>
For pre-releases, please refer to <a href="https://github.com/vuejs/core/blob/minor/CHANGELOG.md">CHANGELOG.md</a> of the <code>minor</code> branch.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from redis: 8.2.1]]></title>
            <link>https://github.com/redis/redis/releases/tag/8.2.1</link>
            <guid>https://github.com/redis/redis/releases/tag/8.2.1</guid>
            <pubDate>Mon, 25 Aug 2025 05:34:13 GMT</pubDate>
            <content:encoded><![CDATA[<p>Update urgency: <code>MODERATE</code>: Program an upgrade of the server, but it's not urgent.</p>
<h3>Bug fixes</h3>
<ul>
<li><a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3279771369" data-permission-text="Title is private" data-url="https://github.com/redis/redis/issues/14240" data-hovercard-type="pull_request" data-hovercard-url="/redis/redis/pull/14240/hovercard" href="https://github.com/redis/redis/pull/14240">#14240</a> <code>INFO KEYSIZES</code> - potential incorrect histogram updates on cluster mode with modules</li>
<li><a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3319005379" data-permission-text="Title is private" data-url="https://github.com/redis/redis/issues/14274" data-hovercard-type="pull_request" data-hovercard-url="/redis/redis/pull/14274/hovercard" href="https://github.com/redis/redis/pull/14274">#14274</a> Disable Active Defrag during flushing replica</li>
<li><a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3321612545" data-permission-text="Title is private" data-url="https://github.com/redis/redis/issues/14276" data-hovercard-type="pull_request" data-hovercard-url="/redis/redis/pull/14276/hovercard" href="https://github.com/redis/redis/pull/14276">#14276</a> <code>XADD</code> and <code>XTRIM</code> can crash the server after loading an RDB</li>
<li><a href="https://github.com/RediSearch/RediSearch/pull/6601" data-hovercard-type="pull_request" data-hovercard-url="/RediSearch/RediSearch/pull/6601/hovercard">#Q6601</a> Potential crash when running <code>FLUSHDB</code> (MOD-10681)</li>
</ul>
<h3>Performance and resource utilization</h3>
<ul>
<li>Query Engine - LeanVec and LVQ proprietary Intel optimizations were removed from Redis Open Source</li>
<li><a href="https://github.com/RediSearch/RediSearch/pull/6621" data-hovercard-type="pull_request" data-hovercard-url="/RediSearch/RediSearch/pull/6621/hovercard">#Q6621</a> Fix regression in <code>INFO</code> (MOD-10779)</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from next.js: v15.5.1-canary.7]]></title>
            <link>https://github.com/vercel/next.js/releases/tag/v15.5.1-canary.7</link>
            <guid>https://github.com/vercel/next.js/releases/tag/v15.5.1-canary.7</guid>
            <pubDate>Sun, 24 Aug 2025 23:36:32 GMT</pubDate>
            <content:encoded><![CDATA[<h3>Misc Changes</h3>
<ul>
<li>[turbopack] Optimize <code>export const</code> to bind readonly values not getters: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3332100929" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82760" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82760/hovercard" href="https://github.com/vercel/next.js/pull/82760">#82760</a></li>
<li>fix: change "noUnknownAtRules" to "warn" for Biome: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3349325344" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82974" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82974/hovercard" href="https://github.com/vercel/next.js/pull/82974">#82974</a></li>
</ul>
<h3>Credits</h3>
<p>Huge thanks to <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/lukesandberg/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/lukesandberg">@lukesandberg</a> and <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/bgub/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/bgub">@bgub</a> for helping!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from cabal: cabal-head]]></title>
            <link>https://github.com/haskell/cabal/releases/tag/cabal-head</link>
            <guid>https://github.com/haskell/cabal/releases/tag/cabal-head</guid>
            <pubDate>Sun, 24 Aug 2025 22:29:49 GMT</pubDate>
            <content:encoded><![CDATA[<p>No release body provided.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from genkit: vertexai-v1.17.1: chore: JS version bump]]></title>
            <link>https://github.com/firebase/genkit/releases/tag/vertexai-v1.17.1</link>
            <guid>https://github.com/firebase/genkit/releases/tag/vertexai-v1.17.1</guid>
            <pubDate>Sun, 24 Aug 2025 20:56:07 GMT</pubDate>
            <content:encoded><![CDATA[<p>@genkit-ai/core version from 1.17.0 to 1.17.1<br>
@genkit-ai/ai version from 1.17.0 to 1.17.1<br>
genkit version from 1.17.0 to 1.17.1<br>
genkitx-chromadb version from 1.17.0 to 1.17.1<br>
@genkit-ai/dev-local-vectorstore version from 1.17.0 to 1.17.1<br>
@genkit-ai/evaluator version from 1.17.0 to 1.17.1<br>
@genkit-ai/firebase version from 1.17.0 to 1.17.1<br>
@genkit-ai/google-cloud version from 1.17.0 to 1.17.1<br>
@genkit-ai/googleai version from 1.17.0 to 1.17.1<br>
genkitx-langchain version from 1.17.0 to 1.17.1<br>
@genkit-ai/next version from 1.17.0 to 1.17.1<br>
genkitx-ollama version from 1.17.0 to 1.17.1<br>
genkitx-pinecone version from 1.17.0 to 1.17.1<br>
@genkit-ai/vertexai version from 1.17.0 to 1.17.1<br>
@genkit-ai/checks version from 1.17.0 to 1.17.1<br>
@genkit-ai/mcp version from 1.17.0 to 1.17.1<br>
@genkit-ai/express version from 1.17.0 to 1.17.1<br>
genkitx-cloud-sql-pg version from 1.17.0 to 1.17.1<br>
@genkit-ai/compat-oai version from 1.17.0 to 1.17.1<br>
@genkit-ai/google-genai version from 1.17.0 to 1.17.1</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from genkit: next-v1.17.1: chore: JS version bump]]></title>
            <link>https://github.com/firebase/genkit/releases/tag/next-v1.17.1</link>
            <guid>https://github.com/firebase/genkit/releases/tag/next-v1.17.1</guid>
            <pubDate>Sun, 24 Aug 2025 20:56:07 GMT</pubDate>
            <content:encoded><![CDATA[<p>@genkit-ai/core version from 1.17.0 to 1.17.1<br>
@genkit-ai/ai version from 1.17.0 to 1.17.1<br>
genkit version from 1.17.0 to 1.17.1<br>
genkitx-chromadb version from 1.17.0 to 1.17.1<br>
@genkit-ai/dev-local-vectorstore version from 1.17.0 to 1.17.1<br>
@genkit-ai/evaluator version from 1.17.0 to 1.17.1<br>
@genkit-ai/firebase version from 1.17.0 to 1.17.1<br>
@genkit-ai/google-cloud version from 1.17.0 to 1.17.1<br>
@genkit-ai/googleai version from 1.17.0 to 1.17.1<br>
genkitx-langchain version from 1.17.0 to 1.17.1<br>
@genkit-ai/next version from 1.17.0 to 1.17.1<br>
genkitx-ollama version from 1.17.0 to 1.17.1<br>
genkitx-pinecone version from 1.17.0 to 1.17.1<br>
@genkit-ai/vertexai version from 1.17.0 to 1.17.1<br>
@genkit-ai/checks version from 1.17.0 to 1.17.1<br>
@genkit-ai/mcp version from 1.17.0 to 1.17.1<br>
@genkit-ai/express version from 1.17.0 to 1.17.1<br>
genkitx-cloud-sql-pg version from 1.17.0 to 1.17.1<br>
@genkit-ai/compat-oai version from 1.17.0 to 1.17.1<br>
@genkit-ai/google-genai version from 1.17.0 to 1.17.1</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from genkit: mcp-v1.17.1: chore: JS version bump]]></title>
            <link>https://github.com/firebase/genkit/releases/tag/mcp-v1.17.1</link>
            <guid>https://github.com/firebase/genkit/releases/tag/mcp-v1.17.1</guid>
            <pubDate>Sun, 24 Aug 2025 20:56:07 GMT</pubDate>
            <content:encoded><![CDATA[<p>@genkit-ai/core version from 1.17.0 to 1.17.1<br>
@genkit-ai/ai version from 1.17.0 to 1.17.1<br>
genkit version from 1.17.0 to 1.17.1<br>
genkitx-chromadb version from 1.17.0 to 1.17.1<br>
@genkit-ai/dev-local-vectorstore version from 1.17.0 to 1.17.1<br>
@genkit-ai/evaluator version from 1.17.0 to 1.17.1<br>
@genkit-ai/firebase version from 1.17.0 to 1.17.1<br>
@genkit-ai/google-cloud version from 1.17.0 to 1.17.1<br>
@genkit-ai/googleai version from 1.17.0 to 1.17.1<br>
genkitx-langchain version from 1.17.0 to 1.17.1<br>
@genkit-ai/next version from 1.17.0 to 1.17.1<br>
genkitx-ollama version from 1.17.0 to 1.17.1<br>
genkitx-pinecone version from 1.17.0 to 1.17.1<br>
@genkit-ai/vertexai version from 1.17.0 to 1.17.1<br>
@genkit-ai/checks version from 1.17.0 to 1.17.1<br>
@genkit-ai/mcp version from 1.17.0 to 1.17.1<br>
@genkit-ai/express version from 1.17.0 to 1.17.1<br>
genkitx-cloud-sql-pg version from 1.17.0 to 1.17.1<br>
@genkit-ai/compat-oai version from 1.17.0 to 1.17.1<br>
@genkit-ai/google-genai version from 1.17.0 to 1.17.1</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from genkit: googleai-v1.17.1: chore: JS version bump]]></title>
            <link>https://github.com/firebase/genkit/releases/tag/googleai-v1.17.1</link>
            <guid>https://github.com/firebase/genkit/releases/tag/googleai-v1.17.1</guid>
            <pubDate>Sun, 24 Aug 2025 20:56:07 GMT</pubDate>
            <content:encoded><![CDATA[<p>@genkit-ai/core version from 1.17.0 to 1.17.1<br>
@genkit-ai/ai version from 1.17.0 to 1.17.1<br>
genkit version from 1.17.0 to 1.17.1<br>
genkitx-chromadb version from 1.17.0 to 1.17.1<br>
@genkit-ai/dev-local-vectorstore version from 1.17.0 to 1.17.1<br>
@genkit-ai/evaluator version from 1.17.0 to 1.17.1<br>
@genkit-ai/firebase version from 1.17.0 to 1.17.1<br>
@genkit-ai/google-cloud version from 1.17.0 to 1.17.1<br>
@genkit-ai/googleai version from 1.17.0 to 1.17.1<br>
genkitx-langchain version from 1.17.0 to 1.17.1<br>
@genkit-ai/next version from 1.17.0 to 1.17.1<br>
genkitx-ollama version from 1.17.0 to 1.17.1<br>
genkitx-pinecone version from 1.17.0 to 1.17.1<br>
@genkit-ai/vertexai version from 1.17.0 to 1.17.1<br>
@genkit-ai/checks version from 1.17.0 to 1.17.1<br>
@genkit-ai/mcp version from 1.17.0 to 1.17.1<br>
@genkit-ai/express version from 1.17.0 to 1.17.1<br>
genkitx-cloud-sql-pg version from 1.17.0 to 1.17.1<br>
@genkit-ai/compat-oai version from 1.17.0 to 1.17.1<br>
@genkit-ai/google-genai version from 1.17.0 to 1.17.1</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from genkit: google-genai-v1.17.1: chore: JS version bump]]></title>
            <link>https://github.com/firebase/genkit/releases/tag/google-genai-v1.17.1</link>
            <guid>https://github.com/firebase/genkit/releases/tag/google-genai-v1.17.1</guid>
            <pubDate>Sun, 24 Aug 2025 20:56:07 GMT</pubDate>
            <content:encoded><![CDATA[<p>@genkit-ai/core version from 1.17.0 to 1.17.1<br>
@genkit-ai/ai version from 1.17.0 to 1.17.1<br>
genkit version from 1.17.0 to 1.17.1<br>
genkitx-chromadb version from 1.17.0 to 1.17.1<br>
@genkit-ai/dev-local-vectorstore version from 1.17.0 to 1.17.1<br>
@genkit-ai/evaluator version from 1.17.0 to 1.17.1<br>
@genkit-ai/firebase version from 1.17.0 to 1.17.1<br>
@genkit-ai/google-cloud version from 1.17.0 to 1.17.1<br>
@genkit-ai/googleai version from 1.17.0 to 1.17.1<br>
genkitx-langchain version from 1.17.0 to 1.17.1<br>
@genkit-ai/next version from 1.17.0 to 1.17.1<br>
genkitx-ollama version from 1.17.0 to 1.17.1<br>
genkitx-pinecone version from 1.17.0 to 1.17.1<br>
@genkit-ai/vertexai version from 1.17.0 to 1.17.1<br>
@genkit-ai/checks version from 1.17.0 to 1.17.1<br>
@genkit-ai/mcp version from 1.17.0 to 1.17.1<br>
@genkit-ai/express version from 1.17.0 to 1.17.1<br>
genkitx-cloud-sql-pg version from 1.17.0 to 1.17.1<br>
@genkit-ai/compat-oai version from 1.17.0 to 1.17.1<br>
@genkit-ai/google-genai version from 1.17.0 to 1.17.1</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from genkit: google-cloud-v1.17.1: chore: JS version bump]]></title>
            <link>https://github.com/firebase/genkit/releases/tag/google-cloud-v1.17.1</link>
            <guid>https://github.com/firebase/genkit/releases/tag/google-cloud-v1.17.1</guid>
            <pubDate>Sun, 24 Aug 2025 20:56:07 GMT</pubDate>
            <content:encoded><![CDATA[<p>@genkit-ai/core version from 1.17.0 to 1.17.1<br>
@genkit-ai/ai version from 1.17.0 to 1.17.1<br>
genkit version from 1.17.0 to 1.17.1<br>
genkitx-chromadb version from 1.17.0 to 1.17.1<br>
@genkit-ai/dev-local-vectorstore version from 1.17.0 to 1.17.1<br>
@genkit-ai/evaluator version from 1.17.0 to 1.17.1<br>
@genkit-ai/firebase version from 1.17.0 to 1.17.1<br>
@genkit-ai/google-cloud version from 1.17.0 to 1.17.1<br>
@genkit-ai/googleai version from 1.17.0 to 1.17.1<br>
genkitx-langchain version from 1.17.0 to 1.17.1<br>
@genkit-ai/next version from 1.17.0 to 1.17.1<br>
genkitx-ollama version from 1.17.0 to 1.17.1<br>
genkitx-pinecone version from 1.17.0 to 1.17.1<br>
@genkit-ai/vertexai version from 1.17.0 to 1.17.1<br>
@genkit-ai/checks version from 1.17.0 to 1.17.1<br>
@genkit-ai/mcp version from 1.17.0 to 1.17.1<br>
@genkit-ai/express version from 1.17.0 to 1.17.1<br>
genkitx-cloud-sql-pg version from 1.17.0 to 1.17.1<br>
@genkit-ai/compat-oai version from 1.17.0 to 1.17.1<br>
@genkit-ai/google-genai version from 1.17.0 to 1.17.1</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from genkit: genkitx-pinecone@1.17.1: chore: JS version bump]]></title>
            <link>https://github.com/firebase/genkit/releases/tag/genkitx-pinecone%401.17.1</link>
            <guid>https://github.com/firebase/genkit/releases/tag/genkitx-pinecone%401.17.1</guid>
            <pubDate>Sun, 24 Aug 2025 20:56:07 GMT</pubDate>
            <content:encoded><![CDATA[<p>@genkit-ai/core version from 1.17.0 to 1.17.1<br>
@genkit-ai/ai version from 1.17.0 to 1.17.1<br>
genkit version from 1.17.0 to 1.17.1<br>
genkitx-chromadb version from 1.17.0 to 1.17.1<br>
@genkit-ai/dev-local-vectorstore version from 1.17.0 to 1.17.1<br>
@genkit-ai/evaluator version from 1.17.0 to 1.17.1<br>
@genkit-ai/firebase version from 1.17.0 to 1.17.1<br>
@genkit-ai/google-cloud version from 1.17.0 to 1.17.1<br>
@genkit-ai/googleai version from 1.17.0 to 1.17.1<br>
genkitx-langchain version from 1.17.0 to 1.17.1<br>
@genkit-ai/next version from 1.17.0 to 1.17.1<br>
genkitx-ollama version from 1.17.0 to 1.17.1<br>
genkitx-pinecone version from 1.17.0 to 1.17.1<br>
@genkit-ai/vertexai version from 1.17.0 to 1.17.1<br>
@genkit-ai/checks version from 1.17.0 to 1.17.1<br>
@genkit-ai/mcp version from 1.17.0 to 1.17.1<br>
@genkit-ai/express version from 1.17.0 to 1.17.1<br>
genkitx-cloud-sql-pg version from 1.17.0 to 1.17.1<br>
@genkit-ai/compat-oai version from 1.17.0 to 1.17.1<br>
@genkit-ai/google-genai version from 1.17.0 to 1.17.1</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from genkit: tools-common-v1.17.1: chore: CLI version bump]]></title>
            <link>https://github.com/firebase/genkit/releases/tag/tools-common-v1.17.1</link>
            <guid>https://github.com/firebase/genkit/releases/tag/tools-common-v1.17.1</guid>
            <pubDate>Sun, 24 Aug 2025 20:55:30 GMT</pubDate>
            <content:encoded><![CDATA[<p>@genkit-ai/tools-common version from 1.17.0 to 1.17.1<br>
@genkit-ai/telemetry-server version from 1.17.0 to 1.17.1<br>
genkit-cli version from 1.17.0 to 1.17.1</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from genkit: telemetry-server-v1.17.1: chore: CLI version bump]]></title>
            <link>https://github.com/firebase/genkit/releases/tag/telemetry-server-v1.17.1</link>
            <guid>https://github.com/firebase/genkit/releases/tag/telemetry-server-v1.17.1</guid>
            <pubDate>Sun, 24 Aug 2025 20:55:30 GMT</pubDate>
            <content:encoded><![CDATA[<p>@genkit-ai/tools-common version from 1.17.0 to 1.17.1<br>
@genkit-ai/telemetry-server version from 1.17.0 to 1.17.1<br>
genkit-cli version from 1.17.0 to 1.17.1</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from oclif: 4.22.14]]></title>
            <link>https://github.com/oclif/oclif/releases/tag/4.22.14</link>
            <guid>https://github.com/oclif/oclif/releases/tag/4.22.14</guid>
            <pubDate>Sun, 24 Aug 2025 11:22:54 GMT</pubDate>
            <content:encoded><![CDATA[<h3>Bug Fixes</h3>
<ul>
<li><strong>deps:</strong> bump @oclif/plugin-not-found from 3.2.64 to 3.2.66 (<a href="https://github.com/oclif/oclif/commit/e9bfac690222723ba330699278ced53c00edb899">e9bfac6</a>)</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from swc: v1.13.5]]></title>
            <link>https://github.com/swc-project/swc/releases/tag/v1.13.5</link>
            <guid>https://github.com/swc-project/swc/releases/tag/v1.13.5</guid>
            <pubDate>Sun, 24 Aug 2025 11:13:16 GMT</pubDate>
            <content:encoded><![CDATA[No content.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from swc: v1.13.5-nightly-20250824.1]]></title>
            <link>https://github.com/swc-project/swc/releases/tag/v1.13.5-nightly-20250824.1</link>
            <guid>https://github.com/swc-project/swc/releases/tag/v1.13.5-nightly-20250824.1</guid>
            <pubDate>Sun, 24 Aug 2025 10:09:06 GMT</pubDate>
            <content:encoded><![CDATA[No content.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from swc: swc_core@v37.0.0]]></title>
            <link>https://github.com/swc-project/swc/releases/tag/swc_core%40v37.0.0</link>
            <guid>https://github.com/swc-project/swc/releases/tag/swc_core%40v37.0.0</guid>
            <pubDate>Sun, 24 Aug 2025 09:09:25 GMT</pubDate>
            <content:encoded><![CDATA[<p>chore: Publish crates with <code>swc_core</code> <code>v37.0.0</code></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from oclif: 4.22.13]]></title>
            <link>https://github.com/oclif/oclif/releases/tag/4.22.13</link>
            <guid>https://github.com/oclif/oclif/releases/tag/4.22.13</guid>
            <pubDate>Sun, 24 Aug 2025 05:25:42 GMT</pubDate>
            <content:encoded><![CDATA[<h3>Bug Fixes</h3>
<ul>
<li><strong>deps:</strong> bump @aws-sdk/client-cloudfront from 3.864.0 to 3.873.0 (<a href="https://github.com/oclif/oclif/commit/72ec9823dd7f08e9b9167fd3bda439fff0bd9ed5">72ec982</a>)</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from next.js: v15.5.1-canary.6]]></title>
            <link>https://github.com/vercel/next.js/releases/tag/v15.5.1-canary.6</link>
            <guid>https://github.com/vercel/next.js/releases/tag/v15.5.1-canary.6</guid>
            <pubDate>Sat, 23 Aug 2025 23:33:55 GMT</pubDate>
            <content:encoded><![CDATA[<h3>Misc Changes</h3>
<ul>
<li>Turbopack: Lazy decompress medium value compressed blocks: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3282137767" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82257" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82257/hovercard" href="https://github.com/vercel/next.js/pull/82257">#82257</a></li>
<li>Turbopack: bigger small value blocks: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3293561166" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82370" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82370/hovercard" href="https://github.com/vercel/next.js/pull/82370">#82370</a></li>
<li>Turbopack: remove value compression dictionary: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="3289838732" data-permission-text="Title is private" data-url="https://github.com/vercel/next.js/issues/82338" data-hovercard-type="pull_request" data-hovercard-url="/vercel/next.js/pull/82338/hovercard" href="https://github.com/vercel/next.js/pull/82338">#82338</a></li>
</ul>
<h3>Credits</h3>
<p>Huge thanks to <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/sokra/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/sokra">@sokra</a> for helping!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release notes from svelte: svelte@5.38.3]]></title>
            <link>https://github.com/sveltejs/svelte/releases/tag/svelte%405.38.3</link>
            <guid>https://github.com/sveltejs/svelte/releases/tag/svelte%405.38.3</guid>
            <pubDate>Sat, 23 Aug 2025 21:29:01 GMT</pubDate>
            <content:encoded><![CDATA[<h3>Patch Changes</h3>
<ul>
<li>
<p>fix: ensure correct order of template effect values (<a href="https://github.com/sveltejs/svelte/pull/16655" data-hovercard-type="pull_request" data-hovercard-url="/sveltejs/svelte/pull/16655/hovercard">#16655</a>)</p>
</li>
<li>
<p>fix: allow async <code>{@const}</code> in more places (<a href="https://github.com/sveltejs/svelte/pull/16643" data-hovercard-type="pull_request" data-hovercard-url="/sveltejs/svelte/pull/16643/hovercard">#16643</a>)</p>
</li>
<li>
<p>fix: properly catch top level await errors (<a href="https://github.com/sveltejs/svelte/pull/16619" data-hovercard-type="pull_request" data-hovercard-url="/sveltejs/svelte/pull/16619/hovercard">#16619</a>)</p>
</li>
<li>
<p>perf: prune effects without dependencies (<a href="https://github.com/sveltejs/svelte/pull/16625" data-hovercard-type="pull_request" data-hovercard-url="/sveltejs/svelte/pull/16625/hovercard">#16625</a>)</p>
</li>
<li>
<p>fix: only emit <code>for_await_track_reactivity_loss</code> in async mode (<a href="https://github.com/sveltejs/svelte/pull/16644" data-hovercard-type="pull_request" data-hovercard-url="/sveltejs/svelte/pull/16644/hovercard">#16644</a>)</p>
</li>
</ul>]]></content:encoded>
        </item>
    </channel>
</rss>